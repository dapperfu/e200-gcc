/* Builtin functions for rs6000/powerpc.
   Copyright (C) 2009-2014 Free Software Foundation, Inc.
   Contributed by Michael Meissner (meissner@linux.vnet.ibm.com)

   This file is part of GCC.

   GCC is free software; you can redistribute it and/or modify it
   under the terms of the GNU General Public License as published
   by the Free Software Foundation; either version 3, or (at your
   option) any later version.

   GCC is distributed in the hope that it will be useful, but WITHOUT
   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
   License for more details.

   Under Section 7 of GPL version 3, you are granted additional
   permissions described in the GCC Runtime Library Exception, version
   3.1, as published by the Free Software Foundation.

   You should have received a copy of the GNU General Public License and
   a copy of the GCC Runtime Library Exception along with this program;
   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
   <http://www.gnu.org/licenses/>.  */

/* Before including this file, some macros must be defined:
   RS6000_BUILTIN_1 -- 1 arg builtins
   RS6000_BUILTIN_2 -- 2 arg builtins
   RS6000_BUILTIN_3 -- 3 arg builtins
   RS6000_BUILTIN_A -- ABS builtins
   RS6000_BUILTIN_D -- DST builtins
   RS6000_BUILTIN_E -- SPE EVSEL builtins.
   RS6000_BUILTIN_H -- HTM builtins
   RS6000_BUILTIN_P -- Altivec, VSX, ISA 2.07 vector predicate builtins
   RS6000_BUILTIN_Q -- Paired floating point VSX predicate builtins
   RS6000_BUILTIN_S -- SPE predicate builtins
   RS6000_BUILTIN_X -- special builtins

   Each of the above macros takes 4 arguments:
	ENUM	Enumeration name
	NAME	String literal for the name
	MASK	Mask of bits that indicate which options enables the builtin
	ATTR	builtin attribute information.
	ICODE	Insn code of the function that implents the builtin.  */

#ifndef RS6000_BUILTIN_1
  #error "RS6000_BUILTIN_1 is not defined."
#endif

#ifndef RS6000_BUILTIN_2
  #error "RS6000_BUILTIN_2 is not defined."
#endif

#ifndef RS6000_BUILTIN_3
  #error "RS6000_BUILTIN_3 is not defined."
#endif

#ifndef RS6000_BUILTIN_A
  #error "RS6000_BUILTIN_A is not defined."
#endif

#ifndef RS6000_BUILTIN_D
  #error "RS6000_BUILTIN_D is not defined."
#endif

#ifndef RS6000_BUILTIN_E
  #error "RS6000_BUILTIN_E is not defined."
#endif

#ifndef RS6000_BUILTIN_H
  #error "RS6000_BUILTIN_H is not defined."
#endif

#ifndef RS6000_BUILTIN_P
  #error "RS6000_BUILTIN_P is not defined."
#endif

#ifndef RS6000_BUILTIN_Q
  #error "RS6000_BUILTIN_Q is not defined."
#endif

#ifndef RS6000_BUILTIN_S
  #error "RS6000_BUILTIN_S is not defined."
#endif

#ifndef RS6000_BUILTIN_X
  #error "RS6000_BUILTIN_X is not defined."
#endif

#ifndef BU_AV_1
/* Define convenience macros using token pasting to allow fitting everything in
   one line.  */

/* Altivec convenience macros.  */
#define BU_ALTIVEC_1(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_1 (ALTIVEC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_altivec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_ALTIVEC_2(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_2 (ALTIVEC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_altivec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_ALTIVEC_3(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_3 (ALTIVEC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_altivec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_ALTIVEC_A(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_A (ALTIVEC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_altivec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_ABS),					\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_ALTIVEC_D(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_D (ALTIVEC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_altivec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_DST),					\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_ALTIVEC_P(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_P (ALTIVEC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_altivec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_PREDICATE),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_ALTIVEC_X(ENUM, NAME, ATTR)					\
  RS6000_BUILTIN_X (ALTIVEC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_altivec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_SPECIAL),				\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_ALTIVEC_C(ENUM, NAME, ATTR)					\
  RS6000_BUILTIN_X (ALTIVEC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_altivec_" NAME,		/* NAME */	\
		    (RS6000_BTM_ALTIVEC			/* MASK */	\
		     | RS6000_BTM_CELL),				\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_SPECIAL),				\
		    CODE_FOR_nothing)			/* ICODE */

/* Altivec overloaded builtin function macros.  */
#define BU_ALTIVEC_OVERLOAD_1(ENUM, NAME)				\
  RS6000_BUILTIN_1 (ALTIVEC_BUILTIN_VEC_ ## ENUM,	/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_ALTIVEC_OVERLOAD_2(ENUM, NAME)				\
  RS6000_BUILTIN_2 (ALTIVEC_BUILTIN_VEC_ ## ENUM,	/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_ALTIVEC_OVERLOAD_3(ENUM, NAME)				\
  RS6000_BUILTIN_3 (ALTIVEC_BUILTIN_VEC_ ## ENUM,	/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_ALTIVEC_OVERLOAD_A(ENUM, NAME)				\
  RS6000_BUILTIN_A (ALTIVEC_BUILTIN_VEC_ ## ENUM,	/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_ABS),					\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_ALTIVEC_OVERLOAD_D(ENUM, NAME)				\
  RS6000_BUILTIN_D (ALTIVEC_BUILTIN_VEC_ ## ENUM,	/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_DST),					\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_ALTIVEC_OVERLOAD_P(ENUM, NAME)				\
  RS6000_BUILTIN_P (ALTIVEC_BUILTIN_VEC_ ## ENUM,	/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_PREDICATE),				\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_ALTIVEC_OVERLOAD_X(ENUM, NAME)				\
  RS6000_BUILTIN_X (ALTIVEC_BUILTIN_VEC_ ## ENUM,	/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_ALTIVEC,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_SPECIAL),				\
		    CODE_FOR_nothing)			/* ICODE */

/* VSX convenience macros.  */
#define BU_VSX_1(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_1 (VSX_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_vsx_" NAME,		/* NAME */	\
		    RS6000_BTM_VSX,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_VSX_2(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_2 (VSX_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_vsx_" NAME,		/* NAME */	\
		    RS6000_BTM_VSX,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_VSX_3(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_3 (VSX_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_vsx_" NAME,		/* NAME */	\
		    RS6000_BTM_VSX,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_VSX_A(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_A (VSX_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_vsx_" NAME,		/* NAME */	\
		    RS6000_BTM_VSX,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_ABS),					\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_VSX_P(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_P (VSX_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_vsx_" NAME,		/* NAME */	\
		    RS6000_BTM_VSX,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_PREDICATE),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_VSX_X(ENUM, NAME, ATTR)					\
  RS6000_BUILTIN_X (VSX_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_vsx_" NAME,		/* NAME */	\
		    RS6000_BTM_VSX,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_SPECIAL),				\
		    CODE_FOR_nothing)			/* ICODE */

/* VSX overloaded builtin function macros.  */
#define BU_VSX_OVERLOAD_1(ENUM, NAME)					\
  RS6000_BUILTIN_1 (VSX_BUILTIN_VEC_ ## ENUM,		/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_VSX,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_VSX_OVERLOAD_2(ENUM, NAME)					\
  RS6000_BUILTIN_2 (VSX_BUILTIN_VEC_ ## ENUM,		/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_VSX,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_VSX_OVERLOAD_3(ENUM, NAME)					\
  RS6000_BUILTIN_3 (VSX_BUILTIN_VEC_ ## ENUM,		/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_VSX,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_nothing)			/* ICODE */

/* xxpermdi and xxsldwi are overloaded functions, but had __builtin_vsx names
   instead of __builtin_vec.  */
#define BU_VSX_OVERLOAD_3V(ENUM, NAME)					\
  RS6000_BUILTIN_3 (VSX_BUILTIN_VEC_ ## ENUM,		/* ENUM */	\
		    "__builtin_vsx_" NAME,		/* NAME */	\
		    RS6000_BTM_VSX,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_VSX_OVERLOAD_X(ENUM, NAME)					\
  RS6000_BUILTIN_X (VSX_BUILTIN_VEC_ ## ENUM,		/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_VSX,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_SPECIAL),				\
		    CODE_FOR_nothing)			/* ICODE */

/* ISA 2.07 (power8) vector convenience macros.  */
/* For the instructions that are encoded as altivec instructions use
   __builtin_altivec_ as the builtin name.  */
#define BU_P8V_AV_1(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_1 (P8V_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_altivec_" NAME,		/* NAME */	\
		    RS6000_BTM_P8_VECTOR,		/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_P8V_AV_2(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_2 (P8V_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_altivec_" NAME,		/* NAME */	\
		    RS6000_BTM_P8_VECTOR,		/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_P8V_AV_3(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_3 (P8V_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_altivec_" NAME,		/* NAME */	\
		    RS6000_BTM_P8_VECTOR,		/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_P8V_AV_P(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_P (P8V_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_altivec_" NAME,		/* NAME */	\
		    RS6000_BTM_P8_VECTOR,		/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_PREDICATE),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

/* For the instructions encoded as VSX instructions use __builtin_vsx as the
   builtin name.  */
#define BU_P8V_VSX_1(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_1 (P8V_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_vsx_" NAME,		/* NAME */	\
		    RS6000_BTM_P8_VECTOR,		/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_P8V_OVERLOAD_1(ENUM, NAME)					\
  RS6000_BUILTIN_1 (P8V_BUILTIN_VEC_ ## ENUM,		/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_P8_VECTOR,		/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_P8V_OVERLOAD_2(ENUM, NAME)					\
  RS6000_BUILTIN_2 (P8V_BUILTIN_VEC_ ## ENUM,		/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_P8_VECTOR,		/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_P8V_OVERLOAD_3(ENUM, NAME)					\
  RS6000_BUILTIN_3 (P8V_BUILTIN_VEC_ ## ENUM,		/* ENUM */	\
		    "__builtin_vec_" NAME,		/* NAME */	\
		    RS6000_BTM_P8_VECTOR,		/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_nothing)			/* ICODE */

/* Crypto convenience macros.  */
#define BU_CRYPTO_1(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_1 (CRYPTO_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_crypto_" NAME,		/* NAME */	\
		    RS6000_BTM_CRYPTO,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_CRYPTO_2(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_2 (CRYPTO_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_crypto_" NAME,		/* NAME */	\
		    RS6000_BTM_CRYPTO,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_CRYPTO_3(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_3 (CRYPTO_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_crypto_" NAME,		/* NAME */	\
		    RS6000_BTM_CRYPTO,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_CRYPTO_OVERLOAD_1(ENUM, NAME)				\
  RS6000_BUILTIN_1 (CRYPTO_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_crypto_" NAME,		/* NAME */	\
		    RS6000_BTM_CRYPTO,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_CRYPTO_OVERLOAD_2(ENUM, NAME)				\
  RS6000_BUILTIN_2 (CRYPTO_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_crypto_" NAME,		/* NAME */	\
		    RS6000_BTM_CRYPTO,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_CRYPTO_OVERLOAD_3(ENUM, NAME)				\
  RS6000_BUILTIN_3 (CRYPTO_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_crypto_" NAME,		/* NAME */	\
		    RS6000_BTM_CRYPTO,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_nothing)			/* ICODE */

/* HTM convenience macros.  */
#define BU_HTM_0(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_H (HTM_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_" NAME,			/* NAME */	\
		    RS6000_BTM_HTM,			/* MASK */	\
		    RS6000_BTC_ ## ATTR,		/* ATTR */	\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_HTM_1(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_H (HTM_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_" NAME,			/* NAME */	\
		    RS6000_BTM_HTM,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_HTM_2(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_H (HTM_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_" NAME,			/* NAME */	\
		    RS6000_BTM_HTM,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_HTM_3(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_H (HTM_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_" NAME,			/* NAME */	\
		    RS6000_BTM_HTM,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_HTM_SPR0(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_H (HTM_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_" NAME,			/* NAME */	\
		    RS6000_BTM_HTM,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_SPR),					\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_HTM_SPR1(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_H (HTM_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_" NAME,			/* NAME */	\
		    RS6000_BTM_HTM,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_UNARY					\
		     | RS6000_BTC_SPR					\
		     | RS6000_BTC_VOID),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

/* SPE convenience macros.  */
#define BU_SPE_1(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_1 (SPE_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_spe_" NAME,		/* NAME */	\
		    RS6000_BTM_SPE,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_SPE_2(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_2 (SPE_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_spe_" NAME,		/* NAME */	\
		    RS6000_BTM_SPE,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_SPE_3(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_3 (SPE_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_spe_" NAME,		/* NAME */	\
		    RS6000_BTM_SPE,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_SPE_E(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_E (SPE_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_spe_" NAME,		/* NAME */	\
		    RS6000_BTM_SPE,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_EVSEL),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_SPE_P(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_S (SPE_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_spe_" NAME,		/* NAME */	\
		    RS6000_BTM_SPE,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_PREDICATE),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_SPE_X(ENUM, NAME, ATTR)					\
  RS6000_BUILTIN_X (SPE_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_spe_" NAME,		/* NAME */	\
		    RS6000_BTM_SPE,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_SPECIAL),				\
		    CODE_FOR_nothing)			/* ICODE */

/* Paired floating point convenience macros.  */
#define BU_PAIRED_1(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_1 (PAIRED_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_paired_" NAME,		/* NAME */	\
		    RS6000_BTM_PAIRED,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_PAIRED_2(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_2 (PAIRED_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_paired_" NAME,		/* NAME */	\
		    RS6000_BTM_PAIRED,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_PAIRED_3(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_3 (PAIRED_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_paired_" NAME,		/* NAME */	\
		    RS6000_BTM_PAIRED,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_PAIRED_P(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_Q (PAIRED_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_paired_" NAME,		/* NAME */	\
		    RS6000_BTM_PAIRED,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_PREDICATE),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_PAIRED_X(ENUM, NAME, ATTR)					\
  RS6000_BUILTIN_X (PAIRED_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_paired_" NAME,		/* NAME */	\
		    RS6000_BTM_PAIRED,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_SPECIAL),				\
		    CODE_FOR_nothing)			/* ICODE */

#define BU_SPECIAL_X(ENUM, NAME, MASK, ATTR)				\
  RS6000_BUILTIN_X (ENUM,				/* ENUM */	\
		    NAME,				/* NAME */	\
		    MASK,				/* MASK */	\
		    (ATTR | RS6000_BTC_SPECIAL),	/* ATTR */	\
		    CODE_FOR_nothing)			/* ICODE */


/* Decimal floating point builtins for instructions.  */
#define BU_DFP_MISC_1(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_1 (MISC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_" NAME,			/* NAME */	\
		    RS6000_BTM_DFP,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_DFP_MISC_2(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_2 (MISC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_" NAME,			/* NAME */	\
		    RS6000_BTM_DFP,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */


/* Miscellaneous builtins for instructions added in ISA 2.06.  These
   instructions don't require either the DFP or VSX options, just the basic ISA
   2.06 (popcntd) enablement since they operate on general purpose
   registers.  */
#define BU_P7_MISC_1(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_1 (MISC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_" NAME,			/* NAME */	\
		    RS6000_BTM_POPCNTD,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_P7_MISC_2(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_2 (MISC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_" NAME,			/* NAME */	\
		    RS6000_BTM_POPCNTD,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */


/* Miscellaneous builtins for instructions added in ISA 2.07.  These
   instructions do require the ISA 2.07 vector support, but they aren't vector
   instructions.  */
#define BU_P8V_MISC_3(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_3 (MISC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_" NAME,			/* NAME */	\
		    RS6000_BTM_P8_VECTOR,		/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

/* 128-bit long double floating point builtins.  */
#define BU_LDBL128_2(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_2 (MISC_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_" NAME,			/* NAME */	\
		    (RS6000_BTM_HARD_FLOAT		/* MASK */	\
		     | RS6000_BTM_LDBL128),				\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

/* Power ISA 2.07 altivec */
#define BU_ALTIVC2_2(ENUM, NAME, ATTR, ICODE)                          \
  RS6000_BUILTIN_2 (ALTIVEC_BUILTIN_ ## ENUM,          /* ENUM */      \
                   "__builtin_altivec_" NAME,          /* NAME */      \
                   (RS6000_BTM_ALTIVEC                 /* MASK */      \
                    | RS6000_BTM_ALTIVEC2),                            \
                   (RS6000_BTC_ ## ATTR                /* ATTR */      \
                    | RS6000_BTC_BINARY),                              \
                   CODE_FOR_ ## ICODE)                 /* ICODE */

#define BU_ALTIVC2_X(ENUM, NAME, ATTR)                                 \
  RS6000_BUILTIN_X (ALTIVEC_BUILTIN_ ## ENUM,          /* ENUM */      \
                   "__builtin_altivec_" NAME,          /* NAME */      \
                   (RS6000_BTM_ALTIVEC                 /* MASK */      \
                    | RS6000_BTM_ALTIVEC2),                            \
                   (RS6000_BTC_ ## ATTR                /* ATTR */      \
                    | RS6000_BTC_SPECIAL),                             \
                   CODE_FOR_nothing)                   /* ICODE */

#define BU_ALTIVC2_OVERLOAD_2(ENUM, NAME)                              \
  RS6000_BUILTIN_2 (ALTIVEC_BUILTIN_VEC_ ## ENUM,      /* ENUM */      \
                   "__builtin_vec_" NAME,              /* NAME */      \
                   (RS6000_BTM_ALTIVEC                 /* MASK */      \
                    | RS6000_BTM_ALTIVEC2),                            \
                   (RS6000_BTC_OVERLOADED              /* ATTR */      \
                    | RS6000_BTC_BINARY),                              \
                   CODE_FOR_nothing)                   /* ICODE */

#define BU_ALTIVC2_OVERLOAD_X(ENUM, NAME)                              \
  RS6000_BUILTIN_X (ALTIVEC_BUILTIN_VEC_ ## ENUM,      /* ENUM */      \
                   "__builtin_vec_" NAME,              /* NAME */      \
                   (RS6000_BTM_ALTIVEC                 /* MASK */      \
                    | RS6000_BTM_ALTIVEC2),                            \
                   (RS6000_BTC_OVERLOADED              /* ATTR */      \
                    | RS6000_BTC_SPECIAL),                             \
                   CODE_FOR_nothing)                   /* ICODE */

/* LSP convenience macros.  */
#define BU_LSP_1(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_1 (LSP_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_lsp_" NAME,		/* NAME */	\
		    RS6000_BTM_LSP,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_UNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_LSP_2(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_2 (LSP_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_lsp_" NAME,		/* NAME */	\
		    RS6000_BTM_LSP,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_BINARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_LSP_3(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_3 (LSP_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_lsp_" NAME,		/* NAME */	\
		    RS6000_BTM_LSP,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_TERNARY),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_LSP_P(ENUM, NAME, ATTR, ICODE)				\
  RS6000_BUILTIN_S (LSP_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_lsp_" NAME,		/* NAME */	\
		    RS6000_BTM_LSP,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_PREDICATE),				\
		    CODE_FOR_ ## ICODE)			/* ICODE */

#define BU_LSP_X(ENUM, NAME, ATTR)				\
  RS6000_BUILTIN_X (LSP_BUILTIN_ ## ENUM,		/* ENUM */	\
		    "__builtin_lsp_" NAME,		/* NAME */	\
		    RS6000_BTM_LSP,			/* MASK */	\
		    (RS6000_BTC_ ## ATTR		/* ATTR */	\
		     | RS6000_BTC_SPECIAL),				\
		    CODE_FOR_nothing)

#endif

/* Insure 0 is not a legitimate index.  */
BU_SPECIAL_X (RS6000_BUILTIN_NONE, NULL, 0, RS6000_BTC_MISC)

/* 3 argument Altivec builtins.  */
BU_ALTIVEC_3 (VMADDFP,        "vmaddfp",        FP,    	fmav4sf4)
BU_ALTIVEC_3 (VMHADDSHS,      "vmhaddshs",      SAT,   	altivec_vmhaddshs)
BU_ALTIVEC_3 (VMHRADDSHS,     "vmhraddshs",     SAT,   	altivec_vmhraddshs)
BU_ALTIVEC_3 (VMLADDUHM,      "vmladduhm",      CONST, 	altivec_vmladduhm)
BU_ALTIVEC_3 (VMSUMUBM,       "vmsumubm",       CONST, 	altivec_vmsumubm)
BU_ALTIVEC_3 (VMSUMMBM,       "vmsummbm",       CONST, 	altivec_vmsummbm)
BU_ALTIVEC_3 (VMSUMUHM,       "vmsumuhm",       CONST, 	altivec_vmsumuhm)
BU_ALTIVEC_3 (VMSUMSHM,       "vmsumshm",       CONST, 	altivec_vmsumshm)
BU_ALTIVEC_3 (VMSUMUHS,       "vmsumuhs",       SAT,   	altivec_vmsumuhs)
BU_ALTIVEC_3 (VMSUMSHS,       "vmsumshs",       SAT,   	altivec_vmsumshs)
BU_ALTIVEC_3 (VNMSUBFP,       "vnmsubfp",       FP,    	nfmsv4sf4)
BU_ALTIVEC_3 (VPERM_1TI,      "vperm_1ti",      CONST, 	altivec_vperm_v1ti)
BU_ALTIVEC_3 (VPERM_2DF,      "vperm_2df",      CONST, 	altivec_vperm_v2df)
BU_ALTIVEC_3 (VPERM_2DI,      "vperm_2di",      CONST, 	altivec_vperm_v2di)
BU_ALTIVEC_3 (VPERM_4SF,      "vperm_4sf",      CONST, 	altivec_vperm_v4sf)
BU_ALTIVEC_3 (VPERM_4SI,      "vperm_4si",      CONST, 	altivec_vperm_v4si)
BU_ALTIVEC_3 (VPERM_8HI,      "vperm_8hi",      CONST, 	altivec_vperm_v8hi)
BU_ALTIVEC_3 (VPERM_16QI,     "vperm_16qi",     CONST, 	altivec_vperm_v16qi_uns)
BU_ALTIVEC_3 (VPERM_1TI_UNS,  "vperm_1ti_uns",  CONST, 	altivec_vperm_v1ti_uns)
BU_ALTIVEC_3 (VPERM_2DI_UNS,  "vperm_2di_uns",  CONST, 	altivec_vperm_v2di_uns)
BU_ALTIVEC_3 (VPERM_4SI_UNS,  "vperm_4si_uns",  CONST, 	altivec_vperm_v4si_uns)
BU_ALTIVEC_3 (VPERM_8HI_UNS,  "vperm_8hi_uns",  CONST, 	altivec_vperm_v8hi_uns)
BU_ALTIVEC_3 (VPERM_16QI_UNS, "vperm_16qi_uns", CONST, 	altivec_vperm_v16qi_uns)
BU_ALTIVEC_3 (VSEL_4SF,       "vsel_4sf",       CONST, 	vector_select_v4sf)
BU_ALTIVEC_3 (VSEL_4SI,       "vsel_4si",       CONST, 	vector_select_v4si)
BU_ALTIVEC_3 (VSEL_8HI,       "vsel_8hi",       CONST, 	vector_select_v8hi)
BU_ALTIVEC_3 (VSEL_16QI,      "vsel_16qi",      CONST, 	vector_select_v16qi)
BU_ALTIVEC_3 (VSEL_2DF,       "vsel_2df",       CONST, 	vector_select_v2df)
BU_ALTIVEC_3 (VSEL_2DI,       "vsel_2di",       CONST, 	vector_select_v2di)
BU_ALTIVEC_3 (VSEL_1TI,       "vsel_1ti",       CONST, 	vector_select_v1ti)
BU_ALTIVEC_3 (VSEL_4SI_UNS,   "vsel_4si_uns",   CONST, 	vector_select_v4si_uns)
BU_ALTIVEC_3 (VSEL_8HI_UNS,   "vsel_8hi_uns",   CONST, 	vector_select_v8hi_uns)
BU_ALTIVEC_3 (VSEL_16QI_UNS,  "vsel_16qi_uns",  CONST, 	vector_select_v16qi_uns)
BU_ALTIVEC_3 (VSEL_2DI_UNS,   "vsel_2di_uns",   CONST, 	vector_select_v2di_uns)
BU_ALTIVEC_3 (VSEL_1TI_UNS,   "vsel_1ti_uns",   CONST, 	vector_select_v1ti_uns)
BU_ALTIVEC_3 (VSLDOI_16QI,    "vsldoi_16qi",    CONST, 	altivec_vsldoi_v16qi)
BU_ALTIVEC_3 (VSLDOI_8HI,     "vsldoi_8hi",     CONST, 	altivec_vsldoi_v8hi)
BU_ALTIVEC_3 (VSLDOI_4SI,     "vsldoi_4si",     CONST, 	altivec_vsldoi_v4si)
BU_ALTIVEC_3 (VSLDOI_4SF,     "vsldoi_4sf",     CONST, 	altivec_vsldoi_v4sf)

/* Altivec DST builtins.  */
BU_ALTIVEC_D (DST,	      "dst",		MISC,  	altivec_dst)
BU_ALTIVEC_D (DSTT,	      "dstt",		MISC,  	altivec_dstt)
BU_ALTIVEC_D (DSTST,	      "dstst",		MISC,  	altivec_dstst)
BU_ALTIVEC_D (DSTSTT,	      "dststt",		MISC,  	altivec_dststt)

/* Altivec 2 argument builtin functions.  */
BU_ALTIVC2_2 (VABSDUB,        "vabsdub",	CONST,	altivec_vabsdub)
BU_ALTIVC2_2 (VABSDUH,        "vabsduh",	CONST,	altivec_vabsduh)
BU_ALTIVC2_2 (VABSDUW,        "vabsduw",	CONST,	altivec_vabsduw)
BU_ALTIVEC_2 (VADDUBM,        "vaddubm",	CONST,	addv16qi3)
BU_ALTIVEC_2 (VADDUHM,	      "vadduhm",	CONST,	addv8hi3)
BU_ALTIVEC_2 (VADDUWM,	      "vadduwm",	CONST,	addv4si3)
BU_ALTIVEC_2 (VADDFP,	      "vaddfp",		CONST,	addv4sf3)
BU_ALTIVEC_2 (VADDCUW,	      "vaddcuw",	CONST,	altivec_vaddcuw)
BU_ALTIVEC_2 (VADDUBS,	      "vaddubs",	CONST,	altivec_vaddubs)
BU_ALTIVEC_2 (VADDSBS,	      "vaddsbs",	CONST,	altivec_vaddsbs)
BU_ALTIVEC_2 (VADDUHS,	      "vadduhs",	CONST,	altivec_vadduhs)
BU_ALTIVEC_2 (VADDSHS,	      "vaddshs",	CONST,	altivec_vaddshs)
BU_ALTIVEC_2 (VADDUWS,	      "vadduws",	CONST,	altivec_vadduws)
BU_ALTIVEC_2 (VADDSWS,	      "vaddsws",	CONST,	altivec_vaddsws)
BU_ALTIVEC_2 (VAND,	      "vand",		CONST,	andv4si3)
BU_ALTIVEC_2 (VANDC,	      "vandc",		CONST,	andcv4si3)
BU_ALTIVEC_2 (VAVGUB,	      "vavgub",		CONST,	altivec_vavgub)
BU_ALTIVEC_2 (VAVGSB,	      "vavgsb",		CONST,	altivec_vavgsb)
BU_ALTIVEC_2 (VAVGUH,	      "vavguh",		CONST,	altivec_vavguh)
BU_ALTIVEC_2 (VAVGSH,	      "vavgsh",		CONST,	altivec_vavgsh)
BU_ALTIVEC_2 (VAVGUW,	      "vavguw",		CONST,	altivec_vavguw)
BU_ALTIVEC_2 (VAVGSW,	      "vavgsw",		CONST,	altivec_vavgsw)
BU_ALTIVEC_2 (VCFUX,	      "vcfux",		CONST,	altivec_vcfux)
BU_ALTIVEC_2 (VCFSX,	      "vcfsx",		CONST,	altivec_vcfsx)
BU_ALTIVEC_2 (VCMPBFP,	      "vcmpbfp",	CONST,	altivec_vcmpbfp)
BU_ALTIVEC_2 (VCMPEQUB,	      "vcmpequb",	CONST,	vector_eqv16qi)
BU_ALTIVEC_2 (VCMPEQUH,	      "vcmpequh",	CONST,	vector_eqv8hi)
BU_ALTIVEC_2 (VCMPEQUW,	      "vcmpequw",	CONST,	vector_eqv4si)
BU_ALTIVEC_2 (VCMPEQFP,	      "vcmpeqfp",	CONST,	vector_eqv4sf)
BU_ALTIVEC_2 (VCMPGEFP,	      "vcmpgefp",	CONST,	vector_gev4sf)
BU_ALTIVEC_2 (VCMPGTUB,	      "vcmpgtub",	CONST,	vector_gtuv16qi)
BU_ALTIVEC_2 (VCMPGTSB,	      "vcmpgtsb",	CONST,	vector_gtv16qi)
BU_ALTIVEC_2 (VCMPGTUH,	      "vcmpgtuh",	CONST,	vector_gtuv8hi)
BU_ALTIVEC_2 (VCMPGTSH,	      "vcmpgtsh",	CONST,	vector_gtv8hi)
BU_ALTIVEC_2 (VCMPGTUW,	      "vcmpgtuw",	CONST,	vector_gtuv4si)
BU_ALTIVEC_2 (VCMPGTSW,	      "vcmpgtsw",	CONST,	vector_gtv4si)
BU_ALTIVEC_2 (VCMPGTFP,	      "vcmpgtfp",	CONST,	vector_gtv4sf)
BU_ALTIVEC_2 (VCTSXS,	      "vctsxs",		CONST,	altivec_vctsxs)
BU_ALTIVEC_2 (VCTUXS,	      "vctuxs",		CONST,	altivec_vctuxs)
BU_ALTIVEC_2 (VMAXUB,	      "vmaxub",		CONST,	umaxv16qi3)
BU_ALTIVEC_2 (VMAXSB,	      "vmaxsb",		CONST,	smaxv16qi3)
BU_ALTIVEC_2 (VMAXUH,	      "vmaxuh",		CONST,	umaxv8hi3)
BU_ALTIVEC_2 (VMAXSH,	      "vmaxsh",		CONST,	smaxv8hi3)
BU_ALTIVEC_2 (VMAXUW,	      "vmaxuw",		CONST,	umaxv4si3)
BU_ALTIVEC_2 (VMAXSW,	      "vmaxsw",		CONST,	smaxv4si3)
BU_ALTIVEC_2 (VMAXFP,	      "vmaxfp",		CONST,	smaxv4sf3)
BU_ALTIVEC_2 (VMRGHB,	      "vmrghb",		CONST,	altivec_vmrghb)
BU_ALTIVEC_2 (VMRGHH,	      "vmrghh",		CONST,	altivec_vmrghh)
BU_ALTIVEC_2 (VMRGHW,	      "vmrghw",		CONST,	altivec_vmrghw)
BU_ALTIVEC_2 (VMRGLB,	      "vmrglb",		CONST,	altivec_vmrglb)
BU_ALTIVEC_2 (VMRGLH,	      "vmrglh",		CONST,	altivec_vmrglh)
BU_ALTIVEC_2 (VMRGLW,	      "vmrglw",		CONST,	altivec_vmrglw)
BU_ALTIVEC_2 (VMINUB,	      "vminub",		CONST,	uminv16qi3)
BU_ALTIVEC_2 (VMINSB,	      "vminsb",		CONST,	sminv16qi3)
BU_ALTIVEC_2 (VMINUH,	      "vminuh",		CONST,	uminv8hi3)
BU_ALTIVEC_2 (VMINSH,	      "vminsh",		CONST,	sminv8hi3)
BU_ALTIVEC_2 (VMINUW,	      "vminuw",		CONST,	uminv4si3)
BU_ALTIVEC_2 (VMINSW,	      "vminsw",		CONST,	sminv4si3)
BU_ALTIVEC_2 (VMINFP,	      "vminfp",		CONST,	sminv4sf3)
BU_ALTIVEC_2 (VMULEUB,	      "vmuleub",	CONST,	vec_widen_umult_even_v16qi)
BU_ALTIVEC_2 (VMULEUB_UNS,    "vmuleub_uns",	CONST,	vec_widen_umult_even_v16qi)
BU_ALTIVEC_2 (VMULESB,	      "vmulesb",	CONST,	vec_widen_smult_even_v16qi)
BU_ALTIVEC_2 (VMULEUH,	      "vmuleuh",	CONST,	vec_widen_umult_even_v8hi)
BU_ALTIVEC_2 (VMULEUH_UNS,    "vmuleuh_uns",	CONST,	vec_widen_umult_even_v8hi)
BU_ALTIVEC_2 (VMULESH,	      "vmulesh",	CONST,	vec_widen_smult_even_v8hi)
BU_ALTIVEC_2 (VMULOUB,	      "vmuloub",	CONST,	vec_widen_umult_odd_v16qi)
BU_ALTIVEC_2 (VMULOUB_UNS,    "vmuloub_uns",	CONST,	vec_widen_umult_odd_v16qi)
BU_ALTIVEC_2 (VMULOSB,	      "vmulosb",	CONST,	vec_widen_smult_odd_v16qi)
BU_ALTIVEC_2 (VMULOUH,	      "vmulouh",	CONST,	vec_widen_umult_odd_v8hi)
BU_ALTIVEC_2 (VMULOUH_UNS,    "vmulouh_uns",	CONST,	vec_widen_umult_odd_v8hi)
BU_ALTIVEC_2 (VMULOSH,	      "vmulosh",	CONST,	vec_widen_smult_odd_v8hi)
BU_ALTIVEC_2 (VNOR,	      "vnor",		CONST,	norv4si3)
BU_ALTIVEC_2 (VOR,	      "vor",		CONST,	iorv4si3)
BU_ALTIVEC_2 (VPKUHUM,	      "vpkuhum",	CONST,	altivec_vpkuhum)
BU_ALTIVEC_2 (VPKUWUM,	      "vpkuwum",	CONST,	altivec_vpkuwum)
BU_ALTIVEC_2 (VPKPX,	      "vpkpx",		CONST,	altivec_vpkpx)
BU_ALTIVEC_2 (VPKSHSS,	      "vpkshss",	CONST,	altivec_vpkshss)
BU_ALTIVEC_2 (VPKSWSS,	      "vpkswss",	CONST,	altivec_vpkswss)
BU_ALTIVEC_2 (VPKUHUS,	      "vpkuhus",	CONST,	altivec_vpkuhus)
BU_ALTIVEC_2 (VPKSHUS,	      "vpkshus",	CONST,	altivec_vpkshus)
BU_ALTIVEC_2 (VPKUWUS,	      "vpkuwus",	CONST,	altivec_vpkuwus)
BU_ALTIVEC_2 (VPKSWUS,	      "vpkswus",	CONST,	altivec_vpkswus)
BU_ALTIVEC_2 (VRECIPFP,	      "vrecipdivfp",	CONST,	recipv4sf3)
BU_ALTIVEC_2 (VRLB,	      "vrlb",		CONST,	vrotlv16qi3)
BU_ALTIVEC_2 (VRLH,	      "vrlh",		CONST,	vrotlv8hi3)
BU_ALTIVEC_2 (VRLW,	      "vrlw",		CONST,	vrotlv4si3)
BU_ALTIVEC_2 (VSLB,	      "vslb",		CONST,	vashlv16qi3)
BU_ALTIVEC_2 (VSLH,	      "vslh",		CONST,	vashlv8hi3)
BU_ALTIVEC_2 (VSLW,	      "vslw",		CONST,	vashlv4si3)
BU_ALTIVEC_2 (VSL,	      "vsl",		CONST,	altivec_vsl)
BU_ALTIVEC_2 (VSLO,	      "vslo",		CONST,	altivec_vslo)
BU_ALTIVEC_2 (VSPLTB,	      "vspltb",		CONST,	altivec_vspltb)
BU_ALTIVEC_2 (VSPLTH,	      "vsplth",		CONST,	altivec_vsplth)
BU_ALTIVEC_2 (VSPLTW,	      "vspltw",		CONST,	altivec_vspltw)
BU_ALTIVEC_2 (VSRB,	      "vsrb",		CONST,	vlshrv16qi3)
BU_ALTIVEC_2 (VSRH,	      "vsrh",		CONST,	vlshrv8hi3)
BU_ALTIVEC_2 (VSRW,	      "vsrw",		CONST,	vlshrv4si3)
BU_ALTIVEC_2 (VSRAB,	      "vsrab",		CONST,	vashrv16qi3)
BU_ALTIVEC_2 (VSRAH,	      "vsrah",		CONST,	vashrv8hi3)
BU_ALTIVEC_2 (VSRAW,	      "vsraw",		CONST,	vashrv4si3)
BU_ALTIVEC_2 (VSR,	      "vsr",		CONST,	altivec_vsr)
BU_ALTIVEC_2 (VSRO,	      "vsro",		CONST,	altivec_vsro)
BU_ALTIVEC_2 (VSUBUBM,	      "vsububm",	CONST,	subv16qi3)
BU_ALTIVEC_2 (VSUBUHM,	      "vsubuhm",	CONST,	subv8hi3)
BU_ALTIVEC_2 (VSUBUWM,	      "vsubuwm",	CONST,	subv4si3)
BU_ALTIVEC_2 (VSUBFP,	      "vsubfp",		CONST,	subv4sf3)
BU_ALTIVEC_2 (VSUBCUW,	      "vsubcuw",	CONST,	altivec_vsubcuw)
BU_ALTIVEC_2 (VSUBUBS,	      "vsububs",	CONST,	altivec_vsububs)
BU_ALTIVEC_2 (VSUBSBS,	      "vsubsbs",	CONST,	altivec_vsubsbs)
BU_ALTIVEC_2 (VSUBUHS,	      "vsubuhs",	CONST,	altivec_vsubuhs)
BU_ALTIVEC_2 (VSUBSHS,	      "vsubshs",	CONST,	altivec_vsubshs)
BU_ALTIVEC_2 (VSUBUWS,	      "vsubuws",	CONST,	altivec_vsubuws)
BU_ALTIVEC_2 (VSUBSWS,	      "vsubsws",	CONST,	altivec_vsubsws)
BU_ALTIVEC_2 (VSUM4UBS,	      "vsum4ubs",	CONST,	altivec_vsum4ubs)
BU_ALTIVEC_2 (VSUM4SBS,	      "vsum4sbs",	CONST,	altivec_vsum4sbs)
BU_ALTIVEC_2 (VSUM4SHS,	      "vsum4shs",	CONST,	altivec_vsum4shs)
BU_ALTIVEC_2 (VSUM2SWS,	      "vsum2sws",	CONST,	altivec_vsum2sws)
BU_ALTIVEC_2 (VSUMSWS,	      "vsumsws",	CONST,	altivec_vsumsws)
BU_ALTIVEC_2 (VXOR,	      "vxor",		CONST,	xorv4si3)
BU_ALTIVEC_2 (COPYSIGN_V4SF,  "copysignfp",	CONST,	vector_copysignv4sf3)

/* Altivec ABS functions.  */
BU_ALTIVEC_A (ABS_V4SI,	      "abs_v4si",	CONST,	absv4si2)
BU_ALTIVEC_A (ABS_V8HI,	      "abs_v8hi",	CONST,	absv8hi2)
BU_ALTIVEC_A (ABS_V4SF,	      "abs_v4sf",	CONST,	absv4sf2)
BU_ALTIVEC_A (ABS_V16QI,      "abs_v16qi",	CONST,	absv16qi2)
BU_ALTIVEC_A (ABSS_V4SI,      "abss_v4si",	SAT,	altivec_abss_v4si)
BU_ALTIVEC_A (ABSS_V8HI,      "abss_v8hi",	SAT,	altivec_abss_v8hi)
BU_ALTIVEC_A (ABSS_V16QI,     "abss_v16qi",	SAT,	altivec_abss_v16qi)

/* 1 argument Altivec builtin functions.  */
BU_ALTIVEC_1 (VEXPTEFP,	      "vexptefp",	FP,	altivec_vexptefp)
BU_ALTIVEC_1 (VLOGEFP,	      "vlogefp",	FP,	altivec_vlogefp)
BU_ALTIVEC_1 (VREFP,	      "vrefp",		FP,	rev4sf2)
BU_ALTIVEC_1 (VRFIM,	      "vrfim",		FP,	vector_floorv4sf2)
BU_ALTIVEC_1 (VRFIN,	      "vrfin",		FP,	altivec_vrfin)
BU_ALTIVEC_1 (VRFIP,	      "vrfip",		FP,	vector_ceilv4sf2)
BU_ALTIVEC_1 (VRFIZ,	      "vrfiz",		FP,	vector_btruncv4sf2)
BU_ALTIVEC_1 (VRSQRTFP,	      "vrsqrtfp",	FP,	rsqrtv4sf2)
BU_ALTIVEC_1 (VRSQRTEFP,      "vrsqrtefp",	FP,	rsqrtev4sf2)
BU_ALTIVEC_1 (VSPLTISB,	      "vspltisb",	CONST,	altivec_vspltisb)
BU_ALTIVEC_1 (VSPLTISH,	      "vspltish",	CONST,	altivec_vspltish)
BU_ALTIVEC_1 (VSPLTISW,	      "vspltisw",	CONST,	altivec_vspltisw)
BU_ALTIVEC_1 (VUPKHSB,	      "vupkhsb",	CONST,	altivec_vupkhsb)
BU_ALTIVEC_1 (VUPKHPX,	      "vupkhpx",	CONST,	altivec_vupkhpx)
BU_ALTIVEC_1 (VUPKHSH,	      "vupkhsh",	CONST,	altivec_vupkhsh)
BU_ALTIVEC_1 (VUPKLSB,	      "vupklsb",	CONST,	altivec_vupklsb)
BU_ALTIVEC_1 (VUPKLPX,	      "vupklpx",	CONST,	altivec_vupklpx)
BU_ALTIVEC_1 (VUPKLSH,	      "vupklsh",	CONST,	altivec_vupklsh)

BU_ALTIVEC_1 (FLOAT_V4SI_V4SF,    "float_sisf",	    FP,	floatv4siv4sf2)
BU_ALTIVEC_1 (UNSFLOAT_V4SI_V4SF, "uns_float_sisf", FP, floatunsv4siv4sf2)
BU_ALTIVEC_1 (FIX_V4SF_V4SI,      "fix_sfsi",       FP, fix_truncv4sfv4si2)
BU_ALTIVEC_1 (FIXUNS_V4SF_V4SI,   "fixuns_sfsi",    FP, fixuns_truncv4sfv4si2)

/* Altivec predicate functions.  */
BU_ALTIVEC_P (VCMPBFP_P,      "vcmpbfp_p",	CONST,	altivec_vcmpbfp_p)
BU_ALTIVEC_P (VCMPEQFP_P,     "vcmpeqfp_p",	CONST,	vector_eq_v4sf_p)
BU_ALTIVEC_P (VCMPGEFP_P,     "vcmpgefp_p",	CONST,	vector_ge_v4sf_p)
BU_ALTIVEC_P (VCMPGTFP_P,     "vcmpgtfp_p",	CONST,	vector_gt_v4sf_p)
BU_ALTIVEC_P (VCMPEQUW_P,     "vcmpequw_p",	CONST,	vector_eq_v4si_p)
BU_ALTIVEC_P (VCMPGTSW_P,     "vcmpgtsw_p",	CONST,	vector_gt_v4si_p)
BU_ALTIVEC_P (VCMPGTUW_P,     "vcmpgtuw_p",	CONST,	vector_gtu_v4si_p)
BU_ALTIVEC_P (VCMPEQUH_P,     "vcmpequh_p",	CONST,	vector_eq_v8hi_p)
BU_ALTIVEC_P (VCMPGTSH_P,     "vcmpgtsh_p",	CONST,	vector_gt_v8hi_p)
BU_ALTIVEC_P (VCMPGTUH_P,     "vcmpgtuh_p",	CONST,	vector_gtu_v8hi_p)
BU_ALTIVEC_P (VCMPEQUB_P,     "vcmpequb_p",	CONST,	vector_eq_v16qi_p)
BU_ALTIVEC_P (VCMPGTSB_P,     "vcmpgtsb_p",	CONST,	vector_gt_v16qi_p)
BU_ALTIVEC_P (VCMPGTUB_P,     "vcmpgtub_p",	CONST,	vector_gtu_v16qi_p)

/* AltiVec builtins that are handled as special cases.  */
BU_ALTIVEC_X (ST_INTERNAL_4si,  "st_internal_4si",  MEM)
BU_ALTIVEC_X (LD_INTERNAL_4si,  "ld_internal_4si",  MEM)
BU_ALTIVEC_X (ST_INTERNAL_8hi,	"st_internal_8hi",  MEM)
BU_ALTIVEC_X (LD_INTERNAL_8hi,	"ld_internal_8hi",  MEM)
BU_ALTIVEC_X (ST_INTERNAL_16qi,	"st_internal_16qi", MEM)
BU_ALTIVEC_X (LD_INTERNAL_16qi,	"ld_internal_16qi", MEM)
BU_ALTIVEC_X (ST_INTERNAL_4sf,	"st_internal_16qi", MEM)
BU_ALTIVEC_X (LD_INTERNAL_4sf,	"ld_internal_4sf",  MEM)
BU_ALTIVEC_X (ST_INTERNAL_2df,	"st_internal_4sf",  MEM)
BU_ALTIVEC_X (LD_INTERNAL_2df,	"ld_internal_2df",  MEM)
BU_ALTIVEC_X (ST_INTERNAL_2di,	"st_internal_2di",  MEM)
BU_ALTIVEC_X (LD_INTERNAL_2di,	"ld_internal_2di",  MEM)
BU_ALTIVEC_X (ST_INTERNAL_1ti,	"st_internal_1ti",  MEM)
BU_ALTIVEC_X (LD_INTERNAL_1ti,	"ld_internal_1ti",  MEM)
BU_ALTIVEC_X (MTVSCR,		"mtvscr",	    MISC)
BU_ALTIVEC_X (MFVSCR,		"mfvscr",	    MISC)
BU_ALTIVEC_X (DSSALL,		"dssall",	    MISC)
BU_ALTIVEC_X (DSS,		"dss",		    MISC)
BU_ALTIVEC_X (LVSL,		"lvsl",		    MEM)
BU_ALTIVEC_X (LVSR,		"lvsr",		    MEM)
BU_ALTIVEC_X (LVEBX,		"lvebx",	    MEM)
BU_ALTIVEC_X (LVEHX,		"lvehx",	    MEM)
BU_ALTIVEC_X (LVEWX,		"lvewx",	    MEM)
BU_ALTIVC2_X (LVEXBX,		"lvexbx",	    MEM)
BU_ALTIVC2_X (LVEXHX,		"lvexhx",	    MEM)
BU_ALTIVC2_X (LVEXWX,		"lvexwx",	    MEM)
BU_ALTIVEC_X (LVXL,		"lvxl",		    MEM)
BU_ALTIVEC_X (LVXL_V2DF,	"lvxl_v2df",	    MEM)
BU_ALTIVEC_X (LVXL_V2DI,	"lvxl_v2di",	    MEM)
BU_ALTIVEC_X (LVXL_V4SF,	"lvxl_v4sf",	    MEM)
BU_ALTIVEC_X (LVXL_V4SI,	"lvxl_v4si",	    MEM)
BU_ALTIVEC_X (LVXL_V8HI,	"lvxl_v8hi",	    MEM)
BU_ALTIVEC_X (LVXL_V16QI,	"lvxl_v16qi",	    MEM)
BU_ALTIVEC_X (LVX,		"lvx",		    MEM)
BU_ALTIVEC_X (LVX_V2DF,		"lvx_v2df",	    MEM)
BU_ALTIVEC_X (LVX_V2DI,		"lvx_v2di",	    MEM)
BU_ALTIVEC_X (LVX_V4SF,		"lvx_v4sf",	    MEM)
BU_ALTIVEC_X (LVX_V4SI,		"lvx_v4si",	    MEM)
BU_ALTIVEC_X (LVX_V8HI,		"lvx_v8hi",	    MEM)
BU_ALTIVEC_X (LVX_V16QI,	"lvx_v16qi",	    MEM)
BU_ALTIVEC_X (STVX,		"stvx",		    MEM)
BU_ALTIVEC_X (STVX_V2DF,	"stvx_v2df",	    MEM)
BU_ALTIVEC_X (STVX_V2DI,	"stvx_v2di",	    MEM)
BU_ALTIVEC_X (STVX_V4SF,	"stvx_v4sf",	    MEM)
BU_ALTIVEC_X (STVX_V4SI,	"stvx_v4si",	    MEM)
BU_ALTIVEC_X (STVX_V8HI,	"stvx_v8hi",	    MEM)
BU_ALTIVEC_X (STVX_V16QI,	"stvx_v16qi",	    MEM)
BU_ALTIVEC_C (LVLX,		"lvlx",		    MEM)
BU_ALTIVEC_C (LVLXL,		"lvlxl",	    MEM)
BU_ALTIVEC_C (LVRX,		"lvrx",		    MEM)
BU_ALTIVEC_C (LVRXL,		"lvrxl",	    MEM)
BU_ALTIVC2_X (LVTLX,           "lvtlx",            MEM)
BU_ALTIVC2_X (LVTLXL,          "lvtlxl",           MEM)
BU_ALTIVC2_X (LVTRX,           "lvtrx",            MEM)
BU_ALTIVC2_X (LVTRXL,          "lvtrxl",           MEM)
BU_ALTIVC2_X (LVSWX,           "lvswx",            MEM)
BU_ALTIVC2_X (LVSWXL,          "lvswxl",           MEM)
BU_ALTIVC2_X (LVSM,            "lvsm",             MEM)
BU_ALTIVEC_X (STVEBX,		"stvebx",	    MEM)
BU_ALTIVEC_X (STVEHX,		"stvehx",	    MEM)
BU_ALTIVEC_X (STVEWX,		"stvewx",	    MEM)
BU_ALTIVC2_X (STVEXBX,         "stvexbx",          MEM)
BU_ALTIVC2_X (STVEXHX,         "stvexhx",          MEM)
BU_ALTIVC2_X (STVEXWX,         "stvexwx",          MEM)
BU_ALTIVEC_X (STVXL,		"stvxl",	    MEM)
BU_ALTIVEC_X (STVXL_V2DF,	"stvxl_v2df",	    MEM)
BU_ALTIVEC_X (STVXL_V2DI,	"stvxl_v2di",	    MEM)
BU_ALTIVEC_X (STVXL_V4SF,	"stvxl_v4sf",	    MEM)
BU_ALTIVEC_X (STVXL_V4SI,	"stvxl_v4si",	    MEM)
BU_ALTIVEC_X (STVXL_V8HI,	"stvxl_v8hi",	    MEM)
BU_ALTIVEC_X (STVXL_V16QI,	"stvxl_v16qi",	    MEM)
BU_ALTIVEC_C (STVLX,		"stvlx",	    MEM)
BU_ALTIVEC_C (STVLXL,		"stvlxl",	    MEM)
BU_ALTIVEC_C (STVRX,		"stvrx",	    MEM)
BU_ALTIVEC_C (STVRXL,		"stvrxl",	    MEM)
BU_ALTIVC2_X (STVFLX,          "stvflx",           MEM)
BU_ALTIVC2_X (STVFLXL,         "stvflxl",          MEM)
BU_ALTIVC2_X (STVFRX,          "stvfrx",           MEM)
BU_ALTIVC2_X (STVFRXL,         "stvfrxl",          MEM)
BU_ALTIVC2_X (STVSWX,          "stvswx",           MEM)
BU_ALTIVC2_X (STVSWXL,         "stvswxl",          MEM)
BU_ALTIVEC_X (MASK_FOR_LOAD,	"mask_for_load",    MISC)
BU_ALTIVEC_X (MASK_FOR_STORE,	"mask_for_store",   MISC)
BU_ALTIVEC_X (VEC_INIT_V4SI,	"vec_init_v4si",    CONST)
BU_ALTIVEC_X (VEC_INIT_V8HI,	"vec_init_v8hi",    CONST)
BU_ALTIVEC_X (VEC_INIT_V16QI,	"vec_init_v16qi",   CONST)
BU_ALTIVEC_X (VEC_INIT_V4SF,	"vec_init_v4sf",    CONST)
BU_ALTIVEC_X (VEC_SET_V4SI,	"vec_set_v4si",     CONST)
BU_ALTIVEC_X (VEC_SET_V8HI,	"vec_set_v8hi",     CONST)
BU_ALTIVEC_X (VEC_SET_V16QI,	"vec_set_v16qi",    CONST)
BU_ALTIVEC_X (VEC_SET_V4SF,	"vec_set_v4sf",     CONST)
BU_ALTIVEC_X (VEC_EXT_V4SI,	"vec_ext_v4si",     CONST)
BU_ALTIVEC_X (VEC_EXT_V8HI,	"vec_ext_v8hi",     CONST)
BU_ALTIVEC_X (VEC_EXT_V16QI,	"vec_ext_v16qi",    CONST)
BU_ALTIVEC_X (VEC_EXT_V4SF,	"vec_ext_v4sf",     CONST)

/* Altivec overloaded builtins.  */
/* For now, don't set the classification for overloaded functions.
   The function should be converted to the type specific instruction
   before we get to the point about classifying the builtin type.  */

/* 3 argument Altivec overloaded builtins.  */
BU_ALTIVEC_OVERLOAD_3 (MADD,       "madd")
BU_ALTIVEC_OVERLOAD_3 (MADDS,      "madds")
BU_ALTIVEC_OVERLOAD_3 (MLADD,      "mladd")
BU_ALTIVEC_OVERLOAD_3 (MRADDS,     "mradds")
BU_ALTIVEC_OVERLOAD_3 (MSUM,       "msum")
BU_ALTIVEC_OVERLOAD_3 (MSUMS,      "msums")
BU_ALTIVEC_OVERLOAD_3 (NMSUB,      "nmsub")
BU_ALTIVEC_OVERLOAD_3 (PERM,       "perm")
BU_ALTIVEC_OVERLOAD_3 (SEL,        "sel")
BU_ALTIVEC_OVERLOAD_3 (VMSUMMBM,   "vmsummbm")
BU_ALTIVEC_OVERLOAD_3 (VMSUMSHM,   "vmsumshm")
BU_ALTIVEC_OVERLOAD_3 (VMSUMSHS,   "vmsumshs")
BU_ALTIVEC_OVERLOAD_3 (VMSUMUBM,   "vmsumubm")
BU_ALTIVEC_OVERLOAD_3 (VMSUMUHM,   "vmsumuhm")
BU_ALTIVEC_OVERLOAD_3 (VMSUMUHS,   "vmsumuhs")

/* Altivec DST overloaded builtins.  */
BU_ALTIVEC_OVERLOAD_D (DST,	   "dst")
BU_ALTIVEC_OVERLOAD_D (DSTT,	   "dstt")
BU_ALTIVEC_OVERLOAD_D (DSTST,	   "dstst")
BU_ALTIVEC_OVERLOAD_D (DSTSTT,	   "dststt")

/* 2 argument Altivec overloaded builtins.  */
BU_ALTIVC2_OVERLOAD_2 (ABSD,	   "absd")
BU_ALTIVC2_OVERLOAD_2 (ABSDUB,	   "absdub")
BU_ALTIVC2_OVERLOAD_2 (ABSDUH,	   "absduh")
BU_ALTIVC2_OVERLOAD_2 (ABSDUW,	   "absduw")
BU_ALTIVEC_OVERLOAD_2 (ADD,	   "add")
BU_ALTIVEC_OVERLOAD_2 (ADDC,	   "addc")
BU_ALTIVEC_OVERLOAD_2 (ADDS,	   "adds")
BU_ALTIVEC_OVERLOAD_2 (AND,	   "and")
BU_ALTIVEC_OVERLOAD_2 (ANDC,	   "andc")
BU_ALTIVEC_OVERLOAD_2 (AVG,	   "avg")
BU_ALTIVEC_OVERLOAD_2 (CMPB,	   "cmpb")
BU_ALTIVEC_OVERLOAD_2 (CMPEQ,	   "cmpeq")
BU_ALTIVEC_OVERLOAD_2 (CMPGE,	   "cmpge")
BU_ALTIVEC_OVERLOAD_2 (CMPGT,	   "cmpgt")
BU_ALTIVEC_OVERLOAD_2 (CMPLE,	   "cmple")
BU_ALTIVEC_OVERLOAD_2 (CMPLT,	   "cmplt")
BU_ALTIVEC_OVERLOAD_2 (COPYSIGN,   "copysign")
BU_ALTIVEC_OVERLOAD_2 (MAX,	   "max")
BU_ALTIVEC_OVERLOAD_2 (MERGEH,	   "mergeh")
BU_ALTIVEC_OVERLOAD_2 (MERGEL,	   "mergel")
BU_ALTIVEC_OVERLOAD_2 (MIN,	   "min")
BU_ALTIVEC_OVERLOAD_2 (MULE,	   "mule")
BU_ALTIVEC_OVERLOAD_2 (MULO,	   "mulo")
BU_ALTIVEC_OVERLOAD_2 (NOR,	   "nor")
BU_ALTIVEC_OVERLOAD_2 (OR,	   "or")
BU_ALTIVEC_OVERLOAD_2 (PACK,	   "pack")
BU_ALTIVEC_OVERLOAD_2 (PACKPX,	   "packpx")
BU_ALTIVEC_OVERLOAD_2 (PACKS,	   "packs")
BU_ALTIVEC_OVERLOAD_2 (PACKSU,	   "packsu")
BU_ALTIVEC_OVERLOAD_2 (RECIP,	   "recipdiv")
BU_ALTIVEC_OVERLOAD_2 (RL,	   "rl")
BU_ALTIVEC_OVERLOAD_2 (SL,	   "sl")
BU_ALTIVEC_OVERLOAD_2 (SLL,	   "sll")
BU_ALTIVEC_OVERLOAD_2 (SLO,	   "slo")
BU_ALTIVEC_OVERLOAD_2 (SR,	   "sr")
BU_ALTIVEC_OVERLOAD_2 (SRA,	   "sra")
BU_ALTIVEC_OVERLOAD_2 (SRL,	   "srl")
BU_ALTIVEC_OVERLOAD_2 (SRO,	   "sro")
BU_ALTIVEC_OVERLOAD_2 (SUB,	   "sub")
BU_ALTIVEC_OVERLOAD_2 (SUBC,	   "subc")
BU_ALTIVEC_OVERLOAD_2 (SUBS,	   "subs")
BU_ALTIVEC_OVERLOAD_2 (SUM2S,	   "sum2s")
BU_ALTIVEC_OVERLOAD_2 (SUM4S,	   "sum4s")
BU_ALTIVEC_OVERLOAD_2 (SUMS,	   "sums")
BU_ALTIVEC_OVERLOAD_2 (VADDFP,	   "vaddfp")
BU_ALTIVEC_OVERLOAD_2 (VADDSBS,	   "vaddsbs")
BU_ALTIVEC_OVERLOAD_2 (VADDSHS,	   "vaddshs")
BU_ALTIVEC_OVERLOAD_2 (VADDSWS,	   "vaddsws")
BU_ALTIVEC_OVERLOAD_2 (VADDUBM,	   "vaddubm")
BU_ALTIVEC_OVERLOAD_2 (VADDUBS,	   "vaddubs")
BU_ALTIVEC_OVERLOAD_2 (VADDUHM,	   "vadduhm")
BU_ALTIVEC_OVERLOAD_2 (VADDUHS,	   "vadduhs")
BU_ALTIVEC_OVERLOAD_2 (VADDUWM,	   "vadduwm")
BU_ALTIVEC_OVERLOAD_2 (VADDUWS,	   "vadduws")
BU_ALTIVEC_OVERLOAD_2 (VAVGSB,	   "vavgsb")
BU_ALTIVEC_OVERLOAD_2 (VAVGSH,	   "vavgsh")
BU_ALTIVEC_OVERLOAD_2 (VAVGSW,	   "vavgsw")
BU_ALTIVEC_OVERLOAD_2 (VAVGUB,	   "vavgub")
BU_ALTIVEC_OVERLOAD_2 (VAVGUH,	   "vavguh")
BU_ALTIVEC_OVERLOAD_2 (VAVGUW,	   "vavguw")
BU_ALTIVEC_OVERLOAD_2 (VCMPEQFP,   "vcmpeqfp")
BU_ALTIVEC_OVERLOAD_2 (VCMPEQUB,   "vcmpequb")
BU_ALTIVEC_OVERLOAD_2 (VCMPEQUH,   "vcmpequh")
BU_ALTIVEC_OVERLOAD_2 (VCMPEQUW,   "vcmpequw")
BU_ALTIVEC_OVERLOAD_2 (VCMPGTFP,   "vcmpgtfp")
BU_ALTIVEC_OVERLOAD_2 (VCMPGTSB,   "vcmpgtsb")
BU_ALTIVEC_OVERLOAD_2 (VCMPGTSH,   "vcmpgtsh")
BU_ALTIVEC_OVERLOAD_2 (VCMPGTSW,   "vcmpgtsw")
BU_ALTIVEC_OVERLOAD_2 (VCMPGTUB,   "vcmpgtub")
BU_ALTIVEC_OVERLOAD_2 (VCMPGTUH,   "vcmpgtuh")
BU_ALTIVEC_OVERLOAD_2 (VCMPGTUW,   "vcmpgtuw")
BU_ALTIVEC_OVERLOAD_2 (VMAXFP,	   "vmaxfp")
BU_ALTIVEC_OVERLOAD_2 (VMAXSB,	   "vmaxsb")
BU_ALTIVEC_OVERLOAD_2 (VMAXSH,	   "vmaxsh")
BU_ALTIVEC_OVERLOAD_2 (VMAXSW,	   "vmaxsw")
BU_ALTIVEC_OVERLOAD_2 (VMAXUB,	   "vmaxub")
BU_ALTIVEC_OVERLOAD_2 (VMAXUH,	   "vmaxuh")
BU_ALTIVEC_OVERLOAD_2 (VMAXUW,	   "vmaxuw")
BU_ALTIVEC_OVERLOAD_2 (VMINFP,	   "vminfp")
BU_ALTIVEC_OVERLOAD_2 (VMINSB,	   "vminsb")
BU_ALTIVEC_OVERLOAD_2 (VMINSH,	   "vminsh")
BU_ALTIVEC_OVERLOAD_2 (VMINSW,	   "vminsw")
BU_ALTIVEC_OVERLOAD_2 (VMINUB,	   "vminub")
BU_ALTIVEC_OVERLOAD_2 (VMINUH,	   "vminuh")
BU_ALTIVEC_OVERLOAD_2 (VMINUW,	   "vminuw")
BU_ALTIVEC_OVERLOAD_2 (VMRGHB,	   "vmrghb")
BU_ALTIVEC_OVERLOAD_2 (VMRGHH,	   "vmrghh")
BU_ALTIVEC_OVERLOAD_2 (VMRGHW,	   "vmrghw")
BU_ALTIVEC_OVERLOAD_2 (VMRGLB,	   "vmrglb")
BU_ALTIVEC_OVERLOAD_2 (VMRGLH,	   "vmrglh")
BU_ALTIVEC_OVERLOAD_2 (VMRGLW,	   "vmrglw")
BU_ALTIVEC_OVERLOAD_2 (VMULESB,	   "vmulesb")
BU_ALTIVEC_OVERLOAD_2 (VMULESH,	   "vmulesh")
BU_ALTIVEC_OVERLOAD_2 (VMULEUB,	   "vmuleub")
BU_ALTIVEC_OVERLOAD_2 (VMULEUH,	   "vmuleuh")
BU_ALTIVEC_OVERLOAD_2 (VMULOSB,	   "vmulosb")
BU_ALTIVEC_OVERLOAD_2 (VMULOSH,	   "vmulosh")
BU_ALTIVEC_OVERLOAD_2 (VMULOUB,	   "vmuloub")
BU_ALTIVEC_OVERLOAD_2 (VMULOUH,	   "vmulouh")
BU_ALTIVEC_OVERLOAD_2 (VPKSHSS,	   "vpkshss")
BU_ALTIVEC_OVERLOAD_2 (VPKSHUS,	   "vpkshus")
BU_ALTIVEC_OVERLOAD_2 (VPKSWSS,	   "vpkswss")
BU_ALTIVEC_OVERLOAD_2 (VPKSWUS,	   "vpkswus")
BU_ALTIVEC_OVERLOAD_2 (VPKUHUM,	   "vpkuhum")
BU_ALTIVEC_OVERLOAD_2 (VPKUHUS,	   "vpkuhus")
BU_ALTIVEC_OVERLOAD_2 (VPKUWUM,	   "vpkuwum")
BU_ALTIVEC_OVERLOAD_2 (VPKUWUS,	   "vpkuwus")
BU_ALTIVEC_OVERLOAD_2 (VRLB,	   "vrlb")
BU_ALTIVEC_OVERLOAD_2 (VRLH,	   "vrlh")
BU_ALTIVEC_OVERLOAD_2 (VRLW,	   "vrlw")
BU_ALTIVEC_OVERLOAD_2 (VSLB,	   "vslb")
BU_ALTIVEC_OVERLOAD_2 (VSLH,	   "vslh")
BU_ALTIVEC_OVERLOAD_2 (VSLW,	   "vslw")
BU_ALTIVEC_OVERLOAD_2 (VSRAB,	   "vsrab")
BU_ALTIVEC_OVERLOAD_2 (VSRAH,	   "vsrah")
BU_ALTIVEC_OVERLOAD_2 (VSRAW,	   "vsraw")
BU_ALTIVEC_OVERLOAD_2 (VSRB,	   "vsrb")
BU_ALTIVEC_OVERLOAD_2 (VSRH,	   "vsrh")
BU_ALTIVEC_OVERLOAD_2 (VSRW,	   "vsrw")
BU_ALTIVEC_OVERLOAD_2 (VSUBFP,	   "vsubfp")
BU_ALTIVEC_OVERLOAD_2 (VSUBSBS,	   "vsubsbs")
BU_ALTIVEC_OVERLOAD_2 (VSUBSHS,	   "vsubshs")
BU_ALTIVEC_OVERLOAD_2 (VSUBSWS,	   "vsubsws")
BU_ALTIVEC_OVERLOAD_2 (VSUBUBM,	   "vsububm")
BU_ALTIVEC_OVERLOAD_2 (VSUBUBS,	   "vsububs")
BU_ALTIVEC_OVERLOAD_2 (VSUBUHM,	   "vsubuhm")
BU_ALTIVEC_OVERLOAD_2 (VSUBUHS,	   "vsubuhs")
BU_ALTIVEC_OVERLOAD_2 (VSUBUWM,	   "vsubuwm")
BU_ALTIVEC_OVERLOAD_2 (VSUBUWS,	   "vsubuws")
BU_ALTIVEC_OVERLOAD_2 (VSUM4SBS,   "vsum4sbs")
BU_ALTIVEC_OVERLOAD_2 (VSUM4SHS,   "vsum4shs")
BU_ALTIVEC_OVERLOAD_2 (VSUM4UBS,   "vsum4ubs")
BU_ALTIVEC_OVERLOAD_2 (XOR,	   "xor")

/* 1 argument Altivec overloaded functions.  */
BU_ALTIVEC_OVERLOAD_1 (ABS,	   "abs")
BU_ALTIVEC_OVERLOAD_1 (ABSS,	   "abss")
BU_ALTIVEC_OVERLOAD_1 (CEIL,	   "ceil")
BU_ALTIVEC_OVERLOAD_1 (EXPTE,	   "expte")
BU_ALTIVEC_OVERLOAD_1 (FLOOR,	   "floor")
BU_ALTIVEC_OVERLOAD_1 (LOGE,	   "loge")
BU_ALTIVEC_OVERLOAD_1 (MTVSCR,	   "mtvscr")
BU_ALTIVEC_OVERLOAD_1 (NEARBYINT,  "nearbyint")
BU_ALTIVEC_OVERLOAD_1 (RE,	   "re")
BU_ALTIVEC_OVERLOAD_1 (RINT,       "rint")
BU_ALTIVEC_OVERLOAD_1 (ROUND,	   "round")
BU_ALTIVEC_OVERLOAD_1 (RSQRT,	   "rsqrt")
BU_ALTIVEC_OVERLOAD_1 (RSQRTE,	   "rsqrte")
BU_ALTIVEC_OVERLOAD_1 (SQRT,       "sqrt")
BU_ALTIVEC_OVERLOAD_1 (TRUNC,	   "trunc")
BU_ALTIVEC_OVERLOAD_1 (UNPACKH,	   "unpackh")
BU_ALTIVEC_OVERLOAD_1 (UNPACKL,	   "unpackl")
BU_ALTIVEC_OVERLOAD_1 (VUPKHPX,	   "vupkhpx")
BU_ALTIVEC_OVERLOAD_1 (VUPKHSB,	   "vupkhsb")
BU_ALTIVEC_OVERLOAD_1 (VUPKHSH,	   "vupkhsh")
BU_ALTIVEC_OVERLOAD_1 (VUPKLPX,	   "vupklpx")
BU_ALTIVEC_OVERLOAD_1 (VUPKLSB,	   "vupklsb")
BU_ALTIVEC_OVERLOAD_1 (VUPKLSH,	   "vupklsh")

/* Overloaded altivec predicates.  */
BU_ALTIVEC_OVERLOAD_P (VCMPEQ_P,   "vcmpeq_p")
BU_ALTIVEC_OVERLOAD_P (VCMPGT_P,   "vcmpgt_p")
BU_ALTIVEC_OVERLOAD_P (VCMPGE_P,   "vcmpge_p")

/* Overloaded Altivec builtins that are handled as special cases.  */
BU_ALTIVEC_OVERLOAD_X (CTF,	   "ctf")
BU_ALTIVEC_OVERLOAD_X (CTS,	   "cts")
BU_ALTIVEC_OVERLOAD_X (CTU,	   "ctu")
BU_ALTIVEC_OVERLOAD_X (EXTRACT,	   "extract")
BU_ALTIVEC_OVERLOAD_X (INSERT,	   "insert")
BU_ALTIVEC_OVERLOAD_X (LD,	   "ld")
BU_ALTIVEC_OVERLOAD_X (LDE,	   "lde")
BU_ALTIVEC_OVERLOAD_X (LDL,	   "ldl")
BU_ALTIVEC_OVERLOAD_X (LVEBX,	   "lvebx")
BU_ALTIVEC_OVERLOAD_X (LVEHX,	   "lvehx")
BU_ALTIVEC_OVERLOAD_X (LVEWX,	   "lvewx")
BU_ALTIVC2_OVERLOAD_X (LVEXBX,	   "lvexbx")
BU_ALTIVC2_OVERLOAD_X (LVEXHX,	   "lvexhx")
BU_ALTIVC2_OVERLOAD_X (LVEXWX,	   "lvexwx")
BU_ALTIVEC_OVERLOAD_X (LVLX,	   "lvlx")
BU_ALTIVEC_OVERLOAD_X (LVLXL,	   "lvlxl")
BU_ALTIVEC_OVERLOAD_X (LVRX,	   "lvrx")
BU_ALTIVEC_OVERLOAD_X (LVRXL,	   "lvrxl")
BU_ALTIVC2_OVERLOAD_X (LVTLX,	   "lvtlx")
BU_ALTIVC2_OVERLOAD_X (LVTLXL,	   "lvtlxl")
BU_ALTIVC2_OVERLOAD_X (LVTRX,	   "lvtrx")
BU_ALTIVC2_OVERLOAD_X (LVTRXL,	   "lvtrxl")
BU_ALTIVC2_OVERLOAD_X (LVSWX,	   "lvswx")
BU_ALTIVC2_OVERLOAD_X (LVSWXL,	   "lvswxl")
BU_ALTIVC2_OVERLOAD_X (LVSM,	   "lvsm")
BU_ALTIVEC_OVERLOAD_X (LVSL,	   "lvsl")
BU_ALTIVEC_OVERLOAD_X (LVSR,	   "lvsr")
BU_ALTIVEC_OVERLOAD_X (PROMOTE,	   "promote")
BU_ALTIVEC_OVERLOAD_X (SLD,	   "sld")
BU_ALTIVEC_OVERLOAD_X (SPLAT,	   "splat")
BU_ALTIVEC_OVERLOAD_X (SPLATS,	   "splats")
BU_ALTIVEC_OVERLOAD_X (ST,	   "st")
BU_ALTIVEC_OVERLOAD_X (STE,	   "ste")
BU_ALTIVEC_OVERLOAD_X (STEP,	   "step")
BU_ALTIVEC_OVERLOAD_X (STL,	   "stl")
BU_ALTIVEC_OVERLOAD_X (STVEBX,	   "stvebx")
BU_ALTIVEC_OVERLOAD_X (STVEHX,	   "stvehx")
BU_ALTIVEC_OVERLOAD_X (STVEWX,	   "stvewx")
BU_ALTIVC2_OVERLOAD_X (STVEXBX,	   "stvexbx")
BU_ALTIVC2_OVERLOAD_X (STVEXHX,	   "stvexhx")
BU_ALTIVC2_OVERLOAD_X (STVEXWX,	   "stvexwx")
BU_ALTIVEC_OVERLOAD_X (STVLX,	   "stvlx")
BU_ALTIVEC_OVERLOAD_X (STVLXL,	   "stvlxl")
BU_ALTIVEC_OVERLOAD_X (STVRX,	   "stvrx")
BU_ALTIVEC_OVERLOAD_X (STVRXL,	   "stvrxl")
BU_ALTIVC2_OVERLOAD_X (STVFLX,	   "stvflx")
BU_ALTIVC2_OVERLOAD_X (STVFLXL,	   "stvflxl")
BU_ALTIVC2_OVERLOAD_X (STVFRX,	   "stvfrx")
BU_ALTIVC2_OVERLOAD_X (STVFRXL,	   "stvfrxl")
BU_ALTIVC2_OVERLOAD_X (STVSWX,	   "stvswx")
BU_ALTIVC2_OVERLOAD_X (STVSWXL,	   "stvswxl")
BU_ALTIVEC_OVERLOAD_X (VCFSX,	   "vcfsx")
BU_ALTIVEC_OVERLOAD_X (VCFUX,	   "vcfux")
BU_ALTIVEC_OVERLOAD_X (VSPLTB,	   "vspltb")
BU_ALTIVEC_OVERLOAD_X (VSPLTH,	   "vsplth")
BU_ALTIVEC_OVERLOAD_X (VSPLTW,	   "vspltw")

/* 3 argument VSX builtins.  */
BU_VSX_3 (XVMADDSP,           "xvmaddsp",       CONST, 	fmav4sf4)
BU_VSX_3 (XVMSUBSP,           "xvmsubsp",       CONST, 	fmsv4sf4)
BU_VSX_3 (XVNMADDSP,          "xvnmaddsp",      CONST, 	nfmav4sf4)
BU_VSX_3 (XVNMSUBSP,          "xvnmsubsp",      CONST, 	nfmsv4sf4)

BU_VSX_3 (XVMADDDP,           "xvmadddp",       CONST, 	fmav2df4)
BU_VSX_3 (XVMSUBDP,           "xvmsubdp",       CONST, 	fmsv2df4)
BU_VSX_3 (XVNMADDDP,          "xvnmadddp",      CONST, 	nfmav2df4)
BU_VSX_3 (XVNMSUBDP,          "xvnmsubdp",      CONST, 	nfmsv2df4)

BU_VSX_3 (XXSEL_1TI,          "xxsel_1ti",      CONST, 	vector_select_v1ti)
BU_VSX_3 (XXSEL_2DI,          "xxsel_2di",      CONST, 	vector_select_v2di)
BU_VSX_3 (XXSEL_2DF,          "xxsel_2df",      CONST, 	vector_select_v2df)
BU_VSX_3 (XXSEL_4SF,          "xxsel_4sf",      CONST, 	vector_select_v4sf)
BU_VSX_3 (XXSEL_4SI,          "xxsel_4si",      CONST, 	vector_select_v4si)
BU_VSX_3 (XXSEL_8HI,          "xxsel_8hi",      CONST, 	vector_select_v8hi)
BU_VSX_3 (XXSEL_16QI,         "xxsel_16qi",     CONST, 	vector_select_v16qi)
BU_VSX_3 (XXSEL_1TI_UNS,      "xxsel_1ti_uns",  CONST, 	vector_select_v1ti_uns)
BU_VSX_3 (XXSEL_2DI_UNS,      "xxsel_2di_uns",  CONST, 	vector_select_v2di_uns)
BU_VSX_3 (XXSEL_4SI_UNS,      "xxsel_4si_uns",  CONST, 	vector_select_v4si_uns)
BU_VSX_3 (XXSEL_8HI_UNS,      "xxsel_8hi_uns",  CONST, 	vector_select_v8hi_uns)
BU_VSX_3 (XXSEL_16QI_UNS,     "xxsel_16qi_uns", CONST, 	vector_select_v16qi_uns)

BU_VSX_3 (VPERM_1TI,          "vperm_1ti",      CONST, 	altivec_vperm_v1ti)
BU_VSX_3 (VPERM_2DI,          "vperm_2di",      CONST, 	altivec_vperm_v2di)
BU_VSX_3 (VPERM_2DF,          "vperm_2df",      CONST, 	altivec_vperm_v2df)
BU_VSX_3 (VPERM_4SF,          "vperm_4sf",      CONST, 	altivec_vperm_v4sf)
BU_VSX_3 (VPERM_4SI,          "vperm_4si",      CONST, 	altivec_vperm_v4si)
BU_VSX_3 (VPERM_8HI,          "vperm_8hi",      CONST, 	altivec_vperm_v8hi)
BU_VSX_3 (VPERM_16QI,         "vperm_16qi",     CONST, 	altivec_vperm_v16qi)
BU_VSX_3 (VPERM_1TI_UNS,      "vperm_1ti_uns",  CONST, 	altivec_vperm_v1ti_uns)
BU_VSX_3 (VPERM_2DI_UNS,      "vperm_2di_uns",  CONST, 	altivec_vperm_v2di_uns)
BU_VSX_3 (VPERM_4SI_UNS,      "vperm_4si_uns",  CONST, 	altivec_vperm_v4si_uns)
BU_VSX_3 (VPERM_8HI_UNS,      "vperm_8hi_uns",  CONST, 	altivec_vperm_v8hi_uns)
BU_VSX_3 (VPERM_16QI_UNS,     "vperm_16qi_uns", CONST, 	altivec_vperm_v16qi_uns)

BU_VSX_3 (XXPERMDI_1TI,       "xxpermdi_1ti",   CONST, 	vsx_xxpermdi_v1ti)
BU_VSX_3 (XXPERMDI_2DF,       "xxpermdi_2df",   CONST, 	vsx_xxpermdi_v2df)
BU_VSX_3 (XXPERMDI_2DI,       "xxpermdi_2di",   CONST, 	vsx_xxpermdi_v2di)
BU_VSX_3 (XXPERMDI_4SF,       "xxpermdi_4sf",   CONST, 	vsx_xxpermdi_v4sf)
BU_VSX_3 (XXPERMDI_4SI,       "xxpermdi_4si",   CONST, 	vsx_xxpermdi_v4si)
BU_VSX_3 (XXPERMDI_8HI,       "xxpermdi_8hi",   CONST, 	vsx_xxpermdi_v8hi)
BU_VSX_3 (XXPERMDI_16QI,      "xxpermdi_16qi",  CONST, 	vsx_xxpermdi_v16qi)
BU_VSX_3 (SET_1TI,            "set_1ti",        CONST, 	vsx_set_v1ti)
BU_VSX_3 (SET_2DF,            "set_2df",        CONST, 	vsx_set_v2df)
BU_VSX_3 (SET_2DI,            "set_2di",        CONST, 	vsx_set_v2di)
BU_VSX_3 (XXSLDWI_2DI,        "xxsldwi_2di",    CONST, 	vsx_xxsldwi_v2di)
BU_VSX_3 (XXSLDWI_2DF,        "xxsldwi_2df",    CONST, 	vsx_xxsldwi_v2df)
BU_VSX_3 (XXSLDWI_4SF,        "xxsldwi_4sf",    CONST, 	vsx_xxsldwi_v4sf)
BU_VSX_3 (XXSLDWI_4SI,        "xxsldwi_4si",    CONST, 	vsx_xxsldwi_v4si)
BU_VSX_3 (XXSLDWI_8HI,        "xxsldwi_8hi",    CONST, 	vsx_xxsldwi_v8hi)
BU_VSX_3 (XXSLDWI_16QI,       "xxsldwi_16qi",   CONST, 	vsx_xxsldwi_v16qi)

/* 2 argument VSX builtins.  */
BU_VSX_2 (XVADDDP,	      "xvadddp",	FP,	addv2df3)
BU_VSX_2 (XVSUBDP,	      "xvsubdp",	FP,	subv2df3)
BU_VSX_2 (XVMULDP,	      "xvmuldp",	FP,	mulv2df3)
BU_VSX_2 (XVDIVDP,	      "xvdivdp",	FP,	divv2df3)
BU_VSX_2 (RECIP_V2DF,	      "xvrecipdivdp",	FP,	recipv2df3)
BU_VSX_2 (XVMINDP,	      "xvmindp",	CONST,	sminv2df3)
BU_VSX_2 (XVMAXDP,	      "xvmaxdp",	CONST,	smaxv2df3)
BU_VSX_2 (XVTDIVDP_FE,	      "xvtdivdp_fe",	CONST,	vsx_tdivv2df3_fe)
BU_VSX_2 (XVTDIVDP_FG,	      "xvtdivdp_fg",	CONST,	vsx_tdivv2df3_fg)
BU_VSX_2 (XVCMPEQDP,	      "xvcmpeqdp",	CONST,	vector_eqv2df)
BU_VSX_2 (XVCMPGTDP,	      "xvcmpgtdp",	CONST,	vector_gtv2df)
BU_VSX_2 (XVCMPGEDP,	      "xvcmpgedp",	CONST,	vector_gev2df)

BU_VSX_2 (XVADDSP,	      "xvaddsp",	FP,	addv4sf3)
BU_VSX_2 (XVSUBSP,	      "xvsubsp",	FP,	subv4sf3)
BU_VSX_2 (XVMULSP,	      "xvmulsp",	FP,	mulv4sf3)
BU_VSX_2 (XVDIVSP,	      "xvdivsp",	FP,	divv4sf3)
BU_VSX_2 (RECIP_V4SF,	      "xvrecipdivsp",	FP,	recipv4sf3)
BU_VSX_2 (XVMINSP,	      "xvminsp",	CONST,	sminv4sf3)
BU_VSX_2 (XVMAXSP,	      "xvmaxsp",	CONST,	smaxv4sf3)
BU_VSX_2 (XVTDIVSP_FE,	      "xvtdivsp_fe",	CONST,	vsx_tdivv4sf3_fe)
BU_VSX_2 (XVTDIVSP_FG,	      "xvtdivsp_fg",	CONST,	vsx_tdivv4sf3_fg)
BU_VSX_2 (XVCMPEQSP,	      "xvcmpeqsp",	CONST,	vector_eqv4sf)
BU_VSX_2 (XVCMPGTSP,	      "xvcmpgtsp",	CONST,	vector_gtv4sf)
BU_VSX_2 (XVCMPGESP,	      "xvcmpgesp",	CONST,	vector_gev4sf)

BU_VSX_2 (XSMINDP,	      "xsmindp",	CONST,	smindf3)
BU_VSX_2 (XSMAXDP,	      "xsmaxdp",	CONST,	smaxdf3)
BU_VSX_2 (XSTDIVDP_FE,	      "xstdivdp_fe",	CONST,	vsx_tdivdf3_fe)
BU_VSX_2 (XSTDIVDP_FG,	      "xstdivdp_fg",	CONST,	vsx_tdivdf3_fg)
BU_VSX_2 (CPSGNDP,	      "cpsgndp",	CONST,	vector_copysignv2df3)
BU_VSX_2 (CPSGNSP,	      "cpsgnsp",	CONST,	vector_copysignv4sf3)

BU_VSX_2 (CONCAT_2DF,	      "concat_2df",	CONST,	vsx_concat_v2df)
BU_VSX_2 (CONCAT_2DI,	      "concat_2di",	CONST,	vsx_concat_v2di)
BU_VSX_2 (SPLAT_2DF,	      "splat_2df",	CONST,	vsx_splat_v2df)
BU_VSX_2 (SPLAT_2DI,	      "splat_2di",	CONST,	vsx_splat_v2di)
BU_VSX_2 (XXMRGHW_4SF,	      "xxmrghw",	CONST,	vsx_xxmrghw_v4sf)
BU_VSX_2 (XXMRGHW_4SI,	      "xxmrghw_4si",	CONST,	vsx_xxmrghw_v4si)
BU_VSX_2 (XXMRGLW_4SF,	      "xxmrglw",	CONST,	vsx_xxmrglw_v4sf)
BU_VSX_2 (XXMRGLW_4SI,	      "xxmrglw_4si",	CONST,	vsx_xxmrglw_v4si)
BU_VSX_2 (VEC_MERGEL_V2DF,    "mergel_2df",	CONST,	vsx_mergel_v2df)
BU_VSX_2 (VEC_MERGEL_V2DI,    "mergel_2di",	CONST,	vsx_mergel_v2di)
BU_VSX_2 (VEC_MERGEH_V2DF,    "mergeh_2df",	CONST,	vsx_mergeh_v2df)
BU_VSX_2 (VEC_MERGEH_V2DI,    "mergeh_2di",	CONST,	vsx_mergeh_v2di)

/* VSX abs builtin functions.  */
BU_VSX_A (XVABSDP,	      "xvabsdp",	CONST,	absv2df2)
BU_VSX_A (XVNABSDP,	      "xvnabsdp",	CONST,	vsx_nabsv2df2)
BU_VSX_A (XVABSSP,	      "xvabssp",	CONST,	absv4sf2)
BU_VSX_A (XVNABSSP,	      "xvnabssp",	CONST,	vsx_nabsv4sf2)

/* 1 argument VSX builtin functions.  */
BU_VSX_1 (XVNEGDP,	      "xvnegdp",	CONST,	negv2df2)
BU_VSX_1 (XVSQRTDP,	      "xvsqrtdp",	CONST,	sqrtv2df2)
BU_VSX_1 (RSQRT_2DF,	      "xvrsqrtdp",	CONST,	rsqrtv2df2)
BU_VSX_1 (XVRSQRTEDP,	      "xvrsqrtedp",	CONST,	rsqrtev2df2)
BU_VSX_1 (XVTSQRTDP_FE,	      "xvtsqrtdp_fe",	CONST,	vsx_tsqrtv2df2_fe)
BU_VSX_1 (XVTSQRTDP_FG,	      "xvtsqrtdp_fg",	CONST,	vsx_tsqrtv2df2_fg)
BU_VSX_1 (XVREDP,	      "xvredp",		CONST,	vsx_frev2df2)

BU_VSX_1 (XVNEGSP,	      "xvnegsp",	CONST,	negv4sf2)
BU_VSX_1 (XVSQRTSP,	      "xvsqrtsp",	CONST,	sqrtv4sf2)
BU_VSX_1 (RSQRT_4SF,          "xvrsqrtsp",	CONST,	rsqrtv4sf2)
BU_VSX_1 (XVRSQRTESP,	      "xvrsqrtesp",	CONST,	rsqrtev4sf2)
BU_VSX_1 (XVTSQRTSP_FE,	      "xvtsqrtsp_fe",	CONST,	vsx_tsqrtv4sf2_fe)
BU_VSX_1 (XVTSQRTSP_FG,	      "xvtsqrtsp_fg",	CONST,	vsx_tsqrtv4sf2_fg)
BU_VSX_1 (XVRESP,	      "xvresp",		CONST,	vsx_frev4sf2)

BU_VSX_1 (XSCVDPSP,	      "xscvdpsp",	CONST,	vsx_xscvdpsp)
BU_VSX_1 (XSCVSPDP,	      "xscvspdp",	CONST,	vsx_xscvspdp)
BU_VSX_1 (XVCVDPSP,	      "xvcvdpsp",	CONST,	vsx_xvcvdpsp)
BU_VSX_1 (XVCVSPDP,	      "xvcvspdp",	CONST,	vsx_xvcvspdp)
BU_VSX_1 (XSTSQRTDP_FE,	      "xstsqrtdp_fe",	CONST,	vsx_tsqrtdf2_fe)
BU_VSX_1 (XSTSQRTDP_FG,	      "xstsqrtdp_fg",	CONST,	vsx_tsqrtdf2_fg)

BU_VSX_1 (XVCVDPSXDS,	      "xvcvdpsxds",	CONST,	vsx_fix_truncv2dfv2di2)
BU_VSX_1 (XVCVDPUXDS,	      "xvcvdpuxds",	CONST,	vsx_fixuns_truncv2dfv2di2)
BU_VSX_1 (XVCVDPUXDS_UNS,     "xvcvdpuxds_uns",	CONST,	vsx_fixuns_truncv2dfv2di2)
BU_VSX_1 (XVCVSXDDP,	      "xvcvsxddp",	CONST,	vsx_floatv2div2df2)
BU_VSX_1 (XVCVUXDDP,	      "xvcvuxddp",	CONST,	vsx_floatunsv2div2df2)
BU_VSX_1 (XVCVUXDDP_UNS,       "xvcvuxddp_uns",	CONST,	vsx_floatunsv2div2df2)

BU_VSX_1 (XVCVSPSXWS,	      "xvcvspsxws",	CONST,	vsx_fix_truncv4sfv4si2)
BU_VSX_1 (XVCVSPUXWS,	      "xvcvspuxws",	CONST,	vsx_fixuns_truncv4sfv4si2)
BU_VSX_1 (XVCVSXWSP,	      "xvcvsxwsp",	CONST,	vsx_floatv4siv4sf2)
BU_VSX_1 (XVCVUXWSP,	      "xvcvuxwsp",	CONST,	vsx_floatunsv4siv4sf2)

BU_VSX_1 (XVCVDPSXWS,	      "xvcvdpsxws",	CONST,	vsx_xvcvdpsxws)
BU_VSX_1 (XVCVDPUXWS,	      "xvcvdpuxws",	CONST,	vsx_xvcvdpuxws)
BU_VSX_1 (XVCVSXWDP,	      "xvcvsxwdp",	CONST,	vsx_xvcvsxwdp)
BU_VSX_1 (XVCVUXWDP,	      "xvcvuxwdp",	CONST,	vsx_xvcvuxwdp)
BU_VSX_1 (XVRDPI,	      "xvrdpi",		CONST,	vsx_xvrdpi)
BU_VSX_1 (XVRDPIC,	      "xvrdpic",	CONST,	vsx_xvrdpic)
BU_VSX_1 (XVRDPIM,	      "xvrdpim",	CONST,	vsx_floorv2df2)
BU_VSX_1 (XVRDPIP,	      "xvrdpip",	CONST,	vsx_ceilv2df2)
BU_VSX_1 (XVRDPIZ,	      "xvrdpiz",	CONST,	vsx_btruncv2df2)

BU_VSX_1 (XVCVSPSXDS,	      "xvcvspsxds",	CONST,	vsx_xvcvspsxds)
BU_VSX_1 (XVCVSPUXDS,	      "xvcvspuxds",	CONST,	vsx_xvcvspuxds)
BU_VSX_1 (XVCVSXDSP,	      "xvcvsxdsp",	CONST,	vsx_xvcvsxdsp)
BU_VSX_1 (XVCVUXDSP,	      "xvcvuxdsp",	CONST,	vsx_xvcvuxdsp)
BU_VSX_1 (XVRSPI,	      "xvrspi",		CONST,	vsx_xvrspi)
BU_VSX_1 (XVRSPIC,	      "xvrspic",	CONST,	vsx_xvrspic)
BU_VSX_1 (XVRSPIM,	      "xvrspim",	CONST,	vsx_floorv4sf2)
BU_VSX_1 (XVRSPIP,	      "xvrspip",	CONST,	vsx_ceilv4sf2)
BU_VSX_1 (XVRSPIZ,	      "xvrspiz",	CONST,	vsx_btruncv4sf2)

BU_VSX_1 (XSRDPI,	      "xsrdpi",		CONST,	vsx_xsrdpi)
BU_VSX_1 (XSRDPIC,	      "xsrdpic",	CONST,	vsx_xsrdpic)
BU_VSX_1 (XSRDPIM,	      "xsrdpim",	CONST,	floordf2)
BU_VSX_1 (XSRDPIP,	      "xsrdpip",	CONST,	ceildf2)
BU_VSX_1 (XSRDPIZ,	      "xsrdpiz",	CONST,	btruncdf2)

/* VSX predicate functions.  */
BU_VSX_P (XVCMPEQSP_P,	      "xvcmpeqsp_p",	CONST,	vector_eq_v4sf_p)
BU_VSX_P (XVCMPGESP_P,	      "xvcmpgesp_p",	CONST,	vector_ge_v4sf_p)
BU_VSX_P (XVCMPGTSP_P,	      "xvcmpgtsp_p",	CONST,	vector_gt_v4sf_p)
BU_VSX_P (XVCMPEQDP_P,	      "xvcmpeqdp_p",	CONST,	vector_eq_v2df_p)
BU_VSX_P (XVCMPGEDP_P,	      "xvcmpgedp_p",	CONST,	vector_ge_v2df_p)
BU_VSX_P (XVCMPGTDP_P,	      "xvcmpgtdp_p",	CONST,	vector_gt_v2df_p)

/* VSX builtins that are handled as special cases.  */
BU_VSX_X (LXSDX,	      "lxsdx",		MEM)
BU_VSX_X (LXVD2X_V1TI,	      "lxvd2x_v1ti",	MEM)
BU_VSX_X (LXVD2X_V2DF,	      "lxvd2x_v2df",	MEM)
BU_VSX_X (LXVD2X_V2DI,	      "lxvd2x_v2di",	MEM)
BU_VSX_X (LXVDSX,	      "lxvdsx",		MEM)
BU_VSX_X (LXVW4X_V4SF,	      "lxvw4x_v4sf",	MEM)
BU_VSX_X (LXVW4X_V4SI,        "lxvw4x_v4si",	MEM)
BU_VSX_X (LXVW4X_V8HI,        "lxvw4x_v8hi",	MEM)
BU_VSX_X (LXVW4X_V16QI,	      "lxvw4x_v16qi",	MEM)
BU_VSX_X (STXSDX,	      "stxsdx",		MEM)
BU_VSX_X (STXVD2X_V1TI,	      "stxsdx_v1ti",	MEM)
BU_VSX_X (STXVD2X_V2DF,	      "stxsdx_v2df",	MEM)
BU_VSX_X (STXVD2X_V2DI,	      "stxsdx_v2di",	MEM)
BU_VSX_X (STXVW4X_V4SF,	      "stxsdx_v4sf",	MEM)
BU_VSX_X (STXVW4X_V4SI,	      "stxsdx_v4si",	MEM)
BU_VSX_X (STXVW4X_V8HI,	      "stxsdx_v8hi",	MEM)
BU_VSX_X (STXVW4X_V16QI,      "stxsdx_v16qi",	MEM)
BU_VSX_X (XSABSDP,	      "xsabsdp",	CONST)
BU_VSX_X (XSADDDP,	      "xsadddp",	FP)
BU_VSX_X (XSCMPODP,	      "xscmpodp",	FP)
BU_VSX_X (XSCMPUDP,	      "xscmpudp",	FP)
BU_VSX_X (XSCVDPSXDS,	      "xscvdpsxds",	FP)
BU_VSX_X (XSCVDPSXWS,	      "xscvdpsxws",	FP)
BU_VSX_X (XSCVDPUXDS,	      "xscvdpuxds",	FP)
BU_VSX_X (XSCVDPUXWS,	      "xscvdpuxws",	FP)
BU_VSX_X (XSCVSXDDP,	      "xscvsxddp",	FP)
BU_VSX_X (XSCVUXDDP,	      "xscvuxddp",	FP)
BU_VSX_X (XSDIVDP,	      "xsdivdp",	FP)
BU_VSX_X (XSMADDADP,	      "xsmaddadp",	FP)
BU_VSX_X (XSMADDMDP,	      "xsmaddmdp",	FP)
BU_VSX_X (XSMOVDP,	      "xsmovdp",	FP)
BU_VSX_X (XSMSUBADP,	      "xsmsubadp",	FP)
BU_VSX_X (XSMSUBMDP,	      "xsmsubmdp",	FP)
BU_VSX_X (XSMULDP,	      "xsmuldp",	FP)
BU_VSX_X (XSNABSDP,	      "xsnabsdp",	FP)
BU_VSX_X (XSNEGDP,	      "xsnegdp",	FP)
BU_VSX_X (XSNMADDADP,	      "xsnmaddadp",	FP)
BU_VSX_X (XSNMADDMDP,	      "xsnmaddmdp",	FP)
BU_VSX_X (XSNMSUBADP,	      "xsnmsubadp",	FP)
BU_VSX_X (XSNMSUBMDP,	      "xsnmsubmdp",	FP)
BU_VSX_X (XSSUBDP,	      "xssubdp",	FP)
BU_VSX_X (VEC_INIT_V1TI,      "vec_init_v1ti",	CONST)
BU_VSX_X (VEC_INIT_V2DF,      "vec_init_v2df",	CONST)
BU_VSX_X (VEC_INIT_V2DI,      "vec_init_v2di",	CONST)
BU_VSX_X (VEC_SET_V1TI,	      "vec_set_v1ti",	CONST)
BU_VSX_X (VEC_SET_V2DF,	      "vec_set_v2df",	CONST)
BU_VSX_X (VEC_SET_V2DI,	      "vec_set_v2di",	CONST)
BU_VSX_X (VEC_EXT_V1TI,	      "vec_ext_v1ti",	CONST)
BU_VSX_X (VEC_EXT_V2DF,	      "vec_ext_v2df",	CONST)
BU_VSX_X (VEC_EXT_V2DI,	      "vec_ext_v2di",	CONST)

/* VSX overloaded builtins, add the overloaded functions not present in
   Altivec.  */

/* 3 argument VSX overloaded builtins.  */
BU_VSX_OVERLOAD_3  (MSUB,     "msub")
BU_VSX_OVERLOAD_3  (NMADD,    "nmadd")
BU_VSX_OVERLOAD_3V (XXPERMDI, "xxpermdi")
BU_VSX_OVERLOAD_3V (XXSLDWI,  "xxsldwi")

/* 2 argument VSX overloaded builtin functions.  */
BU_VSX_OVERLOAD_2 (MUL,	     "mul")
BU_VSX_OVERLOAD_2 (DIV,	     "div")
BU_VSX_OVERLOAD_2 (XXMRGHW,  "xxmrghw")
BU_VSX_OVERLOAD_2 (XXMRGLW,  "xxmrglw")
BU_VSX_OVERLOAD_2 (XXSPLTD,  "xxspltd")
BU_VSX_OVERLOAD_2 (XXSPLTW,  "xxspltw")

/* VSX builtins that are handled as special cases.  */
BU_VSX_OVERLOAD_X (LD,	     "ld")
BU_VSX_OVERLOAD_X (ST,	     "st")

/* 1 argument VSX instructions added in ISA 2.07.  */
BU_P8V_VSX_1 (XSCVSPDPN,      "xscvspdpn",	CONST,	vsx_xscvspdpn)
BU_P8V_VSX_1 (XSCVDPSPN,      "xscvdpspn",	CONST,	vsx_xscvdpspn)

/* 1 argument altivec instructions added in ISA 2.07.  */
BU_P8V_AV_1 (ABS_V2DI,	      "abs_v2di",	CONST,	absv2di2)
BU_P8V_AV_1 (VUPKHSW,	      "vupkhsw",	CONST,	altivec_vupkhsw)
BU_P8V_AV_1 (VUPKLSW,	      "vupklsw",	CONST,	altivec_vupklsw)
BU_P8V_AV_1 (VCLZB,	      "vclzb",		CONST,  clzv16qi2)
BU_P8V_AV_1 (VCLZH,	      "vclzh",		CONST,  clzv8hi2)
BU_P8V_AV_1 (VCLZW,	      "vclzw",		CONST,  clzv4si2)
BU_P8V_AV_1 (VCLZD,	      "vclzd",		CONST,  clzv2di2)
BU_P8V_AV_1 (VPOPCNTB,	      "vpopcntb",	CONST,  popcountv16qi2)
BU_P8V_AV_1 (VPOPCNTH,	      "vpopcnth",	CONST,  popcountv8hi2)
BU_P8V_AV_1 (VPOPCNTW,	      "vpopcntw",	CONST,  popcountv4si2)
BU_P8V_AV_1 (VPOPCNTD,	      "vpopcntd",	CONST,  popcountv2di2)
BU_P8V_AV_1 (VGBBD,	      "vgbbd",		CONST,  p8v_vgbbd)

/* 2 argument altivec instructions added in ISA 2.07.  */
BU_P8V_AV_2 (VADDCUQ,		"vaddcuq",	CONST,	altivec_vaddcuq)
BU_P8V_AV_2 (VADDUDM,		"vaddudm",	CONST,	addv2di3)
BU_P8V_AV_2 (VADDUQM,		"vadduqm",	CONST,	altivec_vadduqm)
BU_P8V_AV_2 (VMINSD,		"vminsd",	CONST,	sminv2di3)
BU_P8V_AV_2 (VMAXSD,		"vmaxsd",	CONST,	smaxv2di3)
BU_P8V_AV_2 (VMINUD,		"vminud",	CONST,	uminv2di3)
BU_P8V_AV_2 (VMAXUD,		"vmaxud",	CONST,	umaxv2di3)
BU_P8V_AV_2 (VMRGEW,		"vmrgew",	CONST,	p8_vmrgew)
BU_P8V_AV_2 (VMRGOW,		"vmrgow",	CONST,	p8_vmrgow)
BU_P8V_AV_2 (VBPERMQ,		"vbpermq",	CONST,	altivec_vbpermq)
BU_P8V_AV_2 (VPKUDUM,		"vpkudum",	CONST,	altivec_vpkudum)
BU_P8V_AV_2 (VPKSDSS,		"vpksdss",	CONST,	altivec_vpksdss)
BU_P8V_AV_2 (VPKUDUS,		"vpkudus",	CONST,	altivec_vpkudus)
BU_P8V_AV_2 (VPKSDUS,		"vpksdus",	CONST,	altivec_vpksdus)
BU_P8V_AV_2 (VRLD,		"vrld",		CONST,	vrotlv2di3)
BU_P8V_AV_2 (VSLD,		"vsld",		CONST,	vashlv2di3)
BU_P8V_AV_2 (VSRD,		"vsrd",		CONST,	vlshrv2di3)
BU_P8V_AV_2 (VSRAD,		"vsrad",	CONST,	vashrv2di3)
BU_P8V_AV_2 (VSUBCUQ,		"vsubcuq",	CONST,	altivec_vsubcuq)
BU_P8V_AV_2 (VSUBUDM,		"vsubudm",	CONST,	subv2di3)
BU_P8V_AV_2 (VSUBUQM,		"vsubuqm",	CONST,	altivec_vsubuqm)

BU_P8V_AV_2 (EQV_V16QI,		"eqv_v16qi",	CONST,	eqvv16qi3)
BU_P8V_AV_2 (EQV_V8HI,		"eqv_v8hi",	CONST,	eqvv8hi3)
BU_P8V_AV_2 (EQV_V4SI,		"eqv_v4si",	CONST,	eqvv4si3)
BU_P8V_AV_2 (EQV_V2DI,		"eqv_v2di",	CONST,	eqvv2di3)
BU_P8V_AV_2 (EQV_V1TI,		"eqv_v1ti",	CONST,	eqvv1ti3)
BU_P8V_AV_2 (EQV_V4SF,		"eqv_v4sf",	CONST,	eqvv4sf3)
BU_P8V_AV_2 (EQV_V2DF,		"eqv_v2df",	CONST,	eqvv2df3)

BU_P8V_AV_2 (NAND_V16QI,	"nand_v16qi",	CONST,	nandv16qi3)
BU_P8V_AV_2 (NAND_V8HI,		"nand_v8hi",	CONST,	nandv8hi3)
BU_P8V_AV_2 (NAND_V4SI,		"nand_v4si",	CONST,	nandv4si3)
BU_P8V_AV_2 (NAND_V2DI,		"nand_v2di",	CONST,	nandv2di3)
BU_P8V_AV_2 (NAND_V1TI,		"nand_v1ti",	CONST,	nandv1ti3)
BU_P8V_AV_2 (NAND_V4SF,		"nand_v4sf",	CONST,	nandv4sf3)
BU_P8V_AV_2 (NAND_V2DF,		"nand_v2df",	CONST,	nandv2df3)

BU_P8V_AV_2 (ORC_V16QI,		"orc_v16qi",	CONST,	orcv16qi3)
BU_P8V_AV_2 (ORC_V8HI,		"orc_v8hi",	CONST,	orcv8hi3)
BU_P8V_AV_2 (ORC_V4SI,		"orc_v4si",	CONST,	orcv4si3)
BU_P8V_AV_2 (ORC_V2DI,		"orc_v2di",	CONST,	orcv2di3)
BU_P8V_AV_2 (ORC_V1TI,		"orc_v1ti",	CONST,	orcv1ti3)
BU_P8V_AV_2 (ORC_V4SF,		"orc_v4sf",	CONST,	orcv4sf3)
BU_P8V_AV_2 (ORC_V2DF,		"orc_v2df",	CONST,	orcv2df3)

/* 3 argument altivec instructions added in ISA 2.07.  */
BU_P8V_AV_3 (VADDEUQM,		"vaddeuqm",	CONST,	altivec_vaddeuqm)
BU_P8V_AV_3 (VADDECUQ,		"vaddecuq",	CONST,	altivec_vaddecuq)
BU_P8V_AV_3 (VSUBEUQM,		"vsubeuqm",	CONST,	altivec_vsubeuqm)
BU_P8V_AV_3 (VSUBECUQ,		"vsubecuq",	CONST,	altivec_vsubecuq)

/* Vector comparison instructions added in ISA 2.07.  */
BU_P8V_AV_2 (VCMPEQUD,		"vcmpequd",	CONST,	vector_eqv2di)
BU_P8V_AV_2 (VCMPGTSD,		"vcmpgtsd",	CONST,	vector_gtv2di)
BU_P8V_AV_2 (VCMPGTUD,		"vcmpgtud",	CONST,	vector_gtuv2di)

/* Vector comparison predicate instructions added in ISA 2.07.  */
BU_P8V_AV_P (VCMPEQUD_P,	"vcmpequd_p",	CONST,	vector_eq_v2di_p)
BU_P8V_AV_P (VCMPGTSD_P,	"vcmpgtsd_p",	CONST,	vector_gt_v2di_p)
BU_P8V_AV_P (VCMPGTUD_P,	"vcmpgtud_p",	CONST,	vector_gtu_v2di_p)

/* ISA 2.07 vector overloaded 1 argument functions.  */
BU_P8V_OVERLOAD_1 (VUPKHSW,	"vupkhsw")
BU_P8V_OVERLOAD_1 (VUPKLSW,	"vupklsw")
BU_P8V_OVERLOAD_1 (VCLZ,	"vclz")
BU_P8V_OVERLOAD_1 (VCLZB,	"vclzb")
BU_P8V_OVERLOAD_1 (VCLZH,	"vclzh")
BU_P8V_OVERLOAD_1 (VCLZW,	"vclzw")
BU_P8V_OVERLOAD_1 (VCLZD,	"vclzd")
BU_P8V_OVERLOAD_1 (VPOPCNT,	"vpopcnt")
BU_P8V_OVERLOAD_1 (VPOPCNTB,	"vpopcntb")
BU_P8V_OVERLOAD_1 (VPOPCNTH,	"vpopcnth")
BU_P8V_OVERLOAD_1 (VPOPCNTW,	"vpopcntw")
BU_P8V_OVERLOAD_1 (VPOPCNTD,	"vpopcntd")
BU_P8V_OVERLOAD_1 (VGBBD,	"vgbbd")

/* ISA 2.07 vector overloaded 2 argument functions.  */
BU_P8V_OVERLOAD_2 (EQV,		"eqv")
BU_P8V_OVERLOAD_2 (NAND,	"nand")
BU_P8V_OVERLOAD_2 (ORC,		"orc")
BU_P8V_OVERLOAD_2 (VADDCUQ,	"vaddcuq")
BU_P8V_OVERLOAD_2 (VADDUDM,	"vaddudm")
BU_P8V_OVERLOAD_2 (VADDUQM,	"vadduqm")
BU_P8V_OVERLOAD_2 (VBPERMQ,	"vbpermq")
BU_P8V_OVERLOAD_2 (VMAXSD,	"vmaxsd")
BU_P8V_OVERLOAD_2 (VMAXUD,	"vmaxud")
BU_P8V_OVERLOAD_2 (VMINSD,	"vminsd")
BU_P8V_OVERLOAD_2 (VMINUD,	"vminud")
BU_P8V_OVERLOAD_2 (VMRGEW,	"vmrgew")
BU_P8V_OVERLOAD_2 (VMRGOW,	"vmrgow")
BU_P8V_OVERLOAD_2 (VPKSDSS,	"vpksdss")
BU_P8V_OVERLOAD_2 (VPKSDUS,	"vpksdus")
BU_P8V_OVERLOAD_2 (VPKUDUM,	"vpkudum")
BU_P8V_OVERLOAD_2 (VPKUDUS,	"vpkudus")
BU_P8V_OVERLOAD_2 (VRLD,	"vrld")
BU_P8V_OVERLOAD_2 (VSLD,	"vsld")
BU_P8V_OVERLOAD_2 (VSRAD,	"vsrad")
BU_P8V_OVERLOAD_2 (VSRD,	"vsrd")
BU_P8V_OVERLOAD_2 (VSUBCUQ,	"vsubcuq")
BU_P8V_OVERLOAD_2 (VSUBUDM,	"vsubudm")
BU_P8V_OVERLOAD_2 (VSUBUQM,	"vsubuqm")

/* ISA 2.07 vector overloaded 3 argument functions.  */
BU_P8V_OVERLOAD_3 (VADDECUQ,	"vaddecuq")
BU_P8V_OVERLOAD_3 (VADDEUQM,	"vaddeuqm")
BU_P8V_OVERLOAD_3 (VSUBECUQ,	"vsubecuq")
BU_P8V_OVERLOAD_3 (VSUBEUQM,	"vsubeuqm")


/* 2 argument extended divide functions added in ISA 2.06.  */
BU_P7_MISC_2 (DIVWE,		"divwe",	CONST,	dive_si)
BU_P7_MISC_2 (DIVWEO,		"divweo",	CONST,	diveo_si)
BU_P7_MISC_2 (DIVWEU,		"divweu",	CONST,	diveu_si)
BU_P7_MISC_2 (DIVWEUO,		"divweuo",	CONST,	diveuo_si)
BU_P7_MISC_2 (DIVDE,		"divde",	CONST,	dive_di)
BU_P7_MISC_2 (DIVDEO,		"divdeo",	CONST,	diveo_di)
BU_P7_MISC_2 (DIVDEU,		"divdeu",	CONST,	diveu_di)
BU_P7_MISC_2 (DIVDEUO,		"divdeuo",	CONST,	diveuo_di)

/* 1 argument DFP (decimal floating point) functions added in ISA 2.05.  */
BU_DFP_MISC_1 (DXEX,		"dxex",		CONST,	dfp_dxex_dd)
BU_DFP_MISC_1 (DXEXQ,		"dxexq",	CONST,	dfp_dxex_td)

/* 2 argument DFP (decimal floating point) functions added in ISA 2.05.  */
BU_DFP_MISC_2 (DDEDPD,		"ddedpd",	CONST,	dfp_ddedpd_dd)
BU_DFP_MISC_2 (DDEDPDQ,		"ddedpdq",	CONST,	dfp_ddedpd_td)
BU_DFP_MISC_2 (DENBCD,		"denbcd",	CONST,	dfp_denbcd_dd)
BU_DFP_MISC_2 (DENBCDQ,		"denbcdq",	CONST,	dfp_denbcd_td)
BU_DFP_MISC_2 (DIEX,		"diex",		CONST,	dfp_diex_dd)
BU_DFP_MISC_2 (DIEXQ,		"diexq",	CONST,	dfp_diex_td)
BU_DFP_MISC_2 (DSCLI,		"dscli",	CONST,	dfp_dscli_dd)
BU_DFP_MISC_2 (DSCLIQ,		"dscliq",	CONST,	dfp_dscli_td)
BU_DFP_MISC_2 (DSCRI,		"dscri",	CONST,	dfp_dscri_dd)
BU_DFP_MISC_2 (DSCRIQ,		"dscriq",	CONST,	dfp_dscri_td)

/* 1 argument BCD functions added in ISA 2.06.  */
BU_P7_MISC_1 (CDTBCD,		"cdtbcd",	CONST,	cdtbcd)
BU_P7_MISC_1 (CBCDTD,		"cbcdtd",	CONST,	cbcdtd)

/* 2 argument BCD functions added in ISA 2.06.  */
BU_P7_MISC_2 (ADDG6S,		"addg6s",	CONST,	addg6s)

/* 3 argument BCD functions added in ISA 2.07.  */
BU_P8V_MISC_3 (BCDADD,		"bcdadd",	CONST,	bcdadd)
BU_P8V_MISC_3 (BCDADD_LT,	"bcdadd_lt",	CONST,	bcdadd_lt)
BU_P8V_MISC_3 (BCDADD_EQ,	"bcdadd_eq",	CONST,	bcdadd_eq)
BU_P8V_MISC_3 (BCDADD_GT,	"bcdadd_gt",	CONST,	bcdadd_gt)
BU_P8V_MISC_3 (BCDADD_OV,	"bcdadd_ov",	CONST,	bcdadd_unordered)
BU_P8V_MISC_3 (BCDSUB,		"bcdsub",	CONST,	bcdsub)
BU_P8V_MISC_3 (BCDSUB_LT,	"bcdsub_lt",	CONST,	bcdsub_lt)
BU_P8V_MISC_3 (BCDSUB_EQ,	"bcdsub_eq",	CONST,	bcdsub_eq)
BU_P8V_MISC_3 (BCDSUB_GT,	"bcdsub_gt",	CONST,	bcdsub_gt)
BU_P8V_MISC_3 (BCDSUB_OV,	"bcdsub_ov",	CONST,	bcdsub_unordered)

/* 2 argument pack/unpack 128-bit floating point types.  */
BU_DFP_MISC_2 (PACK_TD,		"pack_dec128",		CONST,	packtd)
BU_DFP_MISC_2 (UNPACK_TD,	"unpack_dec128",	CONST,	unpacktd)

BU_LDBL128_2 (PACK_TF,		"pack_longdouble",	CONST,	packtf)
BU_LDBL128_2 (UNPACK_TF,	"unpack_longdouble",	CONST,	unpacktf)

BU_P7_MISC_2 (PACK_V1TI,	"pack_vector_int128",	CONST,	packv1ti)
BU_P7_MISC_2 (UNPACK_V1TI,	"unpack_vector_int128",	CONST,	unpackv1ti)


/* 1 argument crypto functions.  */
BU_CRYPTO_1 (VSBOX,		"vsbox",	  CONST, crypto_vsbox)

/* 2 argument crypto functions.  */
BU_CRYPTO_2 (VCIPHER,		"vcipher",	  CONST, crypto_vcipher)
BU_CRYPTO_2 (VCIPHERLAST,	"vcipherlast",	  CONST, crypto_vcipherlast)
BU_CRYPTO_2 (VNCIPHER,		"vncipher",	  CONST, crypto_vncipher)
BU_CRYPTO_2 (VNCIPHERLAST,	"vncipherlast",	  CONST, crypto_vncipherlast)
BU_CRYPTO_2 (VPMSUMB,		"vpmsumb",	  CONST, crypto_vpmsumb)
BU_CRYPTO_2 (VPMSUMH,		"vpmsumh",	  CONST, crypto_vpmsumh)
BU_CRYPTO_2 (VPMSUMW,		"vpmsumw",	  CONST, crypto_vpmsumw)
BU_CRYPTO_2 (VPMSUMD,		"vpmsumd",	  CONST, crypto_vpmsumd)

/* 3 argument crypto functions.  */
BU_CRYPTO_3 (VPERMXOR_V2DI,	"vpermxor_v2di",  CONST, crypto_vpermxor_v2di)
BU_CRYPTO_3 (VPERMXOR_V4SI,	"vpermxor_v4si",  CONST, crypto_vpermxor_v4si)
BU_CRYPTO_3 (VPERMXOR_V8HI,	"vpermxor_v8hi",  CONST, crypto_vpermxor_v8hi)
BU_CRYPTO_3 (VPERMXOR_V16QI,	"vpermxor_v16qi", CONST, crypto_vpermxor_v16qi)
BU_CRYPTO_3 (VSHASIGMAW,	"vshasigmaw",	  CONST, crypto_vshasigmaw)
BU_CRYPTO_3 (VSHASIGMAD,	"vshasigmad",	  CONST, crypto_vshasigmad)

/* 2 argument crypto overloaded functions.  */
BU_CRYPTO_OVERLOAD_2 (VPMSUM,	 "vpmsum")

/* 3 argument crypto overloaded functions.  */
BU_CRYPTO_OVERLOAD_3 (VPERMXOR,	 "vpermxor")
BU_CRYPTO_OVERLOAD_3 (VSHASIGMA, "vshasigma")


/* HTM functions.  */
BU_HTM_1  (TABORT,	"tabort",	MISC,	tabort)
BU_HTM_3  (TABORTDC,	"tabortdc",	MISC,	tabortdc)
BU_HTM_3  (TABORTDCI,	"tabortdci",	MISC,	tabortdci)
BU_HTM_3  (TABORTWC,	"tabortwc",	MISC,	tabortwc)
BU_HTM_3  (TABORTWCI,	"tabortwci",	MISC,	tabortwci)
BU_HTM_1  (TBEGIN,	"tbegin",	MISC,	tbegin)
BU_HTM_1  (TCHECK,	"tcheck",	MISC,	tcheck)
BU_HTM_1  (TEND,	"tend",		MISC,	tend)
BU_HTM_0  (TENDALL,	"tendall",	MISC,	tend)
BU_HTM_0  (TRECHKPT,	"trechkpt",	MISC,	trechkpt)
BU_HTM_1  (TRECLAIM,	"treclaim",	MISC,	treclaim)
BU_HTM_0  (TRESUME,	"tresume",	MISC,	tsr)
BU_HTM_0  (TSUSPEND,	"tsuspend",	MISC,	tsr)
BU_HTM_1  (TSR,		"tsr",		MISC,	tsr)
BU_HTM_0  (TTEST,	"ttest",	MISC,	ttest)

BU_HTM_SPR0 (GET_TFHAR,		"get_tfhar",	MISC,	nothing)
BU_HTM_SPR1 (SET_TFHAR,		"set_tfhar",	MISC,	nothing)
BU_HTM_SPR0 (GET_TFIAR,		"get_tfiar",	MISC,	nothing)
BU_HTM_SPR1 (SET_TFIAR,		"set_tfiar",	MISC,	nothing)
BU_HTM_SPR0 (GET_TEXASR,	"get_texasr",	MISC,	nothing)
BU_HTM_SPR1 (SET_TEXASR,	"set_texasr",	MISC,	nothing)
BU_HTM_SPR0 (GET_TEXASRU,	"get_texasru",	MISC,	nothing)
BU_HTM_SPR1 (SET_TEXASRU,	"set_texasru",	MISC,	nothing)


/* 3 argument paired floating point builtins.  */
BU_PAIRED_3 (MSUB,            "msub",           FP, 	fmsv2sf4)
BU_PAIRED_3 (MADD,            "madd",           FP, 	fmav2sf4)
BU_PAIRED_3 (MADDS0,          "madds0",         FP, 	paired_madds0)
BU_PAIRED_3 (MADDS1,          "madds1",         FP, 	paired_madds1)
BU_PAIRED_3 (NMSUB,           "nmsub",          FP, 	nfmsv2sf4)
BU_PAIRED_3 (NMADD,           "nmadd",          FP, 	nfmav2sf4)
BU_PAIRED_3 (SUM0,            "sum0",           FP, 	paired_sum0)
BU_PAIRED_3 (SUM1,            "sum1",           FP, 	paired_sum1)
BU_PAIRED_3 (SELV2SF4,        "selv2sf4",       CONST, 	selv2sf4)

/* 2 argument paired floating point builtins.  */
BU_PAIRED_2 (DIVV2SF3,	      "divv2sf3",	FP,	paired_divv2sf3)
BU_PAIRED_2 (ADDV2SF3,	      "addv2sf3",	FP,	paired_addv2sf3)
BU_PAIRED_2 (SUBV2SF3,	      "subv2sf3",	FP,	paired_subv2sf3)
BU_PAIRED_2 (MULV2SF3,	      "mulv2sf3",	FP,	paired_mulv2sf3)
BU_PAIRED_2 (MULS0,	      "muls0",		FP,	paired_muls0)
BU_PAIRED_2 (MULS1,	      "muls1",		FP,	paired_muls1)
BU_PAIRED_2 (MERGE00,	      "merge00",	CONST,	paired_merge00)
BU_PAIRED_2 (MERGE01,	      "merge01",	CONST,	paired_merge01)
BU_PAIRED_2 (MERGE10,	      "merge10",	CONST,	paired_merge10)
BU_PAIRED_2 (MERGE11,	      "merge11",	CONST,	paired_merge11)

/* 1 argument paired floating point builtin functions.  */
BU_PAIRED_1 (ABSV2SF2,	      "absv2sf2",	CONST,	paired_absv2sf2)
BU_PAIRED_1 (NABSV2SF2,	      "nabsv2sf2",	CONST,	nabsv2sf2)
BU_PAIRED_1 (NEGV2SF2,	      "negv2sf2",	CONST,	paired_negv2sf2)
BU_PAIRED_1 (SQRTV2SF2,	      "sqrtv2sf2",	FP,	sqrtv2sf2)
BU_PAIRED_1 (RESV2SF,	      "resv2sf2",	FP,	resv2sf2)

/* PAIRED builtins that are handled as special cases.  */
BU_PAIRED_X (STX,	      "stx",		MISC)
BU_PAIRED_X (LX,	      "lx",		MISC)

/* Paired predicates.  */
BU_PAIRED_P (CMPU0,	"cmpu0",	CONST,	paired_cmpu0)
BU_PAIRED_P (CMPU1,	"cmpu1",	CONST,	paired_cmpu1)

/* PowerPC E500 builtins (SPE).  */

BU_SPE_2 (EVADDW,	"evaddw",	MISC,	addv2si3)
BU_SPE_2 (EVAND,	"evand",	MISC,	andv2si3)
BU_SPE_2 (EVANDC,	"evandc",	MISC,	spe_evandc)
BU_SPE_2 (EVDIVWS,	"evdivws",	MISC,	divv2si3)
BU_SPE_2 (EVDIVWU,	"evdivwu",	MISC,	spe_evdivwu)
BU_SPE_2 (EVEQV,	"eveqv",	MISC,	spe_eveqv)
BU_SPE_2 (EVFSADD,	"evfsadd",	MISC,	spe_evfsadd)
BU_SPE_2 (EVFSDIV,	"evfsdiv",	MISC,	spe_evfsdiv)
BU_SPE_2 (EVFSMUL,	"evfsmul",	MISC,	spe_evfsmul)
BU_SPE_2 (EVFSSUB,	"evfssub",	MISC,	spe_evfssub)
BU_SPE_2 (EVMERGEHI,	"evmergehi",	MISC,	spe_evmergehi)
BU_SPE_2 (EVMERGEHILO,	"evmergehilo",	MISC,	spe_evmergehilo)
BU_SPE_2 (EVMERGELO,	"evmergelo",	MISC,	spe_evmergelo)
BU_SPE_2 (EVMERGELOHI,	"evmergelohi",	MISC,	spe_evmergelohi)
BU_SPE_2 (EVMHEGSMFAA,	"evmhegsmfaa",	MISC,	spe_evmhegsmfaa)
BU_SPE_2 (EVMHEGSMFAN,	"evmhegsmfan",	MISC,	spe_evmhegsmfan)
BU_SPE_2 (EVMHEGSMIAA,	"evmhegsmiaa",	MISC,	spe_evmhegsmiaa)
BU_SPE_2 (EVMHEGSMIAN,	"evmhegsmian",	MISC,	spe_evmhegsmian)
BU_SPE_2 (EVMHEGUMIAA,	"evmhegumiaa",	MISC,	spe_evmhegumiaa)
BU_SPE_2 (EVMHEGUMIAN,	"evmhegumian",	MISC,	spe_evmhegumian)
BU_SPE_2 (EVMHESMF,	"evmhesmf",	MISC,	spe_evmhesmf)
BU_SPE_2 (EVMHESMFA,	"evmhesmfa",	MISC,	spe_evmhesmfa)
BU_SPE_2 (EVMHESMFAAW,	"evmhesmfaaw",	MISC,	spe_evmhesmfaaw)
BU_SPE_2 (EVMHESMFANW,	"evmhesmfanw",	MISC,	spe_evmhesmfanw)
BU_SPE_2 (EVMHESMI,	"evmhesmi",	MISC,	spe_evmhesmi)
BU_SPE_2 (EVMHESMIA,	"evmhesmia",	MISC,	spe_evmhesmia)
BU_SPE_2 (EVMHESMIAAW,	"evmhesmiaaw",	MISC,	spe_evmhesmiaaw)
BU_SPE_2 (EVMHESMIANW,	"evmhesmianw",	MISC,	spe_evmhesmianw)
BU_SPE_2 (EVMHESSF,	"evmhessf",	MISC,	spe_evmhessf)
BU_SPE_2 (EVMHESSFA,	"evmhessfa",	MISC,	spe_evmhessfa)
BU_SPE_2 (EVMHESSFAAW,	"evmhessfaaw",	MISC,	spe_evmhessfaaw)
BU_SPE_2 (EVMHESSFANW,	"evmhessfanw",	MISC,	spe_evmhessfanw)
BU_SPE_2 (EVMHESSIAAW,	"evmhessiaaw",	MISC,	spe_evmhessiaaw)
BU_SPE_2 (EVMHESSIANW,	"evmhessianw",	MISC,	spe_evmhessianw)
BU_SPE_2 (EVMHEUMI,	"evmheumi",	MISC,	spe_evmheumi)
BU_SPE_2 (EVMHEUMIA,	"evmheumia",	MISC,	spe_evmheumia)
BU_SPE_2 (EVMHEUMIAAW,	"evmheumiaaw",	MISC,	spe_evmheumiaaw)
BU_SPE_2 (EVMHEUMIANW,	"evmheumianw",	MISC,	spe_evmheumianw)
BU_SPE_2 (EVMHEUSIAAW,	"evmheusiaaw",	MISC,	spe_evmheusiaaw)
BU_SPE_2 (EVMHEUSIANW,	"evmheusianw",	MISC,	spe_evmheusianw)
BU_SPE_2 (EVMHOGSMFAA,	"evmhogsmfaa",	MISC,	spe_evmhogsmfaa)
BU_SPE_2 (EVMHOGSMFAN,	"evmhogsmfan",	MISC,	spe_evmhogsmfan)
BU_SPE_2 (EVMHOGSMIAA,	"evmhogsmiaa",	MISC,	spe_evmhogsmiaa)
BU_SPE_2 (EVMHOGSMIAN,	"evmhogsmian",	MISC,	spe_evmhogsmian)
BU_SPE_2 (EVMHOGUMIAA,	"evmhogumiaa",	MISC,	spe_evmhogumiaa)
BU_SPE_2 (EVMHOGUMIAN,	"evmhogumian",	MISC,	spe_evmhogumian)
BU_SPE_2 (EVMHOSMF,	"evmhosmf",	MISC,	spe_evmhosmf)
BU_SPE_2 (EVMHOSMFA,	"evmhosmfa",	MISC,	spe_evmhosmfa)
BU_SPE_2 (EVMHOSMFAAW,	"evmhosmfaaw",	MISC,	spe_evmhosmfaaw)
BU_SPE_2 (EVMHOSMFANW,	"evmhosmfanw",	MISC,	spe_evmhosmfanw)
BU_SPE_2 (EVMHOSMI,	"evmhosmi",	MISC,	spe_evmhosmi)
BU_SPE_2 (EVMHOSMIA,	"evmhosmia",	MISC,	spe_evmhosmia)
BU_SPE_2 (EVMHOSMIAAW,	"evmhosmiaaw",	MISC,	spe_evmhosmiaaw)
BU_SPE_2 (EVMHOSMIANW,	"evmhosmianw",	MISC,	spe_evmhosmianw)
BU_SPE_2 (EVMHOSSF,	"evmhossf",	MISC,	spe_evmhossf)
BU_SPE_2 (EVMHOSSFA,	"evmhossfa",	MISC,	spe_evmhossfa)
BU_SPE_2 (EVMHOSSFAAW,	"evmhossfaaw",	MISC,	spe_evmhossfaaw)
BU_SPE_2 (EVMHOSSFANW,	"evmhossfanw",	MISC,	spe_evmhossfanw)
BU_SPE_2 (EVMHOSSIAAW,	"evmhossiaaw",	MISC,	spe_evmhossiaaw)
BU_SPE_2 (EVMHOSSIANW,	"evmhossianw",	MISC,	spe_evmhossianw)
BU_SPE_2 (EVMHOUMI,	"evmhoumi",	MISC,	spe_evmhoumi)
BU_SPE_2 (EVMHOUMIA,	"evmhoumia",	MISC,	spe_evmhoumia)
BU_SPE_2 (EVMHOUMIAAW,	"evmhoumiaaw",	MISC,	spe_evmhoumiaaw)
BU_SPE_2 (EVMHOUMIANW,	"evmhoumianw",	MISC,	spe_evmhoumianw)
BU_SPE_2 (EVMHOUSIAAW,	"evmhousiaaw",	MISC,	spe_evmhousiaaw)
BU_SPE_2 (EVMHOUSIANW,	"evmhousianw",	MISC,	spe_evmhousianw)
BU_SPE_2 (EVMWHSMF,	"evmwhsmf",	MISC,	spe_evmwhsmf)
BU_SPE_2 (EVMWHSMFA,	"evmwhsmfa",	MISC,	spe_evmwhsmfa)
BU_SPE_2 (EVMWHSMI,	"evmwhsmi",	MISC,	spe_evmwhsmi)
BU_SPE_2 (EVMWHSMIA,	"evmwhsmia",	MISC,	spe_evmwhsmia)
BU_SPE_2 (EVMWHSSF,	"evmwhssf",	MISC,	spe_evmwhssf)
BU_SPE_2 (EVMWHSSFA,	"evmwhssfa",	MISC,	spe_evmwhssfa)
BU_SPE_2 (EVMWHUMI,	"evmwhumi",	MISC,	spe_evmwhumi)
BU_SPE_2 (EVMWHUMIA,	"evmwhumia",	MISC,	spe_evmwhumia)
BU_SPE_2 (EVMWLSMIAAW,	"evmwlsmiaaw",	MISC,	spe_evmwlsmiaaw)
BU_SPE_2 (EVMWLSMIANW,	"evmwlsmianw",	MISC,	spe_evmwlsmianw)
BU_SPE_2 (EVMWLSSIAAW,	"evmwlssiaaw",	MISC,	spe_evmwlssiaaw)
BU_SPE_2 (EVMWLSSIANW,	"evmwlssianw",	MISC,	spe_evmwlssianw)
BU_SPE_2 (EVMWLUMI,	"evmwlumi",	MISC,	spe_evmwlumi)
BU_SPE_2 (EVMWLUMIA,	"evmwlumia",	MISC,	spe_evmwlumia)
BU_SPE_2 (EVMWLUMIAAW,	"evmwlumiaaw",	MISC,	spe_evmwlumiaaw)
BU_SPE_2 (EVMWLUMIANW,	"evmwlumianw",	MISC,	spe_evmwlumianw)
BU_SPE_2 (EVMWLUSIAAW,	"evmwlusiaaw",	MISC,	spe_evmwlusiaaw)
BU_SPE_2 (EVMWLUSIANW,	"evmwlusianw",	MISC,	spe_evmwlusianw)
BU_SPE_2 (EVMWSMF,	"evmwsmf",	MISC,	spe_evmwsmf)
BU_SPE_2 (EVMWSMFA,	"evmwsmfa",	MISC,	spe_evmwsmfa)
BU_SPE_2 (EVMWSMFAA,	"evmwsmfaa",	MISC,	spe_evmwsmfaa)
BU_SPE_2 (EVMWSMFAN,	"evmwsmfan",	MISC,	spe_evmwsmfan)
BU_SPE_2 (EVMWSMI,	"evmwsmi",	MISC,	spe_evmwsmi)
BU_SPE_2 (EVMWSMIA,	"evmwsmia",	MISC,	spe_evmwsmia)
BU_SPE_2 (EVMWSMIAA,	"evmwsmiaa",	MISC,	spe_evmwsmiaa)
BU_SPE_2 (EVMWSMIAN,	"evmwsmian",	MISC,	spe_evmwsmian)
BU_SPE_2 (EVMWSSF,	"evmwssf",	MISC,	spe_evmwssf)
BU_SPE_2 (EVMWSSFA,	"evmwssfa",	MISC,	spe_evmwssfa)
BU_SPE_2 (EVMWSSFAA,	"evmwssfaa",	MISC,	spe_evmwssfaa)
BU_SPE_2 (EVMWSSFAN,	"evmwssfan",	MISC,	spe_evmwssfan)
BU_SPE_2 (EVMWUMI,	"evmwumi",	MISC,	spe_evmwumi)
BU_SPE_2 (EVMWUMIA,	"evmwumia",	MISC,	spe_evmwumia)
BU_SPE_2 (EVMWUMIAA,	"evmwumiaa",	MISC,	spe_evmwumiaa)
BU_SPE_2 (EVMWUMIAN,	"evmwumian",	MISC,	spe_evmwumian)
BU_SPE_2 (EVNAND,	"evnand",	MISC,	spe_evnand)
BU_SPE_2 (EVNOR,	"evnor",	MISC,	spe_evnor)
BU_SPE_2 (EVOR,		"evor",		MISC,	spe_evor)
BU_SPE_2 (EVORC,	"evorc",	MISC,	spe_evorc)
BU_SPE_2 (EVRLW,	"evrlw",	MISC,	spe_evrlw)
BU_SPE_2 (EVSLW,	"evslw",	MISC,	spe_evslw)
BU_SPE_2 (EVSRWS,	"evsrws",	MISC,	spe_evsrws)
BU_SPE_2 (EVSRWU,	"evsrwu",	MISC,	spe_evsrwu)
BU_SPE_2 (EVSUBFW,	"evsubfw",	MISC,	subv2si3)

/* SPE binary operations expecting a 5-bit unsigned literal.  */
BU_SPE_2 (EVADDIW,	"evaddiw",	MISC,	spe_evaddiw)

BU_SPE_2 (EVRLWI,	"evrlwi",	MISC,	spe_evrlwi)
BU_SPE_2 (EVSLWI,	"evslwi",	MISC,	spe_evslwi)
BU_SPE_2 (EVSRWIS,	"evsrwis",	MISC,	spe_evsrwis)
BU_SPE_2 (EVSRWIU,	"evsrwiu",	MISC,	spe_evsrwiu)
BU_SPE_2 (EVSUBIFW,	"evsubifw",	MISC,	spe_evsubifw)
BU_SPE_2 (EVMWHSSFAA,	"evmwhssfaa",	MISC,	spe_evmwhssfaa)
BU_SPE_2 (EVMWHSSMAA,	"evmwhssmaa",	MISC,	spe_evmwhssmaa)
BU_SPE_2 (EVMWHSMFAA,	"evmwhsmfaa",	MISC,	spe_evmwhsmfaa)
BU_SPE_2 (EVMWHSMIAA,	"evmwhsmiaa",	MISC,	spe_evmwhsmiaa)
BU_SPE_2 (EVMWHUSIAA,	"evmwhusiaa",	MISC,	spe_evmwhusiaa)
BU_SPE_2 (EVMWHUMIAA,	"evmwhumiaa",	MISC,	spe_evmwhumiaa)
BU_SPE_2 (EVMWHSSFAN,	"evmwhssfan",	MISC,	spe_evmwhssfan)
BU_SPE_2 (EVMWHSSIAN,	"evmwhssian",	MISC,	spe_evmwhssian)
BU_SPE_2 (EVMWHSMFAN,	"evmwhsmfan",	MISC,	spe_evmwhsmfan)
BU_SPE_2 (EVMWHSMIAN,	"evmwhsmian",	MISC,	spe_evmwhsmian)
BU_SPE_2 (EVMWHUSIAN,	"evmwhusian",	MISC,	spe_evmwhusian)
BU_SPE_2 (EVMWHUMIAN,	"evmwhumian",	MISC,	spe_evmwhumian)
BU_SPE_2 (EVMWHGSSFAA,	"evmwhgssfaa",	MISC,	spe_evmwhgssfaa)
BU_SPE_2 (EVMWHGSMFAA,	"evmwhgsmfaa",	MISC,	spe_evmwhgsmfaa)
BU_SPE_2 (EVMWHGSMIAA,	"evmwhgsmiaa",	MISC,	spe_evmwhgsmiaa)
BU_SPE_2 (EVMWHGUMIAA,	"evmwhgumiaa",	MISC,	spe_evmwhgumiaa)
BU_SPE_2 (EVMWHGSSFAN,	"evmwhgssfan",	MISC,	spe_evmwhgssfan)
BU_SPE_2 (EVMWHGSMFAN,	"evmwhgsmfan",	MISC,	spe_evmwhgsmfan)
BU_SPE_2 (EVMWHGSMIAN,	"evmwhgsmian",	MISC,	spe_evmwhgsmian)
BU_SPE_2 (EVMWHGUMIAN,	"evmwhgumian",	MISC,	spe_evmwhgumian)
BU_SPE_2 (BRINC,	"brinc",	MISC,	spe_brinc)
BU_SPE_2 (EVXOR,	"evxor",	MISC,	xorv2si3)

/* SPE predicate builtins.  */
BU_SPE_P (EVCMPEQ,	"evcmpeq",	MISC,	spe_evcmpeq)
BU_SPE_P (EVCMPGTS,	"evcmpgts",	MISC,	spe_evcmpgts)
BU_SPE_P (EVCMPGTU,	"evcmpgtu",	MISC,	spe_evcmpgtu)
BU_SPE_P (EVCMPLTS,	"evcmplts",	MISC,	spe_evcmplts)
BU_SPE_P (EVCMPLTU,	"evcmpltu",	MISC,	spe_evcmpltu)
BU_SPE_P (EVFSCMPEQ,	"evfscmpeq",	MISC,	spe_evfscmpeq)
BU_SPE_P (EVFSCMPGT,	"evfscmpgt",	MISC,	spe_evfscmpgt)
BU_SPE_P (EVFSCMPLT,	"evfscmplt",	MISC,	spe_evfscmplt)
BU_SPE_P (EVFSTSTEQ,	"evfststeq",	MISC,	spe_evfststeq)
BU_SPE_P (EVFSTSTGT,	"evfststgt",	MISC,	spe_evfststgt)
BU_SPE_P (EVFSTSTLT,	"evfststlt",	MISC,	spe_evfststlt)

/* SPE evsel builtins.  */
BU_SPE_E (EVSEL_CMPGTS,	 "evsel_gts",	  MISC,	spe_evcmpgts)
BU_SPE_E (EVSEL_CMPGTU,	 "evsel_gtu",	  MISC,	spe_evcmpgtu)
BU_SPE_E (EVSEL_CMPLTS,	 "evsel_lts",	  MISC,	spe_evcmplts)
BU_SPE_E (EVSEL_CMPLTU,	 "evsel_ltu",	  MISC,	spe_evcmpltu)
BU_SPE_E (EVSEL_CMPEQ,	 "evsel_eq",	  MISC,	spe_evcmpeq)
BU_SPE_E (EVSEL_FSCMPGT, "evsel_fsgt",	  MISC,	spe_evfscmpgt)
BU_SPE_E (EVSEL_FSCMPLT, "evsel_fslt",	  MISC,	spe_evfscmplt)
BU_SPE_E (EVSEL_FSCMPEQ, "evsel_fseq",	  MISC,	spe_evfscmpeq)
BU_SPE_E (EVSEL_FSTSTGT, "evsel_fststgt", MISC,	spe_evfststgt)
BU_SPE_E (EVSEL_FSTSTLT, "evsel_fststlt", MISC,	spe_evfststlt)
BU_SPE_E (EVSEL_FSTSTEQ, "evsel_fststeq", MISC,	spe_evfststeq)

BU_SPE_1 (EVABS,	"evabs",	CONST,	absv2si2)
BU_SPE_1 (EVADDSMIAAW,	"evaddsmiaaw",	CONST,	spe_evaddsmiaaw)
BU_SPE_1 (EVADDSSIAAW,	"evaddssiaaw",	CONST,	spe_evaddssiaaw)
BU_SPE_1 (EVADDUMIAAW,	"evaddumiaaw",	CONST,	spe_evaddumiaaw)
BU_SPE_1 (EVADDUSIAAW,	"evaddusiaaw",	CONST,	spe_evaddusiaaw)
BU_SPE_1 (EVCNTLSW,	"evcntlsw",	CONST,	spe_evcntlsw)
BU_SPE_1 (EVCNTLZW,	"evcntlzw",	CONST,	spe_evcntlzw)
BU_SPE_1 (EVEXTSB,	"evextsb",	CONST,	spe_evextsb)
BU_SPE_1 (EVEXTSH,	"evextsh",	CONST,	spe_evextsh)
BU_SPE_1 (EVFSABS,	"evfsabs",	CONST,	spe_evfsabs)
BU_SPE_1 (EVFSCFSF,	"evfscfsf",	CONST,	spe_evfscfsf)
BU_SPE_1 (EVFSCFSI,	"evfscfsi",	CONST,	spe_evfscfsi)
BU_SPE_1 (EVFSCFUF,	"evfscfuf",	CONST,	spe_evfscfuf)
BU_SPE_1 (EVFSCFUI,	"evfscfui",	CONST,	spe_evfscfui)
BU_SPE_1 (EVFSCTSF,	"evfsctsf",	CONST,	spe_evfsctsf)
BU_SPE_1 (EVFSCTSI,	"evfsctsi",	CONST,	spe_evfsctsi)
BU_SPE_1 (EVFSCTSIZ,	"evfsctsiz",	CONST,	spe_evfsctsiz)
BU_SPE_1 (EVFSCTUF,	"evfsctuf",	CONST,	spe_evfsctuf)
BU_SPE_1 (EVFSCTUI,	"evfsctui",	CONST,	spe_evfsctui)
BU_SPE_1 (EVFSCTUIZ,	"evfsctuiz",	CONST,	spe_evfsctuiz)
BU_SPE_1 (EVFSNABS,	"evfsnabs",	CONST,	spe_evfsnabs)
BU_SPE_1 (EVFSNEG,	"evfsneg",	CONST,	spe_evfsneg)
BU_SPE_1 (EVMRA,	"evmra",	CONST,	spe_evmra)
BU_SPE_1 (EVNEG,	"evneg",	CONST,	negv2si2)
BU_SPE_1 (EVRNDW,	"evrndw",	CONST,	spe_evrndw)
BU_SPE_1 (EVSUBFSMIAAW,	"evsubfsmiaaw",	CONST,	spe_evsubfsmiaaw)
BU_SPE_1 (EVSUBFSSIAAW,	"evsubfssiaaw",	CONST,	spe_evsubfssiaaw)
BU_SPE_1 (EVSUBFUMIAAW,	"evsubfumiaaw",	CONST,	spe_evsubfumiaaw)
BU_SPE_1 (EVSUBFUSIAAW,	"evsubfusiaaw",	CONST,	spe_evsubfusiaaw)

/* SPE builtins that are handled as special cases.  */
BU_SPE_X (EVLDD,	      "evldd",		MISC)
BU_SPE_X (EVLDDX,	      "evlddx",		MISC)
BU_SPE_X (EVLDH,	      "evldh",		MISC)
BU_SPE_X (EVLDHX,	      "evldhx",		MISC)
BU_SPE_X (EVLDW,	      "evldw",		MISC)
BU_SPE_X (EVLDWX,	      "evldwx",		MISC)
BU_SPE_X (EVLHHESPLAT,	      "evlhhesplat",	MISC)
BU_SPE_X (EVLHHESPLATX,	      "evlhhesplatx",	MISC)
BU_SPE_X (EVLHHOSSPLAT,	      "evlhhossplat",	MISC)
BU_SPE_X (EVLHHOSSPLATX,      "evlhhossplatx",	MISC)
BU_SPE_X (EVLHHOUSPLAT,	      "evlhhousplat",	MISC)
BU_SPE_X (EVLHHOUSPLATX,      "evlhhousplatx",	MISC)
BU_SPE_X (EVLWHE,	      "evlwhe",		MISC)
BU_SPE_X (EVLWHEX,	      "evlwhex",	MISC)
BU_SPE_X (EVLWHOS,	      "evlwhos",	MISC)
BU_SPE_X (EVLWHOSX,	      "evlwhosx",	MISC)
BU_SPE_X (EVLWHOU,	      "evlwhou",	MISC)
BU_SPE_X (EVLWHOUX,	      "evlwhoux",	MISC)
BU_SPE_X (EVLWHSPLAT,	      "evlwhsplat",	MISC)
BU_SPE_X (EVLWHSPLATX,	      "evlwhsplatx",	MISC)
BU_SPE_X (EVLWWSPLAT,	      "evlwwsplat",	MISC)
BU_SPE_X (EVLWWSPLATX,	      "evlwwsplatx",	MISC)
BU_SPE_X (EVSPLATFI,	      "evsplatfi",	MISC)
BU_SPE_X (EVSPLATI,	      "evsplati",	MISC)
BU_SPE_X (EVSTDD,	      "evstdd",		MISC)
BU_SPE_X (EVSTDDX,	      "evstddx",	MISC)
BU_SPE_X (EVSTDH,	      "evstdh",		MISC)
BU_SPE_X (EVSTDHX,	      "evstdhx",	MISC)
BU_SPE_X (EVSTDW,	      "evstdw",		MISC)
BU_SPE_X (EVSTDWX,	      "evstdwx",	MISC)
BU_SPE_X (EVSTWHE,	      "evstwhe",	MISC)
BU_SPE_X (EVSTWHEX,	      "evstwhex",	MISC)
BU_SPE_X (EVSTWHO,	      "evstwho",	MISC)
BU_SPE_X (EVSTWHOX,	      "evstwhox",	MISC)
BU_SPE_X (EVSTWWE,	      "evstwwe",	MISC)
BU_SPE_X (EVSTWWEX,	      "evstwwex",	MISC)
BU_SPE_X (EVSTWWO,	      "evstwwo",	MISC)
BU_SPE_X (EVSTWWOX,	      "evstwwox",	MISC)
BU_SPE_X (MFSPEFSCR,	      "mfspefscr",	MISC)
BU_SPE_X (MTSPEFSCR,	      "mtspefscr",	MISC)

#define BU_ISEL_X(ENUM, NAME)						\
  RS6000_BUILTIN_X (RS6000_BUILTIN_ISEL ## ENUM,	/* ENUM */	\
		    "__builtin_isel" NAME,		/* NAME */	\
		    RS6000_BTM_ISEL,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED | RS6000_BTC_PURE),		        /* ATTR */	\
		    CODE_FOR_nothing)			/* ICODE */
#define BU_ISEL_OVERLOAD_X(ENUM, NAME)				\
  RS6000_BUILTIN_X (RS6000_BUILTIN_ISEL_ ## ENUM,	/* ENUM */	\
		    "__builtin_isel" NAME,		/* NAME */	\
		    RS6000_BTM_ISEL,			/* MASK */	\
		    (RS6000_BTC_OVERLOADED		/* ATTR */	\
		     | RS6000_BTC_PURE),				\
		    CODE_FOR_nothing)			/* ICODE */
/* ISEL builtins.  */
/* Generic versions that get resolved to specific builtins.  */
BU_ISEL_X(EQ, "eq")
BU_ISEL_X(GT, "gt")
BU_ISEL_X(LT, "lt")
BU_ISEL_X(GTU, "gtu")
BU_ISEL_X(LTU, "ltu")
/* Same deal, but for 64-bit comparisons.  */
BU_ISEL_X(EQD, "eqd")
BU_ISEL_X(GTD, "gtd")
BU_ISEL_X(LTD, "ltd")
BU_ISEL_X(GTDU, "gtdu")
BU_ISEL_X(LTDU, "ltdu")

/* Each set of arguments is polymorphic in selected arguments and return
   value.  */
#undef RS6000_ISEL_BASE
#define RS6000_ISEL_BASE(ARG, PRED, CMP, NAME)     \
  BU_ISEL_OVERLOAD_X(PRED##CMP##_##ARG##_SS, NAME) \
  BU_ISEL_OVERLOAD_X(PRED##CMP##_##ARG##_PP, NAME) \
  BU_ISEL_OVERLOAD_X(PRED##CMP##_##ARG##_UU, NAME)

#undef RS6000_ISEL_PTR_ARG
#define RS6000_ISEL_PTR_ARG(PRED, CMP, NAME) RS6000_ISEL_BASE(PP, PRED, CMP, NAME)
#undef RS6000_ISEL_SIGNED_ARG
#define RS6000_ISEL_SIGNED_ARG(PRED, CMP, NAME) RS6000_ISEL_BASE(SS, PRED, CMP, NAME)
#undef RS6000_ISEL_UNSIGNED_ARG
#define RS6000_ISEL_UNSIGNED_ARG(PRED, CMP, NAME) RS6000_ISEL_BASE(UU, PRED, CMP, NAME)

#undef RS6000_ISEL_EQ
#define RS6000_ISEL_EQ(CMP, NAME)          \
  RS6000_ISEL_PTR_ARG(EQ, CMP, NAME)       \
  RS6000_ISEL_SIGNED_ARG(EQ, CMP, NAME)    \
  RS6000_ISEL_UNSIGNED_ARG(EQ, CMP, NAME)

#undef RS6000_ISEL_LT
#define RS6000_ISEL_LT(CMP, NAME) RS6000_ISEL_SIGNED_ARG(LT, CMP, NAME)

#undef RS6000_ISEL_GT
#define RS6000_ISEL_GT(CMP, NAME) RS6000_ISEL_SIGNED_ARG(GT, CMP, NAME)

#undef RS6000_ISEL_LTU
#define RS6000_ISEL_LTU(CMP, NAME)         \
  RS6000_ISEL_PTR_ARG(LTU, CMP, NAME)      \
  RS6000_ISEL_UNSIGNED_ARG(LTU, CMP, NAME)

#undef RS6000_ISEL_GTU
#define RS6000_ISEL_GTU(CMP, NAME)         \
  RS6000_ISEL_PTR_ARG(GTU, CMP, NAME)      \
  RS6000_ISEL_UNSIGNED_ARG(GTU, CMP, NAME)

RS6000_ISEL_EQ(CMPW, "eq")
RS6000_ISEL_LT(CMPW, "lt")
RS6000_ISEL_GT(CMPW, "gt")
RS6000_ISEL_LTU(CMPW, "ltu")
RS6000_ISEL_GTU(CMPW, "gtu")
RS6000_ISEL_EQ(CMPD, "eqd")
RS6000_ISEL_LT(CMPD, "ltd")
RS6000_ISEL_GT(CMPD, "gtd")
RS6000_ISEL_LTU(CMPD, "ltdu")
RS6000_ISEL_GTU(CMPD, "gtdu")


/* Power7 builtins, that aren't VSX instructions.  */
BU_SPECIAL_X (POWER7_BUILTIN_BPERMD, "__builtin_bpermd", RS6000_BTM_POPCNTD,
	      RS6000_BTC_CONST)

/* Miscellaneous builtins.  */
BU_SPECIAL_X (RS6000_BUILTIN_RECIP, "__builtin_recipdiv", RS6000_BTM_FRE,
	      RS6000_BTC_FP)

BU_SPECIAL_X (RS6000_BUILTIN_RECIPF, "__builtin_recipdivf", RS6000_BTM_FRES,
	      RS6000_BTC_FP)

BU_SPECIAL_X (RS6000_BUILTIN_RSQRT, "__builtin_rsqrt", RS6000_BTM_FRSQRTE,
	      RS6000_BTC_FP)

BU_SPECIAL_X (RS6000_BUILTIN_RSQRTF, "__builtin_rsqrtf", RS6000_BTM_FRSQRTES,
	      RS6000_BTC_FP)

BU_SPECIAL_X (RS6000_BUILTIN_GET_TB, "__builtin_ppc_get_timebase",
	      RS6000_BTM_ALWAYS, RS6000_BTC_MISC)

BU_SPECIAL_X (RS6000_BUILTIN_MFTB, "__builtin_ppc_mftb",
	      RS6000_BTM_ALWAYS, RS6000_BTC_MISC)

BU_SPECIAL_X (RS6000_BUILTIN_MFFS, "__builtin_mffs",
	      RS6000_BTM_ALWAYS, RS6000_BTC_MISC)

RS6000_BUILTIN_X (RS6000_BUILTIN_MTFSF, "__builtin_mtfsf",
	          RS6000_BTM_ALWAYS,
	          RS6000_BTC_MISC | RS6000_BTC_UNARY | RS6000_BTC_VOID,
		  CODE_FOR_rs6000_mtfsf)

/* Darwin CfString builtin.  */
BU_SPECIAL_X (RS6000_BUILTIN_CFSTRING, "__builtin_cfstring", RS6000_BTM_ALWAYS,
	      RS6000_BTC_MISC)

/* e200 LSP support */
BU_LSP_P(ZVCMPEQH,          "zvcmpeqh",           MISC,lsp_zvcmpeqh)           /* CRFD, VA, VB */
BU_LSP_P(ZVCMPGTHS,         "zvcmpgths",          MISC,lsp_zvcmpgths)          /* CRFD, VA, VB */
BU_LSP_P(ZVCMPGTHU,         "zvcmpgthu",          MISC,lsp_zvcmpgthu)          /* CRFD, VA, VB */
BU_LSP_P(ZVCMPLTHS,         "zvcmplths",          MISC,lsp_zvcmplths)          /* CRFD, VA, VB */
BU_LSP_P(ZVCMPLTHU,         "zvcmplthu",          MISC,lsp_zvcmplthu)          /* CRFD, VA, VB */

BU_LSP_X(ZLHHEMX,           "zlhhemx",            MISC)         /* VA, VB, VS */
BU_LSP_X(ZLHHEX,            "zlhhex",             MISC)         /* VA, VB, VS */
BU_LSP_X(ZLHHOSMX,          "zlhhosmx",           MISC)         /* VA, VB, VS */
BU_LSP_X(ZLHHOSX,           "zlhhosx",            MISC)         /* VA, VB, VS */
BU_LSP_X(ZLHHOUMX,          "zlhhoumx",           MISC)         /* VA, VB, VS */
BU_LSP_X(ZLHHOUX,           "zlhhoux",            MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTDDMX,           "zstddmx",            MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTDDX,            "zstddx",             MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTDHMX,           "zstdhmx",            MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTDHX,            "zstdhx",             MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTDWMX,           "zstdwmx",            MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTDWX,            "zstdwx",             MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTHEMX,           "zsthemx",            MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTHEX,            "zsthex",             MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTHOMX,           "zsthomx",            MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTHOX,            "zsthox",             MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTWHEDMX,         "zstwhedmx",          MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTWHEDX,          "zstwhedx",           MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTWHMX,           "zstwhmx",            MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTWHX,            "zstwhx",             MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTWWMX,           "zstwwmx",            MISC)         /* VA, VB, VS */
BU_LSP_X(ZSTWWX,            "zstwwx",             MISC)         /* VA, VB, VS */
BU_LSP_X(ZLHHE,             "zlhhe",              MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZLHHEU,            "zlhheu",             MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZLHHOS,            "zlhhos",             MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZLHHOSU,           "zlhhosu",            MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZLHHOU,            "zlhhou",             MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZLHHOUU,           "zlhhouu",            MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTDD,             "zstdd",              MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTDDU,            "zstddu",             MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTDH,             "zstdh",              MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTDHU,            "zstdhu",             MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTDW,             "zstdw",              MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTDWU,            "zstdwu",             MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTHE,             "zsthe",              MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTHEU,            "zstheu",             MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTHO,             "zstho",              MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTHOU,            "zsthou",             MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTWH,             "zstwh",              MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTWHED,           "zstwhed",            MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTWHEDU,          "zstwhedu",           MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTWHU,            "zstwhu",             MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTWW,             "zstww",              MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZSTWWU,            "zstwwu",             MISC)         /* VA, VS, UIMM */
BU_LSP_X(ZVSPLATFIH,        "zvsplatfih",         MISC)         /* VD, SIMM */
BU_LSP_X(ZVSPLATIH,         "zvsplatih",          MISC)         /* VD, SIMM */
BU_LSP_X(ZLDD,              "zldd",               MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLDDU,             "zlddu",              MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLDH,              "zldh",               MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLDHU,             "zldhu",              MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLDW,              "zldw",               MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLDWU,             "zldwu",              MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLHGWSF,           "zlhgwsf",            MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLHGWSFU,          "zlhgwsfu",           MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLHHSPLAT,         "zlhhsplat",          MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLHHSPLATU,        "zlhhsplatu",         MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWGSFD,           "zlwgsfd",            MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWGSFDU,          "zlwgsfdu",           MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWH,              "zlwh",               MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWHED,            "zlwhed",             MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWHEDU,           "zlwhedu",            MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWHGWSFD,         "zlwhgwsfd",          MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWHGWSFDU,        "zlwhgwsfdu",         MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWHOSD,           "zlwhosd",            MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWHOSDU,          "zlwhosdu",           MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWHOUD,           "zlwhoud",            MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWHOUDU,          "zlwhoudu",           MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWHSPLATD,        "zlwhsplatd",         MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWHSPLATDU,       "zlwhsplatdu",        MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWHSPLATWD,       "zlwhsplatwd",        MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWHSPLATWDU,      "zlwhsplatwdu",       MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWHU,             "zlwhu",              MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWW,              "zlww",               MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWWOSD,           "zlwwosd",            MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWWOSDU,          "zlwwosdu",           MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZLWWU,             "zlwwu",              MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZSLWISS,           "zslwiss",            MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZSLWIUS,           "zslwius",            MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZSTWHOD,           "zstwhod",            MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZSTWHODU,          "zstwhodu",           MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZVADDIH,           "zvaddih",            MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZVRLHI,            "zvrlhi",             MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZVSLHI,            "zvslhi",             MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZVSLHISS,          "zvslhiss",           MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZVSLHIUS,          "zvslhius",           MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZVSRHIS,           "zvsrhis",            MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZVSRHIU,           "zvsrhiu",            MISC)         /* VD, VA, UIMM */
BU_LSP_X(ZVSUBIFH,          "zvsubifh",           MISC)         /* VD, VA, UIMM */
BU_LSP_3(ZXTRW,             "zxtrw",              MISC,lsp_zxtrw)              /* VD, VA, VB, VX_OFF */
BU_LSP_2(ZADDD,             "zaddd",              MISC,lsp_zaddd)              /* VD, VA, VB */
BU_LSP_2(ZADDDSS,           "zadddss",            MISC,lsp_zadddss)            /* VD, VA, VB */
BU_LSP_2(ZADDDUS,           "zadddus",            MISC,lsp_zadddus)            /* VD, VA, VB */
BU_LSP_2(ZADDHESW,          "zaddhesw",           MISC,lsp_zaddhesw)           /* VD, VA, VB */
BU_LSP_2(ZADDHEUW,          "zaddheuw",           MISC,lsp_zaddheuw)           /* VD, VA, VB */
BU_LSP_2(ZADDHOSW,          "zaddhosw",           MISC,lsp_zaddhosw)           /* VD, VA, VB */
BU_LSP_2(ZADDHOUW,          "zaddhouw",           MISC,lsp_zaddhouw)           /* VD, VA, VB */
BU_LSP_2(ZADDWGSF,          "zaddwgsf",           MISC,lsp_zaddwgsf)           /* VD, VA, VB */
BU_LSP_2(ZADDWGSI,          "zaddwgsi",           MISC,lsp_zaddwgsi)           /* VD, VA, VB */
BU_LSP_2(ZADDWGUI,          "zaddwgui",           MISC,lsp_zaddwgui)           /* VD, VA, VB */
BU_LSP_2(ZADDWSS,           "zaddwss",            MISC,lsp_zaddwss)            /* VD, VA, VB */
BU_LSP_2(ZADDWUS,           "zaddwus",            MISC,lsp_zaddwus)            /* VD, VA, VB */
BU_LSP_2(ZBRMINC,           "zbrminc",            MISC,lsp_zbrminc)            /* VD, VA, VB */
BU_LSP_2(ZCIRCINC,          "zcircinc",           MISC,lsp_zcircinc)           /* VD, VA, VB */
BU_LSP_2(ZDIVWSF,           "zdivwsf",            MISC,lsp_zdivwsf)            /* VD, VA, VB */
BU_LSP_X(ZLDDMX,            "zlddmx",             MISC)        /* VD, VA, VB */
BU_LSP_X(ZLDDX,             "zlddx",              MISC)        /* VD, VA, VB */
BU_LSP_X(ZLDHMX,            "zldhmx",             MISC)        /* VD, VA, VB */
BU_LSP_X(ZLDHX,             "zldhx",              MISC)        /* VD, VA, VB */
BU_LSP_X(ZLDWMX,            "zldwmx",             MISC)        /* VD, VA, VB */
BU_LSP_X(ZLDWX,             "zldwx",              MISC)        /* VD, VA, VB */
BU_LSP_X(ZLHGWSFMX,         "zlhgwsfmx",          MISC)        /* VD, VA, VB */
BU_LSP_X(ZLHGWSFX,          "zlhgwsfx",           MISC)        /* VD, VA, VB */
BU_LSP_X(ZLHHSPLATMX,       "zlhhsplatmx",        MISC)        /* VD, VA, VB */
BU_LSP_X(ZLHHSPLATX,        "zlhhsplatx",         MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWGSFDMX,         "zlwgsfdmx",          MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWGSFDX,          "zlwgsfdx",           MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHEDMX,          "zlwhedmx",           MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHEDX,           "zlwhedx",            MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHGWSFDMX,       "zlwhgwsfdmx",        MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHGWSFDX,        "zlwhgwsfdx",         MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHMX,            "zlwhmx",             MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHOSDMX,         "zlwhosdmx",          MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHOSDX,          "zlwhosdx",           MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHOUDMX,         "zlwhoudmx",          MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHOUDX,          "zlwhoudx",           MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHSPLATDMX,      "zlwhsplatdmx",       MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHSPLATDX,       "zlwhsplatdx",        MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHSPLATWDMX,     "zlwhsplatwdmx",      MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHSPLATWDX,      "zlwhsplatwdx",       MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWHX,             "zlwhx",              MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWWMX,            "zlwwmx",             MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWWOSDMX,         "zlwwosdmx",          MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWWOSDX,          "zlwwosdx",           MISC)        /* VD, VA, VB */
BU_LSP_X(ZLWWX,             "zlwwx",              MISC)        /* VD, VA, VB */
BU_LSP_2(ZMHEGSI,           "zmhegsi",            MISC,lsp_zmhegsi)            /* VD, VA, VB */
BU_LSP_2(ZMHEGSIAA,         "zmhegsiaa",          MISC,lsp_zmhegsiaa)          /* VD, VA, VB */
BU_LSP_2(ZMHEGSIAN,         "zmhegsian",          MISC,lsp_zmhegsian)          /* VD, VA, VB */
BU_LSP_2(ZMHEGSMF,          "zmhegsmf",           MISC,lsp_zmhegsmf)           /* VD, VA, VB */
BU_LSP_2(ZMHEGSMFAA,        "zmhegsmfaa",         MISC,lsp_zmhegsmfaa)         /* VD, VA, VB */
BU_LSP_2(ZMHEGSMFAN,        "zmhegsmfan",         MISC,lsp_zmhegsmfan)         /* VD, VA, VB */
BU_LSP_2(ZMHEGSUI,          "zmhegsui",           MISC,lsp_zmhegsui)           /* VD, VA, VB */
BU_LSP_2(ZMHEGSUIAA,        "zmhegsuiaa",         MISC,lsp_zmhegsuiaa)         /* VD, VA, VB */
BU_LSP_2(ZMHEGSUIAN,        "zmhegsuian",         MISC,lsp_zmhegsuian)         /* VD, VA, VB */
BU_LSP_2(ZMHEGUI,           "zmhegui",            MISC,lsp_zmhegui)            /* VD, VA, VB */
BU_LSP_2(ZMHEGUIAA,         "zmheguiaa",          MISC,lsp_zmheguiaa)          /* VD, VA, VB */
BU_LSP_2(ZMHEGUIAN,         "zmheguian",          MISC,lsp_zmheguian)          /* VD, VA, VB */
BU_LSP_2(ZMHEGWSMF,         "zmhegwsmf",          MISC,lsp_zmhegwsmf)          /* VD, VA, VB */
BU_LSP_2(ZMHEGWSMFAA,       "zmhegwsmfaa",        MISC,lsp_zmhegwsmfaa)        /* VD, VA, VB */
BU_LSP_2(ZMHEGWSMFAN,       "zmhegwsmfan",        MISC,lsp_zmhegwsmfan)        /* VD, VA, VB */
BU_LSP_2(ZMHEGWSMFR,        "zmhegwsmfr",         MISC,lsp_zmhegwsmfr)         /* VD, VA, VB */
BU_LSP_2(ZMHEGWSMFRAA,      "zmhegwsmfraa",       MISC,lsp_zmhegwsmfraa)       /* VD, VA, VB */
BU_LSP_2(ZMHEGWSMFRAN,      "zmhegwsmfran",       MISC,lsp_zmhegwsmfran)       /* VD, VA, VB */
BU_LSP_2(ZMHEOGSI,          "zmheogsi",           MISC,lsp_zmheogsi)           /* VD, VA, VB */
BU_LSP_2(ZMHEOGSIAA,        "zmheogsiaa",         MISC,lsp_zmheogsiaa)         /* VD, VA, VB */
BU_LSP_2(ZMHEOGSIAN,        "zmheogsian",         MISC,lsp_zmheogsian)         /* VD, VA, VB */
BU_LSP_2(ZMHEOGSMF,         "zmheogsmf",          MISC,lsp_zmheogsmf)          /* VD, VA, VB */
BU_LSP_2(ZMHEOGSMFAA,       "zmheogsmfaa",        MISC,lsp_zmheogsmfaa)        /* VD, VA, VB */
BU_LSP_2(ZMHEOGSMFAN,       "zmheogsmfan",        MISC,lsp_zmheogsmfan)        /* VD, VA, VB */
BU_LSP_2(ZMHEOGSUI,         "zmheogsui",          MISC,lsp_zmheogsui)          /* VD, VA, VB */
BU_LSP_2(ZMHEOGSUIAA,       "zmheogsuiaa",        MISC,lsp_zmheogsuiaa)        /* VD, VA, VB */
BU_LSP_2(ZMHEOGSUIAN,       "zmheogsuian",        MISC,lsp_zmheogsuian)        /* VD, VA, VB */
BU_LSP_2(ZMHEOGUI,          "zmheogui",           MISC,lsp_zmheogui)           /* VD, VA, VB */
BU_LSP_2(ZMHEOGUIAA,        "zmheoguiaa",         MISC,lsp_zmheoguiaa)         /* VD, VA, VB */
BU_LSP_2(ZMHEOGUIAN,        "zmheoguian",         MISC,lsp_zmheoguian)         /* VD, VA, VB */
BU_LSP_2(ZMHEOGWSMF,        "zmheogwsmf",         MISC,lsp_zmheogwsmf)         /* VD, VA, VB */
BU_LSP_2(ZMHEOGWSMFAA,      "zmheogwsmfaa",       MISC,lsp_zmheogwsmfaa)       /* VD, VA, VB */
BU_LSP_2(ZMHEOGWSMFAN,      "zmheogwsmfan",       MISC,lsp_zmheogwsmfan)       /* VD, VA, VB */
BU_LSP_2(ZMHEOGWSMFR,       "zmheogwsmfr",        MISC,lsp_zmheogwsmfr)        /* VD, VA, VB */
BU_LSP_2(ZMHEOGWSMFRAA,     "zmheogwsmfraa",      MISC,lsp_zmheogwsmfraa)      /* VD, VA, VB */
BU_LSP_2(ZMHEOGWSMFRAN,     "zmheogwsmfran",      MISC,lsp_zmheogwsmfran)      /* VD, VA, VB */
BU_LSP_2(ZMHEOSF,           "zmheosf",            MISC,lsp_zmheosf)            /* VD, VA, VB */
BU_LSP_2(ZMHEOSFAAS,        "zmheosfaas",         MISC,lsp_zmheosfaas)         /* VD, VA, VB */
BU_LSP_2(ZMHEOSFANS,        "zmheosfans",         MISC,lsp_zmheosfans)         /* VD, VA, VB */
BU_LSP_2(ZMHEOSFR,          "zmheosfr",           MISC,lsp_zmheosfr)           /* VD, VA, VB */
BU_LSP_2(ZMHEOSFRAAS,       "zmheosfraas",        MISC,lsp_zmheosfraas)        /* VD, VA, VB */
BU_LSP_2(ZMHEOSFRANS,       "zmheosfrans",        MISC,lsp_zmheosfrans)        /* VD, VA, VB */
BU_LSP_2(ZMHEOSI,           "zmheosi",            MISC,lsp_zmheosi)            /* VD, VA, VB */
BU_LSP_2(ZMHEOSIAA,         "zmheosiaa",          MISC,lsp_zmheosiaa)          /* VD, VA, VB */
BU_LSP_2(ZMHEOSIAAS,        "zmheosiaas",         MISC,lsp_zmheosiaas)         /* VD, VA, VB */
BU_LSP_2(ZMHEOSIAN,         "zmheosian",          MISC,lsp_zmheosian)          /* VD, VA, VB */
BU_LSP_2(ZMHEOSIANS,        "zmheosians",         MISC,lsp_zmheosians)         /* VD, VA, VB */
BU_LSP_2(ZMHEOSUI,          "zmheosui",           MISC,lsp_zmheosui)           /* VD, VA, VB */
BU_LSP_2(ZMHEOSUIAA,        "zmheosuiaa",         MISC,lsp_zmheosuiaa)         /* VD, VA, VB */
BU_LSP_2(ZMHEOSUIAAS,       "zmheosuiaas",        MISC,lsp_zmheosuiaas)        /* VD, VA, VB */
BU_LSP_2(ZMHEOSUIAN,        "zmheosuian",         MISC,lsp_zmheosuian)         /* VD, VA, VB */
BU_LSP_2(ZMHEOSUIANS,       "zmheosuians",        MISC,lsp_zmheosuians)        /* VD, VA, VB */
BU_LSP_2(ZMHEOUI,           "zmheoui",            MISC,lsp_zmheoui)            /* VD, VA, VB */
BU_LSP_2(ZMHEOUIAA,         "zmheouiaa",          MISC,lsp_zmheouiaa)          /* VD, VA, VB */
BU_LSP_2(ZMHEOUIAAS,        "zmheouiaas",         MISC,lsp_zmheouiaas)         /* VD, VA, VB */
BU_LSP_2(ZMHEOUIAN,         "zmheouian",          MISC,lsp_zmheouian)          /* VD, VA, VB */
BU_LSP_2(ZMHEOUIANS,        "zmheouians",         MISC,lsp_zmheouians)         /* VD, VA, VB */
BU_LSP_2(ZMHESF,            "zmhesf",             MISC,lsp_zmhesf)             /* VD, VA, VB */
BU_LSP_2(ZMHESFAAS,         "zmhesfaas",          MISC,lsp_zmhesfaas)          /* VD, VA, VB */
BU_LSP_2(ZMHESFANS,         "zmhesfans",          MISC,lsp_zmhesfans)          /* VD, VA, VB */
BU_LSP_2(ZMHESFR,           "zmhesfr",            MISC,lsp_zmhesfr)            /* VD, VA, VB */
BU_LSP_2(ZMHESFRAAS,        "zmhesfraas",         MISC,lsp_zmhesfraas)         /* VD, VA, VB */
BU_LSP_2(ZMHESFRANS,        "zmhesfrans",         MISC,lsp_zmhesfrans)         /* VD, VA, VB */
BU_LSP_2(ZMHESI,            "zmhesi",             MISC,lsp_zmhesi)             /* VD, VA, VB */
BU_LSP_2(ZMHESIAA,          "zmhesiaa",           MISC,lsp_zmhesiaa)           /* VD, VA, VB */
BU_LSP_2(ZMHESIAAS,         "zmhesiaas",          MISC,lsp_zmhesiaas)          /* VD, VA, VB */
BU_LSP_2(ZMHESIAN,          "zmhesian",           MISC,lsp_zmhesian)           /* VD, VA, VB */
BU_LSP_2(ZMHESIANS,         "zmhesians",          MISC,lsp_zmhesians)          /* VD, VA, VB */
BU_LSP_2(ZMHESUI,           "zmhesui",            MISC,lsp_zmhesui)            /* VD, VA, VB */
BU_LSP_2(ZMHESUIAA,         "zmhesuiaa",          MISC,lsp_zmhesuiaa)          /* VD, VA, VB */
BU_LSP_2(ZMHESUIAAS,        "zmhesuiaas",         MISC,lsp_zmhesuiaas)         /* VD, VA, VB */
BU_LSP_2(ZMHESUIAN,         "zmhesuian",          MISC,lsp_zmhesuian)          /* VD, VA, VB */
BU_LSP_2(ZMHESUIANS,        "zmhesuians",         MISC,lsp_zmhesuians)         /* VD, VA, VB */
BU_LSP_2(ZMHEUI,            "zmheui",             MISC,lsp_zmheui)             /* VD, VA, VB */
BU_LSP_2(ZMHEUIAA,          "zmheuiaa",           MISC,lsp_zmheuiaa)           /* VD, VA, VB */
BU_LSP_2(ZMHEUIAAS,         "zmheuiaas",          MISC,lsp_zmheuiaas)          /* VD, VA, VB */
BU_LSP_2(ZMHEUIAN,          "zmheuian",           MISC,lsp_zmheuian)           /* VD, VA, VB */
BU_LSP_2(ZMHEUIANS,         "zmheuians",          MISC,lsp_zmheuians)          /* VD, VA, VB */
BU_LSP_2(ZMHOGSI,           "zmhogsi",            MISC,lsp_zmhogsi)            /* VD, VA, VB */
BU_LSP_2(ZMHOGSIAA,         "zmhogsiaa",          MISC,lsp_zmhogsiaa)          /* VD, VA, VB */
BU_LSP_2(ZMHOGSIAN,         "zmhogsian",          MISC,lsp_zmhogsian)          /* VD, VA, VB */
BU_LSP_2(ZMHOGSMF,          "zmhogsmf",           MISC,lsp_zmhogsmf)           /* VD, VA, VB */
BU_LSP_2(ZMHOGSMFAA,        "zmhogsmfaa",         MISC,lsp_zmhogsmfaa)         /* VD, VA, VB */
BU_LSP_2(ZMHOGSMFAN,        "zmhogsmfan",         MISC,lsp_zmhogsmfan)         /* VD, VA, VB */
BU_LSP_2(ZMHOGSUI,          "zmhogsui",           MISC,lsp_zmhogsui)           /* VD, VA, VB */
BU_LSP_2(ZMHOGSUIAA,        "zmhogsuiaa",         MISC,lsp_zmhogsuiaa)         /* VD, VA, VB */
BU_LSP_2(ZMHOGSUIAN,        "zmhogsuian",         MISC,lsp_zmhogsuian)         /* VD, VA, VB */
BU_LSP_2(ZMHOGUI,           "zmhogui",            MISC,lsp_zmhogui)            /* VD, VA, VB */
BU_LSP_2(ZMHOGUIAA,         "zmhoguiaa",          MISC,lsp_zmhoguiaa)          /* VD, VA, VB */
BU_LSP_2(ZMHOGUIAN,         "zmhoguian",          MISC,lsp_zmhoguian)          /* VD, VA, VB */
BU_LSP_2(ZMHOGWSMF,         "zmhogwsmf",          MISC,lsp_zmhogwsmf)          /* VD, VA, VB */
BU_LSP_2(ZMHOGWSMFAA,       "zmhogwsmfaa",        MISC,lsp_zmhogwsmfaa)        /* VD, VA, VB */
BU_LSP_2(ZMHOGWSMFAN,       "zmhogwsmfan",        MISC,lsp_zmhogwsmfan)        /* VD, VA, VB */
BU_LSP_2(ZMHOGWSMFR,        "zmhogwsmfr",         MISC,lsp_zmhogwsmfr)         /* VD, VA, VB */
BU_LSP_2(ZMHOGWSMFRAA,      "zmhogwsmfraa",       MISC,lsp_zmhogwsmfraa)       /* VD, VA, VB */
BU_LSP_2(ZMHOGWSMFRAN,      "zmhogwsmfran",       MISC,lsp_zmhogwsmfran)       /* VD, VA, VB */
BU_LSP_2(ZMHOSF,            "zmhosf",             MISC,lsp_zmhosf)             /* VD, VA, VB */
BU_LSP_2(ZMHOSFAAS,         "zmhosfaas",          MISC,lsp_zmhosfaas)          /* VD, VA, VB */
BU_LSP_2(ZMHOSFANS,         "zmhosfans",          MISC,lsp_zmhosfans)          /* VD, VA, VB */
BU_LSP_2(ZMHOSFR,           "zmhosfr",            MISC,lsp_zmhosfr)            /* VD, VA, VB */
BU_LSP_2(ZMHOSFRAAS,        "zmhosfraas",         MISC,lsp_zmhosfraas)         /* VD, VA, VB */
BU_LSP_2(ZMHOSFRANS,        "zmhosfrans",         MISC,lsp_zmhosfrans)         /* VD, VA, VB */
BU_LSP_2(ZMHOSI,            "zmhosi",             MISC,lsp_zmhosi)             /* VD, VA, VB */
BU_LSP_2(ZMHOSIAA,          "zmhosiaa",           MISC,lsp_zmhosiaa)           /* VD, VA, VB */
BU_LSP_2(ZMHOSIAAS,         "zmhosiaas",          MISC,lsp_zmhosiaas)          /* VD, VA, VB */
BU_LSP_2(ZMHOSIAN,          "zmhosian",           MISC,lsp_zmhosian)           /* VD, VA, VB */
BU_LSP_2(ZMHOSIANS,         "zmhosians",          MISC,lsp_zmhosians)          /* VD, VA, VB */
BU_LSP_2(ZMHOSUI,           "zmhosui",            MISC,lsp_zmhosui)            /* VD, VA, VB */
BU_LSP_2(ZMHOSUIAA,         "zmhosuiaa",          MISC,lsp_zmhosuiaa)          /* VD, VA, VB */
BU_LSP_2(ZMHOSUIAAS,        "zmhosuiaas",         MISC,lsp_zmhosuiaas)         /* VD, VA, VB */
BU_LSP_2(ZMHOSUIAN,         "zmhosuian",          MISC,lsp_zmhosuian)          /* VD, VA, VB */
BU_LSP_2(ZMHOSUIANS,        "zmhosuians",         MISC,lsp_zmhosuians)         /* VD, VA, VB */
BU_LSP_2(ZMHOUI,            "zmhoui",             MISC,lsp_zmhoui)             /* VD, VA, VB */
BU_LSP_2(ZMHOUIAA,          "zmhouiaa",           MISC,lsp_zmhouiaa)           /* VD, VA, VB */
BU_LSP_2(ZMHOUIAAS,         "zmhouiaas",          MISC,lsp_zmhouiaas)          /* VD, VA, VB */
BU_LSP_2(ZMHOUIAN,          "zmhouian",           MISC,lsp_zmhouian)           /* VD, VA, VB */
BU_LSP_2(ZMHOUIANS,         "zmhouians",          MISC,lsp_zmhouians)          /* VD, VA, VB */
BU_LSP_2(ZMWGSI,            "zmwgsi",             MISC,lsp_zmwgsi)             /* VD, VA, VB */
BU_LSP_2(ZMWGSIAA,          "zmwgsiaa",           MISC,lsp_zmwgsiaa)           /* VD, VA, VB */
BU_LSP_2(ZMWGSIAAS,         "zmwgsiaas",          MISC,lsp_zmwgsiaas)          /* VD, VA, VB */
BU_LSP_2(ZMWGSIAN,          "zmwgsian",           MISC,lsp_zmwgsian)           /* VD, VA, VB */
BU_LSP_2(ZMWGSIANS,         "zmwgsians",          MISC,lsp_zmwgsians)          /* VD, VA, VB */
BU_LSP_2(ZMWGSMF,           "zmwgsmf",            MISC,lsp_zmwgsmf)            /* VD, VA, VB */
BU_LSP_2(ZMWGSMFAA,         "zmwgsmfaa",          MISC,lsp_zmwgsmfaa)          /* VD, VA, VB */
BU_LSP_2(ZMWGSMFAN,         "zmwgsmfan",          MISC,lsp_zmwgsmfan)          /* VD, VA, VB */
BU_LSP_2(ZMWGSMFR,          "zmwgsmfr",           MISC,lsp_zmwgsmfr)           /* VD, VA, VB */
BU_LSP_2(ZMWGSMFRAA,        "zmwgsmfraa",         MISC,lsp_zmwgsmfraa)         /* VD, VA, VB */
BU_LSP_2(ZMWGSMFRAN,        "zmwgsmfran",         MISC,lsp_zmwgsmfran)         /* VD, VA, VB */
BU_LSP_2(ZMWGSUI,           "zmwgsui",            MISC,lsp_zmwgsui)            /* VD, VA, VB */
BU_LSP_2(ZMWGSUIAA,         "zmwgsuiaa",          MISC,lsp_zmwgsuiaa)          /* VD, VA, VB */
BU_LSP_2(ZMWGSUIAAS,        "zmwgsuiaas",         MISC,lsp_zmwgsuiaas)         /* VD, VA, VB */
BU_LSP_2(ZMWGSUIAN,         "zmwgsuian",          MISC,lsp_zmwgsuian)          /* VD, VA, VB */
BU_LSP_2(ZMWGSUIANS,        "zmwgsuians",         MISC,lsp_zmwgsuians)         /* VD, VA, VB */
BU_LSP_2(ZMWGUI,            "zmwgui",             MISC,lsp_zmwgui)             /* VD, VA, VB */
BU_LSP_2(ZMWGUIAA,          "zmwguiaa",           MISC,lsp_zmwguiaa)           /* VD, VA, VB */
BU_LSP_2(ZMWGUIAAS,         "zmwguiaas",          MISC,lsp_zmwguiaas)          /* VD, VA, VB */
BU_LSP_2(ZMWGUIAN,          "zmwguian",           MISC,lsp_zmwguian)           /* VD, VA, VB */
BU_LSP_2(ZMWGUIANS,         "zmwguians",          MISC,lsp_zmwguians)          /* VD, VA, VB */
BU_LSP_2(ZMWLSIAAS,         "zmwlsiaas",          MISC,lsp_zmwlsiaas)          /* VD, VA, VB */
BU_LSP_2(ZMWLSIANS,         "zmwlsians",          MISC,lsp_zmwlsians)          /* VD, VA, VB */
BU_LSP_2(ZMWLSIS,           "zmwlsis",            MISC,lsp_zmwlsis)            /* VD, VA, VB */
BU_LSP_2(ZMWLSUIAAS,        "zmwlsuiaas",         MISC,lsp_zmwlsuiaas)         /* VD, VA, VB */
BU_LSP_2(ZMWLSUIANS,        "zmwlsuians",         MISC,lsp_zmwlsuians)         /* VD, VA, VB */
BU_LSP_2(ZMWLSUIS,          "zmwlsuis",           MISC,lsp_zmwlsuis)           /* VD, VA, VB */
BU_LSP_2(ZMWLUIAA,          "zmwluiaa",           MISC,lsp_zmwluiaa)           /* VD, VA, VB */
BU_LSP_2(ZMWLUIAAS,         "zmwluiaas",          MISC,lsp_zmwluiaas)          /* VD, VA, VB */
BU_LSP_2(ZMWLUIAN,          "zmwluian",           MISC,lsp_zmwluian)           /* VD, VA, VB */
BU_LSP_2(ZMWLUIANS,         "zmwluians",          MISC,lsp_zmwluians)          /* VD, VA, VB */
BU_LSP_2(ZMWLUIS,           "zmwluis",            MISC,lsp_zmwluis)            /* VD, VA, VB */
BU_LSP_2(ZMWSF,             "zmwsf",              MISC,lsp_zmwsf)              /* VD, VA, VB */
BU_LSP_2(ZMWSFAAS,          "zmwsfaas",           MISC,lsp_zmwsfaas)           /* VD, VA, VB */
BU_LSP_2(ZMWSFANS,          "zmwsfans",           MISC,lsp_zmwsfans)           /* VD, VA, VB */
BU_LSP_2(ZMWSFR,            "zmwsfr",             MISC,lsp_zmwsfr)             /* VD, VA, VB */
BU_LSP_2(ZMWSFRAAS,         "zmwsfraas",          MISC,lsp_zmwsfraas)          /* VD, VA, VB */
BU_LSP_2(ZMWSFRANS,         "zmwsfrans",          MISC,lsp_zmwsfrans)          /* VD, VA, VB */
BU_LSP_2(ZPKSWGSHFRS,       "zpkswgshfrs",        MISC,lsp_zpkswgshfrs)        /* VD, VA, VB */
BU_LSP_2(ZPKSWGSWFRS,       "zpkswgswfrs",        MISC,lsp_zpkswgswfrs)        /* VD, VA, VB */
BU_LSP_2(ZSATSDSW,          "zsatsdsw",           MISC,lsp_zsatsdsw)           /* VD, VA, VB */
BU_LSP_2(ZSATSDUW,          "zsatsduw",           MISC,lsp_zsatsduw)           /* VD, VA, VB */
BU_LSP_2(ZSATUDUW,          "zsatuduw",           MISC,lsp_zsatuduw)           /* VD, VA, VB */
BU_LSP_2(ZSLWSS,            "zslwss",             MISC,lsp_zslwss)             /* VD, VA, VB */
BU_LSP_2(ZSLWUS,            "zslwus",             MISC,lsp_zslwus)             /* VD, VA, VB */
BU_LSP_2(ZSTWHODMX,         "zstwhodmx",          MISC,lsp_zstwhodmx)          /* VD, VA, VB */
BU_LSP_2(ZSTWHODX,          "zstwhodx",           MISC,lsp_zstwhodx)           /* VD, VA, VB */
BU_LSP_2(ZSUBFD,            "zsubfd",             MISC,lsp_zsubfd)             /* VD, VA, VB */
BU_LSP_2(ZSUBFDSS,          "zsubfdss",           MISC,lsp_zsubfdss)           /* VD, VA, VB */
BU_LSP_2(ZSUBFDUS,          "zsubfdus",           MISC,lsp_zsubfdus)           /* VD, VA, VB */
BU_LSP_2(ZSUBFHESW,         "zsubfhesw",          MISC,lsp_zsubfhesw)          /* VD, VA, VB */
BU_LSP_2(ZSUBFHEUW,         "zsubfheuw",          MISC,lsp_zsubfheuw)          /* VD, VA, VB */
BU_LSP_2(ZSUBFHOSW,         "zsubfhosw",          MISC,lsp_zsubfhosw)          /* VD, VA, VB */
BU_LSP_2(ZSUBFHOUW,         "zsubfhouw",          MISC,lsp_zsubfhouw)          /* VD, VA, VB */
BU_LSP_2(ZSUBFWGSF,         "zsubfwgsf",          MISC,lsp_zsubfwgsf)          /* VD, VA, VB */
BU_LSP_2(ZSUBFWGSI,         "zsubfwgsi",          MISC,lsp_zsubfwgsi)          /* VD, VA, VB */
BU_LSP_2(ZSUBFWGUI,         "zsubfwgui",          MISC,lsp_zsubfwgui)          /* VD, VA, VB */
BU_LSP_2(ZSUBFWSS,          "zsubfwss",           MISC,lsp_zsubfwss)           /* VD, VA, VB */
BU_LSP_2(ZSUBFWUS,          "zsubfwus",           MISC,lsp_zsubfwus)           /* VD, VA, VB */
BU_LSP_2(ZVADDH,            "zvaddh",             MISC,lsp_zvaddh)             /* VD, VA, VB */
BU_LSP_2(ZVADDHSS,          "zvaddhss",           MISC,lsp_zvaddhss)           /* VD, VA, VB */
BU_LSP_2(ZVADDHUS,          "zvaddhus",           MISC,lsp_zvaddhus)           /* VD, VA, VB */
BU_LSP_2(ZVADDHX,           "zvaddhx",            MISC,lsp_zvaddhx)            /* VD, VA, VB */
BU_LSP_2(ZVADDHXSS,         "zvaddhxss",          MISC,lsp_zvaddhxss)          /* VD, VA, VB */
BU_LSP_2(ZVADDSUBFH,        "zvaddsubfh",         MISC,lsp_zvaddsubfh)         /* VD, VA, VB */
BU_LSP_2(ZVADDSUBFHSS,      "zvaddsubfhss",       MISC,lsp_zvaddsubfhss)       /* VD, VA, VB */
BU_LSP_2(ZVADDSUBFHX,       "zvaddsubfhx",        MISC,lsp_zvaddsubfhx)        /* VD, VA, VB */
BU_LSP_2(ZVADDSUBFHXSS,     "zvaddsubfhxss",      MISC,lsp_zvaddsubfhxss)      /* VD, VA, VB */
BU_LSP_2(ZVADDSUBFW,        "zvaddsubfw",         MISC,lsp_zvaddsubfw)         /* VD, VA, VB */
BU_LSP_2(ZVADDSUBFWSS,      "zvaddsubfwss",       MISC,lsp_zvaddsubfwss)       /* VD, VA, VB */
BU_LSP_2(ZVADDW,            "zvaddw",             MISC,lsp_zvaddw)             /* VD, VA, VB */
BU_LSP_2(ZVADDWSS,          "zvaddwss",           MISC,lsp_zvaddwss)           /* VD, VA, VB */
BU_LSP_2(ZVADDWUS,          "zvaddwus",           MISC,lsp_zvaddwus)           /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASFAAS,     "zvdotphasfaas",      MISC,lsp_zvdotphasfaas)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASFANS,     "zvdotphasfans",      MISC,lsp_zvdotphasfans)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASFRAAS,    "zvdotphasfraas",     MISC,lsp_zvdotphasfraas)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASFRANS,    "zvdotphasfrans",     MISC,lsp_zvdotphasfrans)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASFRS,      "zvdotphasfrs",       MISC,lsp_zvdotphasfrs)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASFS,       "zvdotphasfs",        MISC,lsp_zvdotphasfs)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASI,        "zvdotphasi",         MISC,lsp_zvdotphasi)         /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASIAA,      "zvdotphasiaa",       MISC,lsp_zvdotphasiaa)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASIAAS,     "zvdotphasiaas",      MISC,lsp_zvdotphasiaas)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASIAN,      "zvdotphasian",       MISC,lsp_zvdotphasian)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASIANS,     "zvdotphasians",      MISC,lsp_zvdotphasians)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASIS,       "zvdotphasis",        MISC,lsp_zvdotphasis)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASUI,       "zvdotphasui",        MISC,lsp_zvdotphasui)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASUIAA,     "zvdotphasuiaa",      MISC,lsp_zvdotphasuiaa)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASUIAAS,    "zvdotphasuiaas",     MISC,lsp_zvdotphasuiaas)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASUIAN,     "zvdotphasuian",      MISC,lsp_zvdotphasuian)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASUIANS,    "zvdotphasuians",     MISC,lsp_zvdotphasuians)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHASUIS,      "zvdotphasuis",       MISC,lsp_zvdotphasuis)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHAUI,        "zvdotphaui",         MISC,lsp_zvdotphaui)         /* VD, VA, VB */
BU_LSP_2(ZVDOTPHAUIAA,      "zvdotphauiaa",       MISC,lsp_zvdotphauiaa)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHAUIAAS,     "zvdotphauiaas",      MISC,lsp_zvdotphauiaas)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHAUIAN,      "zvdotphauian",       MISC,lsp_zvdotphauian)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHAUIANS,     "zvdotphauians",      MISC,lsp_zvdotphauians)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHAUIS,       "zvdotphauis",        MISC,lsp_zvdotphauis)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGASI,       "zvdotphgasi",        MISC,lsp_zvdotphgasi)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGASIAA,     "zvdotphgasiaa",      MISC,lsp_zvdotphgasiaa)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGASIAN,     "zvdotphgasian",      MISC,lsp_zvdotphgasian)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGASMF,      "zvdotphgasmf",       MISC,lsp_zvdotphgasmf)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGASMFAA,    "zvdotphgasmfaa",     MISC,lsp_zvdotphgasmfaa)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGASMFAN,    "zvdotphgasmfan",     MISC,lsp_zvdotphgasmfan)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGASUI,      "zvdotphgasui",       MISC,lsp_zvdotphgasui)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGASUIAA,    "zvdotphgasuiaa",     MISC,lsp_zvdotphgasuiaa)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGASUIAN,    "zvdotphgasuian",     MISC,lsp_zvdotphgasuian)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGAUI,       "zvdotphgaui",        MISC,lsp_zvdotphgaui)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGAUIAA,     "zvdotphgauiaa",      MISC,lsp_zvdotphgauiaa)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGAUIAN,     "zvdotphgauian",      MISC,lsp_zvdotphgauian)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGSSI,       "zvdotphgssi",        MISC,lsp_zvdotphgssi)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGSSIAA,     "zvdotphgssiaa",      MISC,lsp_zvdotphgssiaa)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGSSIAN,     "zvdotphgssian",      MISC,lsp_zvdotphgssian)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGSSMF,      "zvdotphgssmf",       MISC,lsp_zvdotphgssmf)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGSSMFAA,    "zvdotphgssmfaa",     MISC,lsp_zvdotphgssmfaa)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGSSMFAN,    "zvdotphgssmfan",     MISC,lsp_zvdotphgssmfan)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGSSUI,      "zvdotphgssui",       MISC,lsp_zvdotphgssui)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGSSUIAA,    "zvdotphgssuiaa",     MISC,lsp_zvdotphgssuiaa)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGSSUIAN,    "zvdotphgssuian",     MISC,lsp_zvdotphgssuian)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGSUI,       "zvdotphgsui",        MISC,lsp_zvdotphgsui)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGSUIAA,     "zvdotphgsuiaa",      MISC,lsp_zvdotphgsuiaa)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGSUIAN,     "zvdotphgsuian",      MISC,lsp_zvdotphgsuian)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGWASMF,     "zvdotphgwasmf",      MISC,lsp_zvdotphgwasmf)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGWASMFAA,   "zvdotphgwasmfaa",    MISC,lsp_zvdotphgwasmfaa)    /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGWASMFAN,   "zvdotphgwasmfan",    MISC,lsp_zvdotphgwasmfan)    /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGWASMFR,    "zvdotphgwasmfr",     MISC,lsp_zvdotphgwasmfr)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGWASMFRAA,  "zvdotphgwasmfraa",   MISC,lsp_zvdotphgwasmfraa)   /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGWASMFRAN,  "zvdotphgwasmfran",   MISC,lsp_zvdotphgwasmfran)   /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGWSSMF,     "zvdotphgwssmf",      MISC,lsp_zvdotphgwssmf)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGWSSMFAA,   "zvdotphgwssmfaa",    MISC,lsp_zvdotphgwssmfaa)    /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGWSSMFAN,   "zvdotphgwssmfan",    MISC,lsp_zvdotphgwssmfan)    /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGWSSMFR,    "zvdotphgwssmfr",     MISC,lsp_zvdotphgwssmfr)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGWSSMFRAA,  "zvdotphgwssmfraa",   MISC,lsp_zvdotphgwssmfraa)   /* VD, VA, VB */
BU_LSP_2(ZVDOTPHGWSSMFRAN,  "zvdotphgwssmfran",   MISC,lsp_zvdotphgwssmfran)   /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSFAAS,     "zvdotphssfaas",      MISC,lsp_zvdotphssfaas)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSFANS,     "zvdotphssfans",      MISC,lsp_zvdotphssfans)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSFRAAS,    "zvdotphssfraas",     MISC,lsp_zvdotphssfraas)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSFRANS,    "zvdotphssfrans",     MISC,lsp_zvdotphssfrans)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSFRS,      "zvdotphssfrs",       MISC,lsp_zvdotphssfrs)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSFS,       "zvdotphssfs",        MISC,lsp_zvdotphssfs)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSI,        "zvdotphssi",         MISC,lsp_zvdotphssi)         /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSIAA,      "zvdotphssiaa",       MISC,lsp_zvdotphssiaa)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSIAAS,     "zvdotphssiaas",      MISC,lsp_zvdotphssiaas)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSIAN,      "zvdotphssian",       MISC,lsp_zvdotphssian)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSIANS,     "zvdotphssians",      MISC,lsp_zvdotphssians)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSIS,       "zvdotphssis",        MISC,lsp_zvdotphssis)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSUI,       "zvdotphssui",        MISC,lsp_zvdotphssui)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSUIAA,     "zvdotphssuiaa",      MISC,lsp_zvdotphssuiaa)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSUIAAS,    "zvdotphssuiaas",     MISC,lsp_zvdotphssuiaas)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSUIAN,     "zvdotphssuian",      MISC,lsp_zvdotphssuian)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSUIANS,    "zvdotphssuians",     MISC,lsp_zvdotphssuians)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSSUIS,      "zvdotphssuis",       MISC,lsp_zvdotphssuis)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSUI,        "zvdotphsui",         MISC,lsp_zvdotphsui)         /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSUIAA,      "zvdotphsuiaa",       MISC,lsp_zvdotphsuiaa)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSUIAAS,     "zvdotphsuiaas",      MISC,lsp_zvdotphsuiaas)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSUIAN,      "zvdotphsuian",       MISC,lsp_zvdotphsuian)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSUIANS,     "zvdotphsuians",      MISC,lsp_zvdotphsuians)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHSUIS,       "zvdotphsuis",        MISC,lsp_zvdotphsuis)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASFAAS,    "zvdotphxasfaas",     MISC,lsp_zvdotphxasfaas)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASFANS,    "zvdotphxasfans",     MISC,lsp_zvdotphxasfans)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASFRAAS,   "zvdotphxasfraas",    MISC,lsp_zvdotphxasfraas)    /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASFRANS,   "zvdotphxasfrans",    MISC,lsp_zvdotphxasfrans)    /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASFRS,     "zvdotphxasfrs",      MISC,lsp_zvdotphxasfrs)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASFS,      "zvdotphxasfs",       MISC,lsp_zvdotphxasfs)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASI,       "zvdotphxasi",        MISC,lsp_zvdotphxasi)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASIAA,     "zvdotphxasiaa",      MISC,lsp_zvdotphxasiaa)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASIAAS,    "zvdotphxasiaas",     MISC,lsp_zvdotphxasiaas)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASIAN,     "zvdotphxasian",      MISC,lsp_zvdotphxasian)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASIANS,    "zvdotphxasians",     MISC,lsp_zvdotphxasians)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASIS,      "zvdotphxasis",       MISC,lsp_zvdotphxasis)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASUI,      "zvdotphxasui",       MISC,lsp_zvdotphxasui)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASUIAA,    "zvdotphxasuiaa",     MISC,lsp_zvdotphxasuiaa)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASUIAAS,   "zvdotphxasuiaas",    MISC,lsp_zvdotphxasuiaas)    /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASUIAN,    "zvdotphxasuian",     MISC,lsp_zvdotphxasuian)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASUIANS,   "zvdotphxasuians",    MISC,lsp_zvdotphxasuians)    /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXASUIS,     "zvdotphxasuis",      MISC,lsp_zvdotphxasuis)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXAUI,       "zvdotphxaui",        MISC,lsp_zvdotphxaui)        /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXAUIAA,     "zvdotphxauiaa",      MISC,lsp_zvdotphxauiaa)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXAUIAAS,    "zvdotphxauiaas",     MISC,lsp_zvdotphxauiaas)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXAUIAN,     "zvdotphxauian",      MISC,lsp_zvdotphxauian)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXAUIANS,    "zvdotphxauians",     MISC,lsp_zvdotphxauians)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXAUIS,      "zvdotphxauis",       MISC,lsp_zvdotphxauis)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGASI,      "zvdotphxgasi",       MISC,lsp_zvdotphxgasi)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGASIAA,    "zvdotphxgasiaa",     MISC,lsp_zvdotphxgasiaa)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGASIAN,    "zvdotphxgasian",     MISC,lsp_zvdotphxgasian)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGASMF,     "zvdotphxgasmf",      MISC,lsp_zvdotphxgasmf)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGASMFAA,   "zvdotphxgasmfaa",    MISC,lsp_zvdotphxgasmfaa)    /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGASMFAN,   "zvdotphxgasmfan",    MISC,lsp_zvdotphxgasmfan)    /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGASUI,     "zvdotphxgasui",      MISC,lsp_zvdotphxgasui)      /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGASUIAA,   "zvdotphxgasuiaa",    MISC,lsp_zvdotphxgasuiaa)    /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGASUIAN,   "zvdotphxgasuian",    MISC,lsp_zvdotphxgasuian)    /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGAUI,      "zvdotphxgaui",       MISC,lsp_zvdotphxgaui)       /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGAUIAA,    "zvdotphxgauiaa",     MISC,lsp_zvdotphxgauiaa)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGAUIAN,    "zvdotphxgauian",     MISC,lsp_zvdotphxgauian)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGWASMF,    "zvdotphxgwasmf",     MISC,lsp_zvdotphxgwasmf)     /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGWASMFAA,  "zvdotphxgwasmfaa",   MISC,lsp_zvdotphxgwasmfaa)   /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGWASMFAN,  "zvdotphxgwasmfan",   MISC,lsp_zvdotphxgwasmfan)   /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGWASMFR,   "zvdotphxgwasmfr",    MISC,lsp_zvdotphxgwasmfr)    /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGWASMFRAA, "zvdotphxgwasmfraa",  MISC,lsp_zvdotphxgwasmfraa)  /* VD, VA, VB */
BU_LSP_2(ZVDOTPHXGWASMFRAN, "zvdotphxgwasmfran",  MISC,lsp_zvdotphxgwasmfran)  /* VD, VA, VB */
BU_LSP_2(ZVMERGEHIH,        "zvmergehih",         MISC,lsp_zvmergehih)         /* VD, VA, VB */
BU_LSP_2(ZVMERGEHILOH,      "zvmergehiloh",       MISC,lsp_zvmergehiloh)       /* VD, VA, VB */
BU_LSP_2(ZVMERGELOH,        "zvmergeloh",         MISC,lsp_zvmergeloh)         /* VD, VA, VB */
BU_LSP_2(ZVMERGELOHIH,      "zvmergelohih",       MISC,lsp_zvmergelohih)       /* VD, VA, VB */
BU_LSP_2(ZVMHLLGWSMF,       "zvmhllgwsmf",        MISC,lsp_zvmhllgwsmf)        /* VD, VA, VB */
BU_LSP_2(ZVMHLLGWSMFAA,     "zvmhllgwsmfaa",      MISC,lsp_zvmhllgwsmfaa)      /* VD, VA, VB */
BU_LSP_2(ZVMHLLGWSMFAN,     "zvmhllgwsmfan",      MISC,lsp_zvmhllgwsmfan)      /* VD, VA, VB */
BU_LSP_2(ZVMHLLGWSMFANP,    "zvmhllgwsmfanp",     MISC,lsp_zvmhllgwsmfanp)     /* VD, VA, VB */
BU_LSP_2(ZVMHLLGWSMFR,      "zvmhllgwsmfr",       MISC,lsp_zvmhllgwsmfr)       /* VD, VA, VB */
BU_LSP_2(ZVMHLLGWSMFRAA,    "zvmhllgwsmfraa",     MISC,lsp_zvmhllgwsmfraa)     /* VD, VA, VB */
BU_LSP_2(ZVMHLLGWSMFRAN,    "zvmhllgwsmfran",     MISC,lsp_zvmhllgwsmfran)     /* VD, VA, VB */
BU_LSP_2(ZVMHLLGWSMFRANP,   "zvmhllgwsmfranp",    MISC,lsp_zvmhllgwsmfranp)    /* VD, VA, VB */
BU_LSP_2(ZVMHLLSF,          "zvmhllsf",           MISC,lsp_zvmhllsf)           /* VD, VA, VB */
BU_LSP_2(ZVMHLLSFAAS,       "zvmhllsfaas",        MISC,lsp_zvmhllsfaas)        /* VD, VA, VB */
BU_LSP_2(ZVMHLLSFANPS,      "zvmhllsfanps",       MISC,lsp_zvmhllsfanps)       /* VD, VA, VB */
BU_LSP_2(ZVMHLLSFANS,       "zvmhllsfans",        MISC,lsp_zvmhllsfans)        /* VD, VA, VB */
BU_LSP_2(ZVMHLLSFR,         "zvmhllsfr",          MISC,lsp_zvmhllsfr)          /* VD, VA, VB */
BU_LSP_2(ZVMHLLSFRAAS,      "zvmhllsfraas",       MISC,lsp_zvmhllsfraas)       /* VD, VA, VB */
BU_LSP_2(ZVMHLLSFRANPS,     "zvmhllsfranps",      MISC,lsp_zvmhllsfranps)      /* VD, VA, VB */
BU_LSP_2(ZVMHLLSFRANS,      "zvmhllsfrans",       MISC,lsp_zvmhllsfrans)       /* VD, VA, VB */
BU_LSP_2(ZVMHLLSI,          "zvmhllsi",           MISC,lsp_zvmhllsi)           /* VD, VA, VB */
BU_LSP_2(ZVMHLLSIAA,        "zvmhllsiaa",         MISC,lsp_zvmhllsiaa)         /* VD, VA, VB */
BU_LSP_2(ZVMHLLSIAAS,       "zvmhllsiaas",        MISC,lsp_zvmhllsiaas)        /* VD, VA, VB */
BU_LSP_2(ZVMHLLSIAN,        "zvmhllsian",         MISC,lsp_zvmhllsian)         /* VD, VA, VB */
BU_LSP_2(ZVMHLLSIANP,       "zvmhllsianp",        MISC,lsp_zvmhllsianp)        /* VD, VA, VB */
BU_LSP_2(ZVMHLLSIANPS,      "zvmhllsianps",       MISC,lsp_zvmhllsianps)       /* VD, VA, VB */
BU_LSP_2(ZVMHLLSIANS,       "zvmhllsians",        MISC,lsp_zvmhllsians)        /* VD, VA, VB */
BU_LSP_2(ZVMHLLSUI,         "zvmhllsui",          MISC,lsp_zvmhllsui)          /* VD, VA, VB */
BU_LSP_2(ZVMHLLSUIAA,       "zvmhllsuiaa",        MISC,lsp_zvmhllsuiaa)        /* VD, VA, VB */
BU_LSP_2(ZVMHLLSUIAAS,      "zvmhllsuiaas",       MISC,lsp_zvmhllsuiaas)       /* VD, VA, VB */
BU_LSP_2(ZVMHLLSUIAN,       "zvmhllsuian",        MISC,lsp_zvmhllsuian)        /* VD, VA, VB */
BU_LSP_2(ZVMHLLSUIANP,      "zvmhllsuianp",       MISC,lsp_zvmhllsuianp)       /* VD, VA, VB */
BU_LSP_2(ZVMHLLSUIANPS,     "zvmhllsuianps",      MISC,lsp_zvmhllsuianps)      /* VD, VA, VB */
BU_LSP_2(ZVMHLLSUIANS,      "zvmhllsuians",       MISC,lsp_zvmhllsuians)       /* VD, VA, VB */
BU_LSP_2(ZVMHLLUI,          "zvmhllui",           MISC,lsp_zvmhllui)           /* VD, VA, VB */
BU_LSP_2(ZVMHLLUIAA,        "zvmhlluiaa",         MISC,lsp_zvmhlluiaa)         /* VD, VA, VB */
BU_LSP_2(ZVMHLLUIAAS,       "zvmhlluiaas",        MISC,lsp_zvmhlluiaas)        /* VD, VA, VB */
BU_LSP_2(ZVMHLLUIAN,        "zvmhlluian",         MISC,lsp_zvmhlluian)         /* VD, VA, VB */
BU_LSP_2(ZVMHLLUIANP,       "zvmhlluianp",        MISC,lsp_zvmhlluianp)        /* VD, VA, VB */
BU_LSP_2(ZVMHLLUIANPS,      "zvmhlluianps",       MISC,lsp_zvmhlluianps)       /* VD, VA, VB */
BU_LSP_2(ZVMHLLUIANS,       "zvmhlluians",        MISC,lsp_zvmhlluians)        /* VD, VA, VB */
BU_LSP_2(ZVMHSFAAHS,        "zvmhsfaahs",         MISC,lsp_zvmhsfaahs)         /* VD, VA, VB */
BU_LSP_2(ZVMHSFANHS,        "zvmhsfanhs",         MISC,lsp_zvmhsfanhs)         /* VD, VA, VB */
BU_LSP_2(ZVMHSFH,           "zvmhsfh",            MISC,lsp_zvmhsfh)            /* VD, VA, VB */
BU_LSP_2(ZVMHSFRAAHS,       "zvmhsfraahs",        MISC,lsp_zvmhsfraahs)        /* VD, VA, VB */
BU_LSP_2(ZVMHSFRANHS,       "zvmhsfranhs",        MISC,lsp_zvmhsfranhs)        /* VD, VA, VB */
BU_LSP_2(ZVMHSFRH,          "zvmhsfrh",           MISC,lsp_zvmhsfrh)           /* VD, VA, VB */
BU_LSP_2(ZVMHSIAAHS,        "zvmhsiaahs",         MISC,lsp_zvmhsiaahs)         /* VD, VA, VB */
BU_LSP_2(ZVMHSIANHS,        "zvmhsianhs",         MISC,lsp_zvmhsianhs)         /* VD, VA, VB */
BU_LSP_2(ZVMHSIHS,          "zvmhsihs",           MISC,lsp_zvmhsihs)           /* VD, VA, VB */
BU_LSP_2(ZVMHSUIAAHS,       "zvmhsuiaahs",        MISC,lsp_zvmhsuiaahs)        /* VD, VA, VB */
BU_LSP_2(ZVMHSUIANHS,       "zvmhsuianhs",        MISC,lsp_zvmhsuianhs)        /* VD, VA, VB */
BU_LSP_2(ZVMHSUIHS,         "zvmhsuihs",          MISC,lsp_zvmhsuihs)          /* VD, VA, VB */
BU_LSP_2(ZVMHUIAAH,         "zvmhuiaah",          MISC,lsp_zvmhuiaah)          /* VD, VA, VB */
BU_LSP_2(ZVMHUIAAHS,        "zvmhuiaahs",         MISC,lsp_zvmhuiaahs)         /* VD, VA, VB */
BU_LSP_2(ZVMHUIANH,         "zvmhuianh",          MISC,lsp_zvmhuianh)          /* VD, VA, VB */
BU_LSP_2(ZVMHUIANHS,        "zvmhuianhs",         MISC,lsp_zvmhuianhs)         /* VD, VA, VB */
BU_LSP_2(ZVMHUIH,           "zvmhuih",            MISC,lsp_zvmhuih)            /* VD, VA, VB */
BU_LSP_2(ZVMHUIHS,          "zvmhuihs",           MISC,lsp_zvmhuihs)           /* VD, VA, VB */
BU_LSP_2(ZVMHULGWSMF,       "zvmhulgwsmf",        MISC,lsp_zvmhulgwsmf)        /* VD, VA, VB */
BU_LSP_2(ZVMHULGWSMFAA,     "zvmhulgwsmfaa",      MISC,lsp_zvmhulgwsmfaa)      /* VD, VA, VB */
BU_LSP_2(ZVMHULGWSMFAN,     "zvmhulgwsmfan",      MISC,lsp_zvmhulgwsmfan)      /* VD, VA, VB */
BU_LSP_2(ZVMHULGWSMFANP,    "zvmhulgwsmfanp",     MISC,lsp_zvmhulgwsmfanp)     /* VD, VA, VB */
BU_LSP_2(ZVMHULGWSMFR,      "zvmhulgwsmfr",       MISC,lsp_zvmhulgwsmfr)       /* VD, VA, VB */
BU_LSP_2(ZVMHULGWSMFRAA,    "zvmhulgwsmfraa",     MISC,lsp_zvmhulgwsmfraa)     /* VD, VA, VB */
BU_LSP_2(ZVMHULGWSMFRAN,    "zvmhulgwsmfran",     MISC,lsp_zvmhulgwsmfran)     /* VD, VA, VB */
BU_LSP_2(ZVMHULGWSMFRANP,   "zvmhulgwsmfranp",    MISC,lsp_zvmhulgwsmfranp)    /* VD, VA, VB */
BU_LSP_2(ZVMHULSF,          "zvmhulsf",           MISC,lsp_zvmhulsf)           /* VD, VA, VB */
BU_LSP_2(ZVMHULSFAAS,       "zvmhulsfaas",        MISC,lsp_zvmhulsfaas)        /* VD, VA, VB */
BU_LSP_2(ZVMHULSFANPS,      "zvmhulsfanps",       MISC,lsp_zvmhulsfanps)       /* VD, VA, VB */
BU_LSP_2(ZVMHULSFANS,       "zvmhulsfans",        MISC,lsp_zvmhulsfans)        /* VD, VA, VB */
BU_LSP_2(ZVMHULSFR,         "zvmhulsfr",          MISC,lsp_zvmhulsfr)          /* VD, VA, VB */
BU_LSP_2(ZVMHULSFRAAS,      "zvmhulsfraas",       MISC,lsp_zvmhulsfraas)       /* VD, VA, VB */
BU_LSP_2(ZVMHULSFRANPS,     "zvmhulsfranps",      MISC,lsp_zvmhulsfranps)      /* VD, VA, VB */
BU_LSP_2(ZVMHULSFRANS,      "zvmhulsfrans",       MISC,lsp_zvmhulsfrans)       /* VD, VA, VB */
BU_LSP_2(ZVMHULSI,          "zvmhulsi",           MISC,lsp_zvmhulsi)           /* VD, VA, VB */
BU_LSP_2(ZVMHULSIAA,        "zvmhulsiaa",         MISC,lsp_zvmhulsiaa)         /* VD, VA, VB */
BU_LSP_2(ZVMHULSIAAS,       "zvmhulsiaas",        MISC,lsp_zvmhulsiaas)        /* VD, VA, VB */
BU_LSP_2(ZVMHULSIAN,        "zvmhulsian",         MISC,lsp_zvmhulsian)         /* VD, VA, VB */
BU_LSP_2(ZVMHULSIANP,       "zvmhulsianp",        MISC,lsp_zvmhulsianp)        /* VD, VA, VB */
BU_LSP_2(ZVMHULSIANPS,      "zvmhulsianps",       MISC,lsp_zvmhulsianps)       /* VD, VA, VB */
BU_LSP_2(ZVMHULSIANS,       "zvmhulsians",        MISC,lsp_zvmhulsians)        /* VD, VA, VB */
BU_LSP_2(ZVMHULSUI,         "zvmhulsui",          MISC,lsp_zvmhulsui)          /* VD, VA, VB */
BU_LSP_2(ZVMHULSUIAA,       "zvmhulsuiaa",        MISC,lsp_zvmhulsuiaa)        /* VD, VA, VB */
BU_LSP_2(ZVMHULSUIAAS,      "zvmhulsuiaas",       MISC,lsp_zvmhulsuiaas)       /* VD, VA, VB */
BU_LSP_2(ZVMHULSUIAN,       "zvmhulsuian",        MISC,lsp_zvmhulsuian)        /* VD, VA, VB */
BU_LSP_2(ZVMHULSUIANP,      "zvmhulsuianp",       MISC,lsp_zvmhulsuianp)       /* VD, VA, VB */
BU_LSP_2(ZVMHULSUIANPS,     "zvmhulsuianps",      MISC,lsp_zvmhulsuianps)      /* VD, VA, VB */
BU_LSP_2(ZVMHULSUIANS,      "zvmhulsuians",       MISC,lsp_zvmhulsuians)       /* VD, VA, VB */
BU_LSP_2(ZVMHULUI,          "zvmhului",           MISC,lsp_zvmhului)           /* VD, VA, VB */
BU_LSP_2(ZVMHULUIAA,        "zvmhuluiaa",         MISC,lsp_zvmhuluiaa)         /* VD, VA, VB */
BU_LSP_2(ZVMHULUIAAS,       "zvmhuluiaas",        MISC,lsp_zvmhuluiaas)        /* VD, VA, VB */
BU_LSP_2(ZVMHULUIAN,        "zvmhuluian",         MISC,lsp_zvmhuluian)         /* VD, VA, VB */
BU_LSP_2(ZVMHULUIANP,       "zvmhuluianp",        MISC,lsp_zvmhuluianp)        /* VD, VA, VB */
BU_LSP_2(ZVMHULUIANPS,      "zvmhuluianps",       MISC,lsp_zvmhuluianps)       /* VD, VA, VB */
BU_LSP_2(ZVMHULUIANS,       "zvmhuluians",        MISC,lsp_zvmhuluians)        /* VD, VA, VB */
BU_LSP_2(ZVMHUUGWSMF,       "zvmhuugwsmf",        MISC,lsp_zvmhuugwsmf)        /* VD, VA, VB */
BU_LSP_2(ZVMHUUGWSMFAA,     "zvmhuugwsmfaa",      MISC,lsp_zvmhuugwsmfaa)      /* VD, VA, VB */
BU_LSP_2(ZVMHUUGWSMFAN,     "zvmhuugwsmfan",      MISC,lsp_zvmhuugwsmfan)      /* VD, VA, VB */
BU_LSP_2(ZVMHUUGWSMFANP,    "zvmhuugwsmfanp",     MISC,lsp_zvmhuugwsmfanp)     /* VD, VA, VB */
BU_LSP_2(ZVMHUUGWSMFR,      "zvmhuugwsmfr",       MISC,lsp_zvmhuugwsmfr)       /* VD, VA, VB */
BU_LSP_2(ZVMHUUGWSMFRAA,    "zvmhuugwsmfraa",     MISC,lsp_zvmhuugwsmfraa)     /* VD, VA, VB */
BU_LSP_2(ZVMHUUGWSMFRAN,    "zvmhuugwsmfran",     MISC,lsp_zvmhuugwsmfran)     /* VD, VA, VB */
BU_LSP_2(ZVMHUUGWSMFRANP,   "zvmhuugwsmfranp",    MISC,lsp_zvmhuugwsmfranp)    /* VD, VA, VB */
BU_LSP_2(ZVMHUUSF,          "zvmhuusf",           MISC,lsp_zvmhuusf)           /* VD, VA, VB */
BU_LSP_2(ZVMHUUSFAAS,       "zvmhuusfaas",        MISC,lsp_zvmhuusfaas)        /* VD, VA, VB */
BU_LSP_2(ZVMHUUSFANPS,      "zvmhuusfanps",       MISC,lsp_zvmhuusfanps)       /* VD, VA, VB */
BU_LSP_2(ZVMHUUSFANS,       "zvmhuusfans",        MISC,lsp_zvmhuusfans)        /* VD, VA, VB */
BU_LSP_2(ZVMHUUSFR,         "zvmhuusfr",          MISC,lsp_zvmhuusfr)          /* VD, VA, VB */
BU_LSP_2(ZVMHUUSFRAAS,      "zvmhuusfraas",       MISC,lsp_zvmhuusfraas)       /* VD, VA, VB */
BU_LSP_2(ZVMHUUSFRANPS,     "zvmhuusfranps",      MISC,lsp_zvmhuusfranps)      /* VD, VA, VB */
BU_LSP_2(ZVMHUUSFRANS,      "zvmhuusfrans",       MISC,lsp_zvmhuusfrans)       /* VD, VA, VB */
BU_LSP_2(ZVMHUUSI,          "zvmhuusi",           MISC,lsp_zvmhuusi)           /* VD, VA, VB */
BU_LSP_2(ZVMHUUSIAA,        "zvmhuusiaa",         MISC,lsp_zvmhuusiaa)         /* VD, VA, VB */
BU_LSP_2(ZVMHUUSIAAS,       "zvmhuusiaas",        MISC,lsp_zvmhuusiaas)        /* VD, VA, VB */
BU_LSP_2(ZVMHUUSIAN,        "zvmhuusian",         MISC,lsp_zvmhuusian)         /* VD, VA, VB */
BU_LSP_2(ZVMHUUSIANP,       "zvmhuusianp",        MISC,lsp_zvmhuusianp)        /* VD, VA, VB */
BU_LSP_2(ZVMHUUSIANPS,      "zvmhuusianps",       MISC,lsp_zvmhuusianps)       /* VD, VA, VB */
BU_LSP_2(ZVMHUUSIANS,       "zvmhuusians",        MISC,lsp_zvmhuusians)        /* VD, VA, VB */
BU_LSP_2(ZVMHUUSUI,         "zvmhuusui",          MISC,lsp_zvmhuusui)          /* VD, VA, VB */
BU_LSP_2(ZVMHUUSUIAA,       "zvmhuusuiaa",        MISC,lsp_zvmhuusuiaa)        /* VD, VA, VB */
BU_LSP_2(ZVMHUUSUIAAS,      "zvmhuusuiaas",       MISC,lsp_zvmhuusuiaas)       /* VD, VA, VB */
BU_LSP_2(ZVMHUUSUIAN,       "zvmhuusuian",        MISC,lsp_zvmhuusuian)        /* VD, VA, VB */
BU_LSP_2(ZVMHUUSUIANP,      "zvmhuusuianp",       MISC,lsp_zvmhuusuianp)       /* VD, VA, VB */
BU_LSP_2(ZVMHUUSUIANPS,     "zvmhuusuianps",      MISC,lsp_zvmhuusuianps)      /* VD, VA, VB */
BU_LSP_2(ZVMHUUSUIANS,      "zvmhuusuians",       MISC,lsp_zvmhuusuians)       /* VD, VA, VB */
BU_LSP_2(ZVMHUUUI,          "zvmhuuui",           MISC,lsp_zvmhuuui)           /* VD, VA, VB */
BU_LSP_2(ZVMHUUUIAA,        "zvmhuuuiaa",         MISC,lsp_zvmhuuuiaa)         /* VD, VA, VB */
BU_LSP_2(ZVMHUUUIAAS,       "zvmhuuuiaas",        MISC,lsp_zvmhuuuiaas)        /* VD, VA, VB */
BU_LSP_2(ZVMHUUUIAN,        "zvmhuuuian",         MISC,lsp_zvmhuuuian)         /* VD, VA, VB */
BU_LSP_2(ZVMHUUUIANP,       "zvmhuuuianp",        MISC,lsp_zvmhuuuianp)        /* VD, VA, VB */
BU_LSP_2(ZVMHUUUIANPS,      "zvmhuuuianps",       MISC,lsp_zvmhuuuianps)       /* VD, VA, VB */
BU_LSP_2(ZVMHUUUIANS,       "zvmhuuuians",        MISC,lsp_zvmhuuuians)        /* VD, VA, VB */
BU_LSP_2(ZVMHXLGWSMF,       "zvmhxlgwsmf",        MISC,lsp_zvmhxlgwsmf)        /* VD, VA, VB */
BU_LSP_2(ZVMHXLGWSMFAA,     "zvmhxlgwsmfaa",      MISC,lsp_zvmhxlgwsmfaa)      /* VD, VA, VB */
BU_LSP_2(ZVMHXLGWSMFAN,     "zvmhxlgwsmfan",      MISC,lsp_zvmhxlgwsmfan)      /* VD, VA, VB */
BU_LSP_2(ZVMHXLGWSMFANP,    "zvmhxlgwsmfanp",     MISC,lsp_zvmhxlgwsmfanp)     /* VD, VA, VB */
BU_LSP_2(ZVMHXLGWSMFR,      "zvmhxlgwsmfr",       MISC,lsp_zvmhxlgwsmfr)       /* VD, VA, VB */
BU_LSP_2(ZVMHXLGWSMFRAA,    "zvmhxlgwsmfraa",     MISC,lsp_zvmhxlgwsmfraa)     /* VD, VA, VB */
BU_LSP_2(ZVMHXLGWSMFRAN,    "zvmhxlgwsmfran",     MISC,lsp_zvmhxlgwsmfran)     /* VD, VA, VB */
BU_LSP_2(ZVMHXLGWSMFRANP,   "zvmhxlgwsmfranp",    MISC,lsp_zvmhxlgwsmfranp)    /* VD, VA, VB */
BU_LSP_2(ZVMHXLSF,          "zvmhxlsf",           MISC,lsp_zvmhxlsf)           /* VD, VA, VB */
BU_LSP_2(ZVMHXLSFAAS,       "zvmhxlsfaas",        MISC,lsp_zvmhxlsfaas)        /* VD, VA, VB */
BU_LSP_2(ZVMHXLSFANPS,      "zvmhxlsfanps",       MISC,lsp_zvmhxlsfanps)       /* VD, VA, VB */
BU_LSP_2(ZVMHXLSFANS,       "zvmhxlsfans",        MISC,lsp_zvmhxlsfans)        /* VD, VA, VB */
BU_LSP_2(ZVMHXLSFR,         "zvmhxlsfr",          MISC,lsp_zvmhxlsfr)          /* VD, VA, VB */
BU_LSP_2(ZVMHXLSFRAAS,      "zvmhxlsfraas",       MISC,lsp_zvmhxlsfraas)       /* VD, VA, VB */
BU_LSP_2(ZVMHXLSFRANPS,     "zvmhxlsfranps",      MISC,lsp_zvmhxlsfranps)      /* VD, VA, VB */
BU_LSP_2(ZVMHXLSFRANS,      "zvmhxlsfrans",       MISC,lsp_zvmhxlsfrans)       /* VD, VA, VB */
BU_LSP_2(ZVMHXLSI,          "zvmhxlsi",           MISC,lsp_zvmhxlsi)           /* VD, VA, VB */
BU_LSP_2(ZVMHXLSIAA,        "zvmhxlsiaa",         MISC,lsp_zvmhxlsiaa)         /* VD, VA, VB */
BU_LSP_2(ZVMHXLSIAAS,       "zvmhxlsiaas",        MISC,lsp_zvmhxlsiaas)        /* VD, VA, VB */
BU_LSP_2(ZVMHXLSIAN,        "zvmhxlsian",         MISC,lsp_zvmhxlsian)         /* VD, VA, VB */
BU_LSP_2(ZVMHXLSIANP,       "zvmhxlsianp",        MISC,lsp_zvmhxlsianp)        /* VD, VA, VB */
BU_LSP_2(ZVMHXLSIANPS,      "zvmhxlsianps",       MISC,lsp_zvmhxlsianps)       /* VD, VA, VB */
BU_LSP_2(ZVMHXLSIANS,       "zvmhxlsians",        MISC,lsp_zvmhxlsians)        /* VD, VA, VB */
BU_LSP_2(ZVMHXLSUI,         "zvmhxlsui",          MISC,lsp_zvmhxlsui)          /* VD, VA, VB */
BU_LSP_2(ZVMHXLSUIAA,       "zvmhxlsuiaa",        MISC,lsp_zvmhxlsuiaa)        /* VD, VA, VB */
BU_LSP_2(ZVMHXLSUIAAS,      "zvmhxlsuiaas",       MISC,lsp_zvmhxlsuiaas)       /* VD, VA, VB */
BU_LSP_2(ZVMHXLSUIAN,       "zvmhxlsuian",        MISC,lsp_zvmhxlsuian)        /* VD, VA, VB */
BU_LSP_2(ZVMHXLSUIANP,      "zvmhxlsuianp",       MISC,lsp_zvmhxlsuianp)       /* VD, VA, VB */
BU_LSP_2(ZVMHXLSUIANPS,     "zvmhxlsuianps",      MISC,lsp_zvmhxlsuianps)      /* VD, VA, VB */
BU_LSP_2(ZVMHXLSUIANS,      "zvmhxlsuians",       MISC,lsp_zvmhxlsuians)       /* VD, VA, VB */
BU_LSP_2(ZVMHXLUI,          "zvmhxlui",           MISC,lsp_zvmhxlui)           /* VD, VA, VB */
BU_LSP_2(ZVMHXLUIAA,        "zvmhxluiaa",         MISC,lsp_zvmhxluiaa)         /* VD, VA, VB */
BU_LSP_2(ZVMHXLUIAAS,       "zvmhxluiaas",        MISC,lsp_zvmhxluiaas)        /* VD, VA, VB */
BU_LSP_2(ZVMHXLUIAN,        "zvmhxluian",         MISC,lsp_zvmhxluian)         /* VD, VA, VB */
BU_LSP_2(ZVMHXLUIANP,       "zvmhxluianp",        MISC,lsp_zvmhxluianp)        /* VD, VA, VB */
BU_LSP_2(ZVMHXLUIANPS,      "zvmhxluianps",       MISC,lsp_zvmhxluianps)       /* VD, VA, VB */
BU_LSP_2(ZVMHXLUIANS,       "zvmhxluians",        MISC,lsp_zvmhxluians)        /* VD, VA, VB */
BU_LSP_2(ZVPKSHGWSHFRS,     "zvpkshgwshfrs",      MISC,lsp_zvpkshgwshfrs)      /* VD, VA, VB */
BU_LSP_2(ZVPKSWSHFRS,       "zvpkswshfrs",        MISC,lsp_zvpkswshfrs)        /* VD, VA, VB */
BU_LSP_2(ZVPKSWSHS,         "zvpkswshs",          MISC,lsp_zvpkswshs)          /* VD, VA, VB */
BU_LSP_2(ZVPKSWUHS,         "zvpkswuhs",          MISC,lsp_zvpkswuhs)          /* VD, VA, VB */
BU_LSP_2(ZVPKUWUHS,         "zvpkuwuhs",          MISC,lsp_zvpkuwuhs)          /* VD, VA, VB */
BU_LSP_2(ZVRLH,             "zvrlh",              MISC,lsp_zvrlh)              /* VD, VA, VB */
BU_LSP_2(ZVSELH,            "zvselh",             MISC,lsp_zvselh)             /* VD, VA, VB */
BU_LSP_2(ZVSLH,             "zvslh",              MISC,lsp_zvslh)              /* VD, VA, VB */
BU_LSP_2(ZVSLHSS,           "zvslhss",            MISC,lsp_zvslhss)            /* VD, VA, VB */
BU_LSP_2(ZVSLHUS,           "zvslhus",            MISC,lsp_zvslhus)            /* VD, VA, VB */
BU_LSP_2(ZVSRHS,            "zvsrhs",             MISC,lsp_zvsrhs)             /* VD, VA, VB */
BU_LSP_2(ZVSRHU,            "zvsrhu",             MISC,lsp_zvsrhu)             /* VD, VA, VB */
BU_LSP_2(ZVSUBFADDH,        "zvsubfaddh",         MISC,lsp_zvsubfaddh)         /* VD, VA, VB */
BU_LSP_2(ZVSUBFADDHSS,      "zvsubfaddhss",       MISC,lsp_zvsubfaddhss)       /* VD, VA, VB */
BU_LSP_2(ZVSUBFADDHX,       "zvsubfaddhx",        MISC,lsp_zvsubfaddhx)        /* VD, VA, VB */
BU_LSP_2(ZVSUBFADDHXSS,     "zvsubfaddhxss",      MISC,lsp_zvsubfaddhxss)      /* VD, VA, VB */
BU_LSP_2(ZVSUBFADDW,        "zvsubfaddw",         MISC,lsp_zvsubfaddw)         /* VD, VA, VB */
BU_LSP_2(ZVSUBFADDWSS,      "zvsubfaddwss",       MISC,lsp_zvsubfaddwss)       /* VD, VA, VB */
BU_LSP_2(ZVSUBFH,           "zvsubfh",            MISC,lsp_zvsubfh)            /* VD, VA, VB */
BU_LSP_2(ZVSUBFHSS,         "zvsubfhss",          MISC,lsp_zvsubfhss)          /* VD, VA, VB */
BU_LSP_2(ZVSUBFHUS,         "zvsubfhus",          MISC,lsp_zvsubfhus)          /* VD, VA, VB */
BU_LSP_2(ZVSUBFHX,          "zvsubfhx",           MISC,lsp_zvsubfhx)           /* VD, VA, VB */
BU_LSP_2(ZVSUBFHXSS,        "zvsubfhxss",         MISC,lsp_zvsubfhxss)         /* VD, VA, VB */
BU_LSP_2(ZVSUBFW,           "zvsubfw",            MISC,lsp_zvsubfw)            /* VD, VA, VB */
BU_LSP_2(ZVSUBFWSS,         "zvsubfwss",          MISC,lsp_zvsubfwss)          /* VD, VA, VB */
BU_LSP_2(ZVSUBFWUS,         "zvsubfwus",          MISC,lsp_zvsubfwus)          /* VD, VA, VB */
BU_LSP_1(ZABSW,             "zabsw",              MISC,lsp_zabsw)              /* VD, VA */
BU_LSP_1(ZABSWS,            "zabsws",             MISC,lsp_zabsws)             /* VD, VA */
BU_LSP_1(ZCNTLSW,           "zcntlsw",            MISC,lsp_zcntlsw)            /* VD, VA */
BU_LSP_1(ZNEGWS,            "znegws",             MISC,lsp_znegws)             /* VD, VA */
BU_LSP_1(ZRNDWH,            "zrndwh",             MISC,lsp_zrndwh)             /* VD, VA */
BU_LSP_1(ZRNDWHSS,          "zrndwhss",           MISC,lsp_zrndwhss)           /* VD, VA */
BU_LSP_1(ZSATSWSH,          "zsatswsh",           MISC,lsp_zsatswsh)           /* VD, VA */
BU_LSP_1(ZSATSWUH,          "zsatswuh",           MISC,lsp_zsatswuh)           /* VD, VA */
BU_LSP_1(ZSATSWUW,          "zsatswuw",           MISC,lsp_zsatswuw)           /* VD, VA */
BU_LSP_1(ZSATUWSH,          "zsatuwsh",           MISC,lsp_zsatuwsh)           /* VD, VA */
BU_LSP_1(ZSATUWSW,          "zsatuwsw",           MISC,lsp_zsatuwsw)           /* VD, VA */
BU_LSP_1(ZSATUWUH,          "zsatuwuh",           MISC,lsp_zsatuwuh)           /* VD, VA */
BU_LSP_1(ZUNPKWGSF,         "zunpkwgsf",          MISC,lsp_zunpkwgsf)          /* VD, VA */
BU_LSP_1(ZVABSH,            "zvabsh",             MISC,lsp_zvabsh)             /* VD, VA */
BU_LSP_1(ZVABSHS,           "zvabshs",            MISC,lsp_zvabshs)            /* VD, VA */
BU_LSP_1(ZVCNTLSH,          "zvcntlsh",           MISC,lsp_zvcntlsh)           /* VD, VA */
BU_LSP_1(ZVCNTLZH,          "zvcntlzh",           MISC,lsp_zvcntlzh)           /* VD, VA */
BU_LSP_1(ZVNEGH,            "zvnegh",             MISC,lsp_zvnegh)             /* VD, VA */
BU_LSP_1(ZVNEGHO,           "zvnegho",            MISC,lsp_zvnegho)            /* VD, VA */
BU_LSP_1(ZVNEGHOS,          "zvneghos",           MISC,lsp_zvneghos)           /* VD, VA */
BU_LSP_1(ZVNEGHS,           "zvneghs",            MISC,lsp_zvneghs)            /* VD, VA */
BU_LSP_1(ZVSATSHUH,         "zvsatshuh",          MISC,lsp_zvsatshuh)          /* VD, VA */
BU_LSP_1(ZVSATUHSH,         "zvsatuhsh",          MISC,lsp_zvsatuhsh)          /* VD, VA */
BU_LSP_1(ZVUNPKHGWSF,       "zvunpkhgwsf",        MISC,lsp_zvunpkhgwsf)        /* VD, VA */
BU_LSP_1(ZVUNPKHSF,         "zvunpkhsf",          MISC,lsp_zvunpkhsf)          /* VD, VA */
BU_LSP_1(ZVUNPKHSI,         "zvunpkhsi",          MISC,lsp_zvunpkhsi)          /* VD, VA */
BU_LSP_1(ZVUNPKHUI,         "zvunpkhui",          MISC,lsp_zvunpkhui)          /* VD, VA */


